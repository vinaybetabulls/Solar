require=(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; desc = parent = undefined; continue _function; } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var Aboutus = (function (_Component) {
    _inherits(Aboutus, _Component);

    function Aboutus() {
        _classCallCheck(this, Aboutus);

        _get(Object.getPrototypeOf(Aboutus.prototype), "constructor", this).apply(this, arguments);
    }

    _createClass(Aboutus, [{
        key: "render",
        value: function render() {
            return _react2["default"].createElement(
                _react2["default"].Fragment,
                null,
                _react2["default"].createElement(
                    "div",
                    { id: "aboutus-image" },
                    _react2["default"].createElement(
                        "div",
                        { className: "container about_txt" },
                        _react2["default"].createElement(
                            "h2",
                            null,
                            "About Us"
                        ),
                        _react2["default"].createElement(
                            "p",
                            null,
                            "Lorem Ipsum is simply dummy text of the printing and typesetting industry."
                        )
                    )
                ),
                _react2["default"].createElement(
                    "div",
                    { className: "container about_digitak" },
                    _react2["default"].createElement(
                        "h3",
                        null,
                        "Vision"
                    ),
                    _react2["default"].createElement(
                        "p",
                        null,
                        "Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum. Lo"
                    )
                ),
                _react2["default"].createElement(
                    "div",
                    { className: "container-fluid mision_bg" },
                    _react2["default"].createElement(
                        "div",
                        { className: "row" },
                        _react2["default"].createElement(
                            "div",
                            { className: "col-sm-12 text-center" },
                            _react2["default"].createElement(
                                "div",
                                { className: "about_digitak1" },
                                _react2["default"].createElement(
                                    "h3",
                                    null,
                                    "Mision"
                                ),
                                _react2["default"].createElement(
                                    "p",
                                    null,
                                    "Ltandard dummy tdummy text ever since the 1500s, typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum."
                                )
                            )
                        )
                    )
                ),
                _react2["default"].createElement(
                    "div",
                    { className: "container team-top" },
                    _react2["default"].createElement(
                        "div",
                        { className: "row" },
                        _react2["default"].createElement(
                            "div",
                            { className: "col-sm-12  about_digitak2" },
                            _react2["default"].createElement(
                                "h3",
                                null,
                                "Our Team"
                            ),
                            _react2["default"].createElement("br", null)
                        )
                    ),
                    _react2["default"].createElement(
                        "div",
                        { className: "row" },
                        _react2["default"].createElement(
                            "div",
                            { className: "col-sm-3 text-center" },
                            _react2["default"].createElement(
                                "div",
                                { className: "team_mem1" },
                                _react2["default"].createElement("img", { src: "./img/team.png", alt: "team1" }),
                                _react2["default"].createElement(
                                    "h3",
                                    null,
                                    "Name 1"
                                ),
                                _react2["default"].createElement(
                                    "h5",
                                    null,
                                    "Desigination"
                                ),
                                _react2["default"].createElement(
                                    "p",
                                    null,
                                    "Email ",
                                    _react2["default"].createElement("br", null),
                                    " +91-000-000-0000"
                                )
                            )
                        ),
                        _react2["default"].createElement(
                            "div",
                            { className: "col-sm-3 text-center" },
                            _react2["default"].createElement(
                                "div",
                                { className: "team_mem1" },
                                _react2["default"].createElement("img", { src: "./img/team.png", alt: "team2" }),
                                _react2["default"].createElement(
                                    "h3",
                                    null,
                                    "Name 1"
                                ),
                                _react2["default"].createElement(
                                    "h5",
                                    null,
                                    "Desigination"
                                ),
                                _react2["default"].createElement(
                                    "p",
                                    null,
                                    "Email ",
                                    _react2["default"].createElement("br", null),
                                    " +91-000-000-0000"
                                )
                            )
                        ),
                        _react2["default"].createElement(
                            "div",
                            { className: "col-sm-3 text-center" },
                            _react2["default"].createElement(
                                "div",
                                { className: "team_mem1" },
                                _react2["default"].createElement("img", { src: "./img/team.png", alt: "team3" }),
                                _react2["default"].createElement(
                                    "h3",
                                    null,
                                    "Name 1"
                                ),
                                _react2["default"].createElement(
                                    "h5",
                                    null,
                                    "Desigination"
                                ),
                                _react2["default"].createElement(
                                    "p",
                                    null,
                                    "Email ",
                                    _react2["default"].createElement("br", null),
                                    " +91-000-000-0000"
                                )
                            )
                        ),
                        _react2["default"].createElement(
                            "div",
                            { className: "col-sm-3 text-center" },
                            _react2["default"].createElement(
                                "div",
                                { className: "team_mem1" },
                                _react2["default"].createElement("img", { src: "./img/team.png", alt: "team4" }),
                                _react2["default"].createElement(
                                    "h3",
                                    null,
                                    "Name 1"
                                ),
                                _react2["default"].createElement(
                                    "h5",
                                    null,
                                    "Desigination"
                                ),
                                _react2["default"].createElement(
                                    "p",
                                    null,
                                    "Email ",
                                    _react2["default"].createElement("br", null),
                                    " +91-000-000-0000"
                                )
                            )
                        )
                    )
                )
            );
        }
    }]);

    return Aboutus;
})(_react.Component);

exports["default"] = Aboutus;
module.exports = exports["default"];

},{"react":undefined}],2:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, '__esModule', {
    value: true
});

var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; desc = parent = undefined; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var Contractorlist = (function (_Component) {
    _inherits(Contractorlist, _Component);

    function Contractorlist(props) {
        _classCallCheck(this, Contractorlist);

        _get(Object.getPrototypeOf(Contractorlist.prototype), 'constructor', this).call(this, props);
        this.state = {
            userdata: []
        };
        var main = this;
        fetch('admin/contractor', {
            method: "get", headers: {
                "Access-Control-Request-Headers": "*",
                "Access-Control-Request-Method": "*"
            }
        }).then(function (response) {
            return response;
        }).then(function (response) {
            return response.json();
        }).then(function (data) {
            main.setState({
                userdata: data.data
            });
        });
    }

    _createClass(Contractorlist, [{
        key: 'render',
        value: function render() {
            var single = this.state.userdata;
            return _react2['default'].createElement(
                'table',
                { className: 'table', id: 'example' },
                _react2['default'].createElement(
                    'thead',
                    null,
                    _react2['default'].createElement(
                        'tr',
                        null,
                        _react2['default'].createElement(
                            'th',
                            null,
                            'S.No'
                        ),
                        _react2['default'].createElement(
                            'th',
                            null,
                            'Name'
                        ),
                        _react2['default'].createElement(
                            'th',
                            null,
                            'Email'
                        ),
                        _react2['default'].createElement(
                            'th',
                            null,
                            'Phone No'
                        ),
                        _react2['default'].createElement(
                            'th',
                            null,
                            'button'
                        )
                    )
                ),
                _react2['default'].createElement(
                    'tbody',
                    null,
                    single.map(function (datata, key) {
                        return _react2['default'].createElement(Contractor, { data: datata, key: key });
                    })
                )
            );
        }
    }]);

    return Contractorlist;
})(_react.Component);

var Contractor = (function (_Component2) {
    _inherits(Contractor, _Component2);

    function Contractor(props) {
        _classCallCheck(this, Contractor);

        _get(Object.getPrototypeOf(Contractor.prototype), 'constructor', this).call(this, props);
    }

    _createClass(Contractor, [{
        key: 'render',
        value: function render() {
            return _react2['default'].createElement(
                'tr',
                null,
                _react2['default'].createElement(
                    'td',
                    null,
                    '1'
                ),
                _react2['default'].createElement(
                    'td',
                    null,
                    this.props.data.name
                ),
                _react2['default'].createElement(
                    'td',
                    null,
                    this.props.data.email
                ),
                _react2['default'].createElement(
                    'td',
                    null,
                    this.props.data.phone
                ),
                _react2['default'].createElement(
                    'td',
                    null,
                    '5'
                )
            );
        }
    }]);

    return Contractor;
})(_react.Component);

exports['default'] = Contractorlist;
module.exports = exports['default'];

},{"react":undefined}],3:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, '__esModule', {
    value: true
});

var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; desc = parent = undefined; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _admin_userlist = require('./admin_userlist');

var _admin_userlist2 = _interopRequireDefault(_admin_userlist);

var _admin_contractorlist = require('./admin_contractorlist');

var _admin_contractorlist2 = _interopRequireDefault(_admin_contractorlist);

var _admin_login = require('./admin_login');

var _admin_login2 = _interopRequireDefault(_admin_login);

var _qs = require('qs');

var admintoken = undefined,
    adminLogin = undefined;

var closestyle = {
    width: 0,
    main: { marginLeft: 0 }
};
var openstyle = {
    width: 200,
    main: { marginLeft: 200 }
};
var bodystyle = {
    paddingTop: 50
};

var AdminHome = (function (_Component) {
    _inherits(AdminHome, _Component);

    function AdminHome(props) {
        _classCallCheck(this, AdminHome);

        _get(Object.getPrototypeOf(AdminHome.prototype), 'constructor', this).call(this, props);
        var locationname = (0, _qs.parse)(location.search.substr(1)).page;
        if (localStorage.getItem("aurthenticate") == undefined || localStorage.getItem("aurthenticate") == "undefined") {
            admintoken = "";
            adminLogin = false;
        } else {
            var userdata = JSON.parse(localStorage.getItem("aurthenticate"));
            adminLogin = true;
            admintoken = userdata.token;
        }

        this.state = {
            style: openstyle,
            headindex: 1,
            location: locationname,
            adminlogin: adminLogin,
            token: admintoken
        };
    }

    _createClass(AdminHome, [{
        key: 'componentDidMount',
        value: function componentDidMount() {
            // $('#example').DataTable();
        }
    }, {
        key: 'open1',
        value: function open1() {
            this.setState({
                style: openstyle
            });
        }
    }, {
        key: 'close1',
        value: function close1() {
            this.setState({
                style: closestyle
            });
        }
    }, {
        key: 'changeNave1',
        value: function changeNave1(val) {
            this.setState({
                headindex: val
            });
        }
    }, {
        key: 'logout',
        value: function logout() {
            localStorage.clear();
            location.reload();
        }
    }, {
        key: 'render',
        value: function render() {
            var _this = this;

            if ((this.state.location == "USER" || this.state.location == "CONTRACTOR") && this.state.token != "" && this.state.adminlogin == true) {
                return _react2['default'].createElement(
                    'div',
                    null,
                    _react2['default'].createElement(Navigation, { style: this.state.style, open: this.open1.bind(this) }),
                    _react2['default'].createElement(Sidenav, { style: this.state.style, sdebaridex: this.state.headindex,
                        close: this.close1.bind(this),
                        close: this.close1.bind(this),
                        changeNave: this.changeNave1.bind(this),
                        logout: this.logout.bind(this)
                    }),
                    _react2['default'].createElement(
                        'div',
                        { id: 'main', style: this.state.style.main },
                        _react2['default'].createElement(
                            'div',
                            { className: 'col-md-12', style: bodystyle },
                            _react2['default'].createElement(
                                'div',
                                null,
                                (function () {
                                    switch (_this.state.location) {
                                        case "USER":
                                            return _react2['default'].createElement(_admin_userlist2['default'], null);
                                            break;
                                        case "CONTRACTOR":
                                            return _react2['default'].createElement(_admin_contractorlist2['default'], null);
                                            break;
                                        case "LOGIN":
                                            return _react2['default'].createElement(_admin_contractorlist2['default'], null);
                                            break;
                                        default:
                                            return null;
                                    }
                                })()
                            )
                        )
                    )
                );
            } else {
                return _react2['default'].createElement(_admin_login2['default'], null);
            }
        }
    }]);

    return AdminHome;
})(_react.Component);

var Navigation = (function (_Component2) {
    _inherits(Navigation, _Component2);

    function Navigation(props) {
        _classCallCheck(this, Navigation);

        _get(Object.getPrototypeOf(Navigation.prototype), 'constructor', this).call(this);
    }

    _createClass(Navigation, [{
        key: 'render',
        value: function render() {
            return _react2['default'].createElement(
                'nav',
                { className: 'navbar navbar-default navbar-fixed-top' },
                _react2['default'].createElement(
                    'div',
                    { style: this.props.style.main },
                    _react2['default'].createElement(
                        'ul',
                        { className: 'nav navbar-nav' },
                        _react2['default'].createElement(
                            'li',
                            null,
                            _react2['default'].createElement(
                                'a',
                                null,
                                _react2['default'].createElement(
                                    'span',
                                    { onClick: this.props.open.bind(this) },
                                    _react2['default'].createElement('i', { className: 'fa fa-bars ' }),
                                    'open'
                                )
                            )
                        )
                    )
                )
            );
        }
    }]);

    return Navigation;
})(_react.Component);

var Sidenav = (function (_Component3) {
    _inherits(Sidenav, _Component3);

    function Sidenav(props) {
        _classCallCheck(this, Sidenav);

        _get(Object.getPrototypeOf(Sidenav.prototype), 'constructor', this).call(this, props);
    }

    _createClass(Sidenav, [{
        key: 'render',
        value: function render() {
            return _react2['default'].createElement(
                'div',
                { id: 'mySidenav', className: 'sidenav', style: this.props.style },
                _react2['default'].createElement(
                    'div',
                    { style: { width: '200px' } },
                    _react2['default'].createElement(
                        'a',
                        { href: 'javascript:void(0)', className: 'closebtn', onClick: this.props.close.bind(this) },
                        'X'
                    )
                ),
                _react2['default'].createElement(
                    'a',
                    { href: '/admin?page=CONTRACTOR' },
                    'CONTRACTORS'
                ),
                _react2['default'].createElement(
                    'a',
                    { href: '/admin?page=USER' },
                    'USERS'
                ),
                _react2['default'].createElement(
                    'a',
                    { href: 'javascript:void(0)', onClick: this.props.logout.bind(this) },
                    'LOGOUT'
                )
            );
        }
    }]);

    return Sidenav;
})(_react.Component);

exports['default'] = AdminHome;
module.exports = exports['default'];

},{"./admin_contractorlist":2,"./admin_login":4,"./admin_userlist":5,"qs":53,"react":undefined}],4:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; desc = parent = undefined; continue _function; } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var Adminlogin = (function (_Component) {
    _inherits(Adminlogin, _Component);

    function Adminlogin(props) {
        _classCallCheck(this, Adminlogin);

        _get(Object.getPrototypeOf(Adminlogin.prototype), "constructor", this).call(this, props);
        this.handleChange = this.handleChange.bind(this);
    }

    _createClass(Adminlogin, [{
        key: "handleChange",
        value: function handleChange(event) {
            this.props.validateField(event.target.name, event.target.value);
        }
    }, {
        key: "loginvalidationverify",
        value: function loginvalidationverify() {
            if (this.state.emailValid && this.state.passwordValid) {}
        }
    }, {
        key: "render",
        value: function render() {
            return _react2["default"].createElement(
                "form",
                { onSubmit: this.props.loginsubmit.bind(this), id: "login" },
                _react2["default"].createElement(
                    "h3",
                    null,
                    "Login"
                ),
                _react2["default"].createElement(
                    "div",
                    { className: "alert alert-danger", hidden: this.props.responseerror == "" },
                    this.props.responseerror
                ),
                _react2["default"].createElement("input", { type: "email", name: "email", placeholder: "Email*", className: "form-control", onBlur: this.handleChange.bind(this), required: true }),
                _react2["default"].createElement(
                    "span",
                    { id: "error" },
                    this.props.EmailErrors
                ),
                _react2["default"].createElement("input", { type: "password", placeholder: "Password*", className: "form-control", name: "password", onBlur: this.handleChange.bind(this), required: true }),
                _react2["default"].createElement(
                    "span",
                    { id: "error" },
                    this.props.PasswordErrors
                ),
                _react2["default"].createElement(
                    "div",
                    null,
                    " ",
                    _react2["default"].createElement("input", { type: "submit", className: "btn btn-info", id: "buttonnew", value: "Login" })
                )
            );
        }
    }]);

    return Adminlogin;
})(_react.Component);

var Loginadmin = (function (_Component2) {
    _inherits(Loginadmin, _Component2);

    function Loginadmin(props) {
        _classCallCheck(this, Loginadmin);

        _get(Object.getPrototypeOf(Loginadmin.prototype), "constructor", this).call(this, props);
        this.state = {
            email: '',
            password: '',
            name: '',
            phone: '',
            emailValid: false,
            passwordValid: false,
            formErrors: { email: '', password: '', name: '', phone: '' },
            phonevalid: false,
            namevalid: false,
            loginValid: false,
            signupValid: false,
            responseerror: ""
        };
    }

    _createClass(Loginadmin, [{
        key: "loginsubmit",
        value: function loginsubmit(event) {
            event.preventDefault();
            var main = this;
            var payload = {
                email: this.state.email,
                password: this.state.password,
                type: 'ADMIN'
            };

            fetch('admin/adminLogin', {
                method: "post", headers: {
                    'Content-Type': 'application/x-www-form-urlencoded',
                    "Access-Control-Request-Headers": "*",
                    "Access-Control-Request-Method": "*"
                }, body: 'json=' + JSON.stringify(payload)
            }).then(function (response) {
                return response;
            }).then(function (response) {
                return response.json();
            }).then(function (data) {
                if (data.status == 400) {
                    main.setState({
                        userdata: data.message,
                        responseerror: data.message
                    });
                } else if (data.status == 200) {
                    var userdata;
                    userdata = { "email": data.data.email, "name": data.data.name, "token": data.token };
                    localStorage.setItem('aurthenticate', JSON.stringify(userdata));
                    localStorage.setItem('token', data.token);
                    main.setState({
                        userdata: data.data,
                        responseerror: ""
                    });
                    location.href = "/admin?page=USER";
                }
            });
        }
    }, {
        key: "validateField",
        value: function validateField(fieldName, value) {
            var fieldValidationErrors = this.state.formErrors;
            var passwordValid = this.state.passwordValid;
            var emailValid = this.state.emailValid;
            switch (fieldName) {
                case 'email':
                    emailValid = value.length >= 6;
                    fieldValidationErrors.email = emailValid ? '' : 'Invalid email ';
                    this.setState({ formErrors: fieldValidationErrors, emailValid: emailValid, email: value });
                    break;
                case 'password':
                    passwordValid = value.length >= 6;
                    fieldValidationErrors.password = passwordValid ? '' : 'Password have minimum 6 charecters ';
                    this.setState({ formErrors: fieldValidationErrors, passwordValid: passwordValid, password: value });
                    break;
                default:
                    break;
            }
        }
    }, {
        key: "render",
        value: function render() {
            return _react2["default"].createElement(
                "div",
                { className: "container" },
                _react2["default"].createElement(
                    "div",
                    { className: "col-sm-12" },
                    "  ",
                    _react2["default"].createElement(
                        "div",
                        { className: "col-sm-4" },
                        " "
                    ),
                    _react2["default"].createElement(
                        "div",
                        { className: "col-sm-4" },
                        _react2["default"].createElement(
                            "div",
                            { className: "row adminlogin", id: "box" },
                            _react2["default"].createElement(Adminlogin, { loginsubmit: this.loginsubmit.bind(this), validateField: this.validateField.bind(this),
                                EmailErrors: this.state.formErrors.email,
                                PasswordErrors: this.state.formErrors.password,
                                responseerror: this.state.responseerror
                            })
                        )
                    )
                )
            );
        }
    }]);

    return Loginadmin;
})(_react.Component);

exports["default"] = Loginadmin;
module.exports = exports["default"];

},{"react":undefined}],5:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, '__esModule', {
    value: true
});

var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; desc = parent = undefined; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _moment = require('moment');

var _moment2 = _interopRequireDefault(_moment);

var Userslist1 = (function (_Component) {
    _inherits(Userslist1, _Component);

    function Userslist1(props) {
        _classCallCheck(this, Userslist1);

        _get(Object.getPrototypeOf(Userslist1.prototype), 'constructor', this).call(this, props);
        this.state = {
            userdata: []
        };
        var main = this;
        fetch('admin/users', {
            method: "get", headers: {
                "Access-Control-Request-Headers": "*",
                "Access-Control-Request-Method": "*"
            }
        }).then(function (response) {
            return response;
        }).then(function (response) {
            return response.json();
        }).then(function (data) {
            main.setState({
                userdata: data.data
            });
        });
    }

    _createClass(Userslist1, [{
        key: 'render',
        value: function render() {
            var single = this.state.userdata;
            return _react2['default'].createElement(
                'div',
                { className: '' },
                _react2['default'].createElement(
                    'table',
                    { className: 'table', ref: 'main', id: 'example' },
                    _react2['default'].createElement(
                        'thead',
                        null,
                        _react2['default'].createElement(
                            'tr',
                            null,
                            _react2['default'].createElement(
                                'th',
                                null,
                                'S.No'
                            ),
                            _react2['default'].createElement(
                                'th',
                                null,
                                'Name'
                            ),
                            _react2['default'].createElement(
                                'th',
                                null,
                                'Email'
                            ),
                            _react2['default'].createElement(
                                'th',
                                null,
                                'Phone No'
                            ),
                            _react2['default'].createElement(
                                'th',
                                null,
                                'View trace'
                            )
                        )
                    ),
                    _react2['default'].createElement(
                        'tbody',
                        null,
                        single.map(function (datata, key) {
                            return _react2['default'].createElement(Usertab, { data: datata, key: key, sno: key });
                        })
                    )
                )
            );
        }
    }]);

    return Userslist1;
})(_react.Component);

var Usertab = (function (_Component2) {
    _inherits(Usertab, _Component2);

    function Usertab(props) {
        _classCallCheck(this, Usertab);

        _get(Object.getPrototypeOf(Usertab.prototype), 'constructor', this).call(this, props);
    }

    _createClass(Usertab, [{
        key: 'render',
        value: function render() {
            return _react2['default'].createElement(
                'tr',
                null,
                _react2['default'].createElement(
                    'td',
                    null,
                    this.props.sno + 1
                ),
                _react2['default'].createElement(
                    'td',
                    null,
                    this.props.data.name
                ),
                _react2['default'].createElement(
                    'td',
                    null,
                    this.props.data.email
                ),
                _react2['default'].createElement(
                    'td',
                    null,
                    this.props.data.phone
                ),
                _react2['default'].createElement(
                    'td',
                    null,
                    _react2['default'].createElement(
                        'button',
                        { type: 'button', className: 'btn btn-info ', 'data-toggle': 'modal', 'data-target': "#esitimations" + this.props.sno },
                        'User tracess(',
                        this.props.data.estdet.length,
                        ')'
                    ),
                    _react2['default'].createElement(
                        'div',
                        { className: 'modal fade', id: "esitimations" + this.props.sno, role: 'dialog' },
                        _react2['default'].createElement(
                            'div',
                            { className: 'modal-dialog' },
                            _react2['default'].createElement(
                                'div',
                                { className: 'modal-content', style: { width: '700px' } },
                                _react2['default'].createElement(
                                    'div',
                                    { className: 'modal-header' },
                                    _react2['default'].createElement(
                                        'button',
                                        { type: 'button', className: 'close', 'data-dismiss': 'modal' },
                                        'x'
                                    ),
                                    _react2['default'].createElement(
                                        'h4',
                                        { className: 'modal-title' },
                                        'Modal Header'
                                    )
                                ),
                                _react2['default'].createElement(
                                    'div',
                                    { className: 'modal-body' },
                                    _react2['default'].createElement(EstimatedDet, { data: this.props.data.estdet, index: this.props.sno })
                                ),
                                _react2['default'].createElement(
                                    'div',
                                    { className: 'modal-footer' },
                                    _react2['default'].createElement(
                                        'button',
                                        { type: 'button', className: 'btn btn-default', 'data-dismiss': 'modal' },
                                        'Close'
                                    )
                                )
                            )
                        )
                    )
                )
            );
        }
    }]);

    return Usertab;
})(_react.Component);

var EstimatedDet = (function (_Component3) {
    _inherits(EstimatedDet, _Component3);

    function EstimatedDet(props) {
        _classCallCheck(this, EstimatedDet);

        _get(Object.getPrototypeOf(EstimatedDet.prototype), 'constructor', this).call(this, props);
    }

    _createClass(EstimatedDet, [{
        key: 'render',
        value: function render() {
            var _this = this;

            var singledata = this.props.data;
            return _react2['default'].createElement(
                'div',
                null,
                _react2['default'].createElement(
                    'div',
                    { className: 'panel-group', id: 'accordion' },
                    singledata.map(function (res, key) {
                        return _react2['default'].createElement(
                            'div',
                            { className: 'panel panel-default', key: key },
                            _react2['default'].createElement(
                                'div',
                                { className: 'panel-heading' },
                                _react2['default'].createElement(
                                    'h4',
                                    { className: 'panel-title' },
                                    _react2['default'].createElement(
                                        'a',
                                        { 'data-toggle': 'collapse', 'data-parent': '#accordion', href: "#collapse" + _this.props.index + key },
                                        (0, _moment2['default'])(res.created_date).format('DD-MMMM-YYYY HH:mm:ss')
                                    )
                                )
                            ),
                            _react2['default'].createElement(
                                'div',
                                { id: "collapse" + _this.props.index + key, className: 'panel-collapse collapse' },
                                _react2['default'].createElement(
                                    'div',
                                    { className: 'panel-body' },
                                    _react2['default'].createElement(
                                        'div',
                                        { className: 'col-sm-12' },
                                        _react2['default'].createElement(
                                            'div',
                                            { className: 'col-sm-6' },
                                            'Address'
                                        ),
                                        ' ',
                                        _react2['default'].createElement(
                                            'div',
                                            { className: 'col-sm-6' },
                                            res.address,
                                            ' '
                                        )
                                    ),
                                    _react2['default'].createElement(
                                        'div',
                                        { className: 'col-sm-12' },
                                        _react2['default'].createElement(
                                            'div',
                                            { className: 'col-sm-6' },
                                            'Area'
                                        ),
                                        ' ',
                                        _react2['default'].createElement(
                                            'div',
                                            { className: 'col-sm-6' },
                                            parseFloat(res.area).toFixed(2)
                                        )
                                    ),
                                    _react2['default'].createElement(
                                        'div',
                                        { className: 'col-sm-12' },
                                        _react2['default'].createElement(
                                            'div',
                                            { className: 'col-sm-6' },
                                            'Coordinates'
                                        ),
                                        ' ',
                                        _react2['default'].createElement(
                                            'div',
                                            { className: 'col-sm-6', style: { wordBreak: 'break-word' } },
                                            _react2['default'].createElement(
                                                'p',
                                                null,
                                                res.coordinates
                                            )
                                        )
                                    ),
                                    _react2['default'].createElement(
                                        'div',
                                        { className: 'col-sm-12' },
                                        _react2['default'].createElement(
                                            'div',
                                            { className: 'col-sm-6' },
                                            'Estimatedamount'
                                        ),
                                        ' ',
                                        _react2['default'].createElement(
                                            'div',
                                            { className: 'col-sm-6' },
                                            parseFloat(res.estimatedamount).toFixed(2)
                                        )
                                    ),
                                    _react2['default'].createElement(
                                        'div',
                                        { className: 'col-sm-12' },
                                        _react2['default'].createElement(
                                            'div',
                                            { className: 'col-sm-6' },
                                            'Material'
                                        ),
                                        ' ',
                                        _react2['default'].createElement(
                                            'div',
                                            { className: 'col-sm-6' },
                                            res.material,
                                            ' '
                                        )
                                    ),
                                    _react2['default'].createElement(
                                        'div',
                                        { className: 'col-sm-12' },
                                        _react2['default'].createElement(
                                            'div',
                                            { className: 'col-sm-6' },
                                            'Property type'
                                        ),
                                        ' ',
                                        _react2['default'].createElement(
                                            'div',
                                            { className: 'col-sm-6' },
                                            res.property_type,
                                            ' '
                                        )
                                    ),
                                    _react2['default'].createElement(
                                        'div',
                                        { className: 'col-sm-12' },
                                        _react2['default'].createElement(
                                            'div',
                                            { className: 'col-sm-6' },
                                            'Floors'
                                        ),
                                        ' ',
                                        _react2['default'].createElement(
                                            'div',
                                            { className: 'col-sm-6' },
                                            res.floors,
                                            ' '
                                        )
                                    ),
                                    _react2['default'].createElement(
                                        'div',
                                        { className: 'col-sm-12' },
                                        _react2['default'].createElement(
                                            'div',
                                            { className: 'col-sm-6' },
                                            'Roof pitch'
                                        ),
                                        ' ',
                                        _react2['default'].createElement(
                                            'div',
                                            { className: 'col-sm-6' },
                                            res.roof_pitch,
                                            '° '
                                        )
                                    ),
                                    _react2['default'].createElement(
                                        'div',
                                        { className: 'col-sm-12' },
                                        _react2['default'].createElement(
                                            'div',
                                            { className: 'col-sm-6' },
                                            'Power consumption'
                                        ),
                                        ' ',
                                        _react2['default'].createElement(
                                            'div',
                                            { className: 'col-sm-6' },
                                            res.power,
                                            ' '
                                        )
                                    ),
                                    _react2['default'].createElement(
                                        'div',
                                        { className: 'col-sm-12' },
                                        _react2['default'].createElement(
                                            'div',
                                            { className: 'col-sm-6' },
                                            'Electricity consumption'
                                        ),
                                        ' ',
                                        _react2['default'].createElement(
                                            'div',
                                            { className: 'col-sm-6' },
                                            res.e_consumption
                                        )
                                    ),
                                    _react2['default'].createElement(
                                        'div',
                                        { className: 'col-sm-12' },
                                        _react2['default'].createElement('hr', { style: {
                                                display: 'block',
                                                overflow: 'hidden',
                                                borderStyle: 'inset',
                                                borderWidth: '1px'
                                            } })
                                    ),
                                    _react2['default'].createElement(
                                        'div',
                                        { className: 'col-sm-12' },
                                        _react2['default'].createElement(
                                            'div',
                                            { className: 'col-sm-6' },
                                            'Cost of solar Installation'
                                        ),
                                        ' ',
                                        _react2['default'].createElement(
                                            'div',
                                            { className: 'col-sm-6' },
                                            res.solar_installation_cost,
                                            ' SEK'
                                        )
                                    ),
                                    _react2['default'].createElement(
                                        'div',
                                        { className: 'col-sm-12' },
                                        _react2['default'].createElement(
                                            'div',
                                            { className: 'col-sm-6' },
                                            'Supervisor Commission'
                                        ),
                                        ' ',
                                        _react2['default'].createElement(
                                            'div',
                                            { className: 'col-sm-6' },
                                            res.supervisor_commission,
                                            ' SEK'
                                        )
                                    ),
                                    _react2['default'].createElement(
                                        'div',
                                        { className: 'col-sm-12' },
                                        _react2['default'].createElement(
                                            'div',
                                            { className: 'col-sm-6' },
                                            'Digisolar Commission'
                                        ),
                                        ' ',
                                        _react2['default'].createElement(
                                            'div',
                                            { className: 'col-sm-6' },
                                            res.digisolar_commission,
                                            ' SEK'
                                        )
                                    ),
                                    _react2['default'].createElement(
                                        'div',
                                        { className: 'col-sm-12' },
                                        _react2['default'].createElement(
                                            'div',
                                            { className: 'col-sm-6' },
                                            'Cost of solar installation with commission'
                                        ),
                                        ' ',
                                        _react2['default'].createElement(
                                            'div',
                                            { className: 'col-sm-6' },
                                            res.solar_installation_With_commission,
                                            ' SEK'
                                        )
                                    ),
                                    _react2['default'].createElement(
                                        'div',
                                        { className: 'col-sm-12' },
                                        _react2['default'].createElement(
                                            'div',
                                            { className: 'col-sm-6' },
                                            'Cost of solar installation after tax'
                                        ),
                                        ' ',
                                        _react2['default'].createElement(
                                            'div',
                                            { className: 'col-sm-6' },
                                            res.solar_installation_after_tax,
                                            ' SEK'
                                        )
                                    ),
                                    _react2['default'].createElement(
                                        'div',
                                        { className: 'col-sm-12' },
                                        _react2['default'].createElement(
                                            'div',
                                            { className: 'col-sm-6' },
                                            'Display cost of solar installation'
                                        ),
                                        ' ',
                                        _react2['default'].createElement(
                                            'div',
                                            { className: 'col-sm-6' },
                                            res.display_cost,
                                            ' SEK'
                                        )
                                    ),
                                    _react2['default'].createElement(
                                        'div',
                                        { className: 'col-sm-12' },
                                        _react2['default'].createElement(
                                            'div',
                                            { className: 'col-sm-6' },
                                            'Solar incentives'
                                        ),
                                        ' ',
                                        _react2['default'].createElement(
                                            'div',
                                            { className: 'col-sm-6' },
                                            res.solar_incentives,
                                            ' SEK'
                                        )
                                    ),
                                    _react2['default'].createElement(
                                        'div',
                                        { className: 'col-sm-12' },
                                        _react2['default'].createElement(
                                            'div',
                                            { className: 'col-sm-6' },
                                            'Battery cost'
                                        ),
                                        ' ',
                                        _react2['default'].createElement(
                                            'div',
                                            { className: 'col-sm-6' },
                                            res.battery_cost,
                                            ' SEK'
                                        )
                                    ),
                                    _react2['default'].createElement(
                                        'div',
                                        { className: 'col-sm-12' },
                                        _react2['default'].createElement(
                                            'div',
                                            { className: 'col-sm-6' },
                                            'Battery cost after tax'
                                        ),
                                        ' ',
                                        _react2['default'].createElement(
                                            'div',
                                            { className: 'col-sm-6' },
                                            res.battery_cost_after_tax,
                                            ' SEK'
                                        )
                                    ),
                                    _react2['default'].createElement(
                                        'div',
                                        { className: 'col-sm-12' },
                                        _react2['default'].createElement(
                                            'div',
                                            { className: 'col-sm-6' },
                                            'Battery incentives'
                                        ),
                                        ' ',
                                        _react2['default'].createElement(
                                            'div',
                                            { className: 'col-sm-6' },
                                            res.battery_incentives,
                                            ' SEK'
                                        )
                                    ),
                                    _react2['default'].createElement(
                                        'div',
                                        { className: 'col-sm-12' },
                                        _react2['default'].createElement(
                                            'div',
                                            { className: 'col-sm-6' },
                                            'Cost of solar installation after incentives'
                                        ),
                                        ' ',
                                        _react2['default'].createElement(
                                            'div',
                                            { className: 'col-sm-6' },
                                            res.solar_intallation_after_commission,
                                            ' SEK'
                                        )
                                    ),
                                    _react2['default'].createElement(
                                        'div',
                                        { className: 'col-sm-12' },
                                        _react2['default'].createElement(
                                            'div',
                                            { className: 'col-sm-6' },
                                            'Cost of battery after incentives'
                                        ),
                                        ' ',
                                        _react2['default'].createElement(
                                            'div',
                                            { className: 'col-sm-6' },
                                            res.battery_after_incentives,
                                            ' SEK'
                                        )
                                    ),
                                    _react2['default'].createElement(
                                        'div',
                                        { className: 'col-sm-12' },
                                        _react2['default'].createElement(
                                            'div',
                                            { className: 'col-sm-6' },
                                            'Final cost'
                                        ),
                                        ' ',
                                        _react2['default'].createElement(
                                            'div',
                                            { className: 'col-sm-6' },
                                            res.final_cost,
                                            ' SEK'
                                        )
                                    )
                                )
                            )
                        );
                    })
                )
            );
        }
    }]);

    return EstimatedDet;
})(_react.Component);

exports['default'] = Userslist1;
module.exports = exports['default'];

},{"moment":43,"react":undefined}],6:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, '__esModule', {
    value: true
});

var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; desc = parent = undefined; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _reactModal = require('react-modal');

var _reactModal2 = _interopRequireDefault(_reactModal);

var CurrencyFormat = require('react-currency-format');
//var BarChartComponent = require('./components/BarChart');
var ESaving = require('./components/ESaving');
var PanelTypes = require('./components/PanelBatteryTypes');
var TimeBooking = require('./components/DatePicker');
var customStyles = {
    content: {
        position: 'absolute',
        top: '50%',
        left: '50%',
        right: 'auto',
        bottom: 'auto',
        border: '2px solid #8ee2ae',
        transform: 'translate(-50%, -50%)',
        padding: '10px 15px 23px',
        fontSize: '16px',
        borderRadius: '20px',
        background: 'rgb(255, 255, 255)',
        overflow: 'auto',
        minHeight: '400px',
        width: '40%'
    }
};

var matstyle = {
    padding: 10,
    margin: 5,
    border: "1px solid #ccc",
    textAlign: "center",
    formmargin: { margin: 10, color: "#fff" },
    signup: {
        color: "#5bc0de",
        cursor: "pointer"
    },
    h2: {
        cursor: "pointer"
    }
};

var Roofprice = 0,
    costoflabour = 0;
var data = [{ letter: 'Jan', productivity: 100 }, { letter: 'Feb', productivity: 200 }, { letter: 'Mar', productivity: 1000 }, { letter: 'Apr', productivity: 1500 }, { letter: 'May', productivity: 1800 }, { letter: 'Jun', productivity: 2000 }, { letter: 'Jul', productivity: 2300 }, { letter: 'Aug', productivity: 2094 }, { letter: 'Sep', productivity: 2966 }, { letter: 'Oct', productivity: 2153 }, { letter: 'Nov', productivity: 2772 }, { letter: 'Dec', productivity: 2025 }];
var TaxOnInstallation,
    soalrIncentives,
    batteryCost,
    taxOnBattery,
    BatteryCostAfterTax,
    batteryIncentives,
    comissionOnBatteryIncentives,
    digisolarComission,
    finalCost,
    capacity,
    panelPrice,
    solarPanelsCount,
    CostOfSolarPanel,
    costPerOptimizer = 408,
    costOfInverterPrice,
    totalInstalledPowerInkw,
    CostOfOptimizer,
    skylift,
    CostOfKit = 800,
    CostOfMountingSystem,
    CostOfCable = 540,
    transportCost,
    laborCost,
    electricianCost = 5000,
    digisolarComission = 10000,
    superVisorCommission = 15000,
    installationBeforeTaxNoComm,
    installationBeforeTax,
    installationAfterIncentives,
    displayPrice,
    batteryAfterIncentive;

var Areaestimate = (function (_Component) {
    _inherits(Areaestimate, _Component);

    function Areaestimate(props) {
        var _this = this;

        _classCallCheck(this, Areaestimate);

        _get(Object.getPrototypeOf(Areaestimate.prototype), 'constructor', this).call(this, props);
        window.scrollTo(0, 0);
        this.state = {
            stepIndex: 1,
            finished: false,
            clear: {},
            previous: {},
            next: {},
            haveaccount: false,
            email: '',
            password: '',
            name: '',
            phone: '',
            emailValid: false,
            passwordValid: false,
            formErrors: { email: '', password: '', name: '', phone: '' },
            phonevalid: false,
            namevalid: false,
            loginValid: false,
            signupValid: false,
            rooferrormessage: "",
            responceerror: "",
            responceerrorlogin: "",
            responceerrorsignup: "",
            date: new Date(),
            loaded: false,
            text: 'Estimerar pris...',
            color: 'rgb(46, 109, 164)',
            emailtext: 'Offert per mail',
            popup: false,
            panelpopup: false,
            modalIsOpen: false,
            PanelModalIsOpen: false,
            closeUpdatePanelmodal: false,
            datepicker: true,
            calenderIndex: 1,
            panelsCount: parseInt(this.props.panelsCount),
            battery: this.props.battery,
            panel: this.props.panel,
            e_consumption: this.props.e_consumption,
            packetName: this.props.packetName,
            elpris: 0.9,
            elprisökning: 2,
            updation: false,
            annualProduction: this.props.annualoutput,
            availableslots: ['9:00', '9:30', '10:00', '10:30', '11:00', '11:30', '12:00', '12:30', '13:00', '13:30', '14:00', '14:30', '15:00', '15:30', '16:00', '17:00'],
            pannel_capacity: this.props.pannel_capacity,
            battery1: this.props.battery1,
            solarIncentives: this.props.solarIncentives,
            batteryIncentvies: this.props.batteryIncentvies,
            finalCost: this.props.finalCost
        };
        if (this.props.logedin) {
            setTimeout(function () {
                _this.setState({
                    text: 'Letar leverantörer i ditt område'
                });
            }, 2000);
            setTimeout(function () {
                _this.setState({
                    loaded: true
                });
            }, 5000);
        }
        this.modalpopup = this.modalpopup.bind(this);
        _reactModal2['default'].setAppElement('body');
        this.openModal = this.openModal.bind(this);
        this.afterOpenModal = this.afterOpenModal.bind(this);
        this.closeModal = this.closeModal.bind(this);
        this.nextPage = this.nextPage.bind(this);
        this.previous = this.previous.bind(this);
        this.modalPanelpopup = this.modalPanelpopup.bind(this);
        this.openPanelModal = this.openPanelModal.bind(this);
        this.afterOpenPanelModal = this.afterOpenPanelModal.bind(this);
        this.closePanelModal = this.closeModal.bind(this);
        this.initialValues = this.initialValues.bind(this);
        if (this.props.logedin === true) {
            if (this.props.area === "" || this.props.material === "") {
                alert("Something Went wrong please try again");
            } else {
                this.initialValues(this.state.panel, this.state.battery, this.state.panelsCount);
            }
        }
    }

    _createClass(Areaestimate, [{
        key: 'initialValues',
        value: function initialValues(p, bat, count) {
            var Total_roof_area = sessionStorage.getItem('roofarea');
            var solar_roof_area = JSON.parse(sessionStorage.getItem('roofAreaPkt')).normalRoofArea;
            var normal_roof_area = Total_roof_area - solar_roof_area;
            var cost_of_solar_roof_tiles = solar_roof_area * parseInt(sessionStorage.getItem('panel_cost'));
            var cost_of_normal_roof_tiles = normal_roof_area * parseInt(sessionStorage.getItem('panel_cost'));
            var Cost_of_material = cost_of_solar_roof_tiles + cost_of_normal_roof_tiles;
            var labor_cost = Total_roof_area * 250;
            var floorPlan = this.props.floors.split("plan")[0].trim();
            var floor = parseInt(floorPlan);
            var skylift = 0;
            if (floor <= 2) {
                skylift = 0;
            } else if (floor >= 3) {
                skylift = 5200;
            }
            var Cost_of_electrician = 6000;
            var Cost_of_cable = 540;
            var Cost_of_transport = 10000;
            var Cost_of_container = 10000;
            var capcity_price = 0;
            var cost_of_invertor = 0;
            if (this.props.pannel_name === 'Midsommar soltak') {

                cost_of_invertor = Total_roof_area * this.props.pannel_capacity;
            } else if (this.props.pannel_name == 'Bendars sunwave palema') {
                cost_of_invertor = Total_roof_area * this.props.pannel_capacity;
            }
            if (cost_of_invertor < 4000) {
                capcity_price = 9560;
            }
            if (cost_of_invertor > 4001 && cost_of_invertor < 5000) {
                capcity_price = 9660;
            }
            if (cost_of_invertor > 5001 && cost_of_invertor < 7000) {
                capcity_price = 11500;
            }
            if (cost_of_invertor > 7001 && cost_of_invertor < 8000) {
                capcity_price = 11830;
            }
            if (cost_of_invertor > 8001 && cost_of_invertor < 10000) {
                capcity_price = 12760;
            }
            if (cost_of_invertor > 10001 && cost_of_invertor < 15000) {
                capcity_price = 11350;
            }
            if (cost_of_invertor > 15001 && cost_of_invertor < 17000) {
                capcity_price = 11620;
            }
            if (cost_of_invertor > 17001 && cost_of_invertor < 25000) {
                capcity_price = 16100;
            }
            if (cost_of_invertor > 25001 && cost_of_invertor < 27600) {
                capcity_price = 16100;
            }
            if (cost_of_invertor > 27600) {
                capcity_price = 20000;
            }

            var Cost_of_solar_roof_installation_before_tax = Cost_of_material + cost_of_invertor + Cost_of_cable + Cost_of_container + Cost_of_transport + Cost_of_electrician + skylift;
            var Digisolar_commission = Cost_of_solar_roof_installation_before_tax * 15 / 100;
            if (Digisolar_commission > 15000) {
                Digisolar_commission = 15000;
            }
            var Cost_of_solar_roof_installatio_with_commission = Cost_of_solar_roof_installation_before_tax + Digisolar_commission;
            var Tax_on_solar_roof_installation = Cost_of_solar_roof_installatio_with_commission * 25 / 100;
            var Cost_of_solar_roof_installation_after_tax = Cost_of_solar_roof_installatio_with_commission + Tax_on_solar_roof_installation;
            var Display_cost_of_solar_roof_installation = Cost_of_solar_roof_installation_after_tax * 93 / 100;
            var Solar_incentives = Display_cost_of_solar_roof_installation * 20 / 100;
            var Battery_cost = 84485;

            var Tax_on_battery = 84485 * 25 / 100;

            var Battery_cost_after_tax = Battery_cost + Tax_on_battery;
            sessionStorage.setItem('battery', Battery_cost_after_tax);
            var Battery_incentives = 50000;
            var Cost_of_solar_roof_installation_after_incentives = Display_cost_of_solar_roof_installation - Solar_incentives;
            sessionStorage.setItem('solarIncentives', Cost_of_solar_roof_installation_after_incentives);
            var Cost_of_battery_after_incentives = Battery_cost_after_tax - Battery_incentives;
            sessionStorage.setItem('batteryIncentives', Cost_of_battery_after_incentives);
            var Final_cost = Cost_of_solar_roof_installation_after_incentives + Cost_of_battery_after_incentives;
            sessionStorage.setItem('final_cost', Final_cost);
            var _self = this;
            if (p === 'Standard' || _self.state.panel === 'Standard') {
                capacity = 270;
                panelPrice = 1180;
            } else if (p === 'Premium' || _self.state.panel === 'Premium') {
                capacity = 320;
                panelPrice = 1400;
            }

            if (count) {
                solarPanelsCount = parseInt(count);
            } else if (_self.state.panelsCount) {
                solarPanelsCount = parseInt(_self.state.panelsCount);
            } else {
                solarPanelsCount = parseInt(_self.state.e_consumption).replace(' kWh', '') / capacity;
            }
            CostOfSolarPanel = solarPanelsCount * panelPrice;
            costOfInverterPrice = inverterPrice();
            totalInstalledPowerInkw = solarPanelsCount * capacity / 1000;
            function inverterPrice() {
                var costOfInverter = solarPanelsCount * capacity;
                if (costOfInverter <= 4000) {
                    return 9560;
                } else if (costOfInverter >= 4001 && costOfInverter <= 5000) {
                    return 9660;
                } else if (costOfInverter >= 5001 && costOfInverter <= 7000) {
                    return 11500;
                } else if (costOfInverter >= 7001 && costOfInverter <= 8000) {
                    return 11830;
                } else if (costOfInverter >= 8001 && costOfInverter <= 10000) {
                    return 12760;
                } else if (costOfInverter >= 10001 && costOfInverter <= 15000) {
                    return 11350;
                } else if (costOfInverter >= 15001 && costOfInverter <= 17000) {
                    return 11620;
                } else if (costOfInverter >= 17001 && costOfInverter <= 25000) {
                    return 16100;
                } else if (costOfInverter >= 25001 && costOfInverter <= 27600) {
                    return 16400;
                } else {
                    return 20000;
                }
            }

            CostOfOptimizer = solarPanelsCount * costPerOptimizer;
            CostOfMountingSystem = solarPanelsCount * mounting();
            function mounting() {
                switch (_self.props.material) {
                    case 'Lertegeltak':
                        return 260;
                    case 'Plåt':
                        return 200;
                    case 'Betongtegeltak':
                        return 260;
                    case 'Falsad plåt / Bandad Plåt':
                        return 200;
                    case 'Papptak':
                        return 300;
                }
            }

            function transportingCost() {
                switch (true) {
                    case 10 <= solarPanelsCount && solarPanelsCount <= 24:
                        return 3000;
                    case 25 <= solarPanelsCount && solarPanelsCount <= 44:
                        return 3700;
                    case 45 <= solarPanelsCount && solarPanelsCount <= 64:
                        return 4500;
                    case 65 <= solarPanelsCount && solarPanelsCount <= 84:
                        return 5700;
                    case 85 <= solarPanelsCount && solarPanelsCount <= 104:
                        return 7000;
                    case 105 <= solarPanelsCount && solarPanelsCount <= 124:
                        return 8000;
                    case 125 <= solarPanelsCount && solarPanelsCount <= 144:
                        return 9700;
                    case 145 <= solarPanelsCount && solarPanelsCount <= 164:
                        return 11000;
                    case 165 <= solarPanelsCount && solarPanelsCount <= 184:
                        return 11000;
                    case 185 <= solarPanelsCount && solarPanelsCount <= 204:
                        return 12000;
                    case 185 < solarPanelsCount:
                        var calculatedPrice = 25 * (solarPanelsCount - 205);
                        return 12000 + calculatedPrice;
                }
            }

            function labourCost() {
                switch (true) {
                    case solarPanelsCount <= 12:
                        return 12000;
                    case 13 <= solarPanelsCount && solarPanelsCount <= 20:
                        return 13000;
                    case 21 <= solarPanelsCount && solarPanelsCount <= 24:
                        return 14000;
                    case 25 <= solarPanelsCount && solarPanelsCount <= 28:
                        return 1500;
                    case 29 <= solarPanelsCount && solarPanelsCount <= 32:
                        return 16000;
                    case 33 <= solarPanelsCount && solarPanelsCount <= 36:
                        return 17000;
                    case 37 <= solarPanelsCount && solarPanelsCount <= 40:
                        return 18000;
                    case 41 <= solarPanelsCount && solarPanelsCount <= 48:
                        return 19000;
                    case 49 <= solarPanelsCount && solarPanelsCount <= 60:
                        return 20000;
                    case 61 <= solarPanelsCount && solarPanelsCount <= 72:
                        return 22000;
                    case 73 <= solarPanelsCount && solarPanelsCount <= 84:
                        return 24000;
                    case 84 < solarPanelsCount:
                        var calculatedPrice = 270 * (solarPanelsCount - 84);
                        return 24000 + calculatedPrice;
                }
            }
            if (this.props.floors === '2 plan' || this.props.floors === '1 plan') {
                skylift = 0;
            } else {
                skylift = 5200;
            }
            transportCost = transportingCost();
            laborCost = labourCost();
            installationBeforeTaxNoComm = CostOfSolarPanel + CostOfOptimizer + costOfInverterPrice + CostOfMountingSystem + CostOfKit + CostOfCable + transportCost + laborCost + skylift + electricianCost;
            superVisorCommission = installationBeforeTaxNoComm * 11 / 100;
            digisolarComission = installationBeforeTaxNoComm * 11 / 100;
            if (superVisorCommission > 12500) {
                superVisorCommission = 12500;
            }
            if (digisolarComission > 12500) {
                digisolarComission = 12500;
            }
            installationBeforeTax = installationBeforeTaxNoComm + superVisorCommission + digisolarComission;
            TaxOnInstallation = installationBeforeTax * 25 / 100;
            Roofprice = installationBeforeTax + TaxOnInstallation;
            displayPrice = Roofprice * 93 / 100;
            soalrIncentives = displayPrice * 0.2;
            if (bat === 'Premium') {
                batteryCost = 84485;
                batteryIncentives = 50000;
            } else if (bat === 'Inga') {
                batteryCost = 0;
                batteryIncentives = 0;
            }
            taxOnBattery = batteryCost * 25 / 100;
            BatteryCostAfterTax = batteryCost + taxOnBattery;
            comissionOnBatteryIncentives = 15000;
            installationAfterIncentives = displayPrice - soalrIncentives;
            batteryAfterIncentive = BatteryCostAfterTax - batteryIncentives;
            finalCost = installationAfterIncentives + batteryAfterIncentive;
            this.SendEstimation(this);
        }
    }, {
        key: 'closePanelModal',
        value: function closePanelModal() {
            this.setState({ PanelModalIsOpen: false, panelpopup: false, closeUpdatePanelmodal: false });
        }
    }, {
        key: 'modalPanelpopup',
        value: function modalPanelpopup() {
            this.setState({ panelpopup: true, PanelModalIsOpen: true });
        }
    }, {
        key: 'openPanelModal',
        value: function openPanelModal() {}
    }, {
        key: 'afterOpenPanelModal',
        value: function afterOpenPanelModal() {}
    }, {
        key: 'openModal',
        value: function openModal() {}
    }, {
        key: 'update',
        value: function update(panel, battery, Count, packetName, annualOpt) {
            this.setState({
                closeUpdatePanelmodal: true,
                packetName: packetName,
                battery: battery,
                panel: panel,
                panelsCount: parseInt(Count),
                annualProduction: parseInt(annualOpt).toFixed(0)
            });
            sessionStorage.setItem('battery', battery);
            sessionStorage.setItem('panel', panel);
            sessionStorage.setItem('panelsCount', Count);
            sessionStorage.setItem('packetName', packetName);
            if (panel.length && battery.length) {
                var token = localStorage.getItem("token");
                var email = JSON.parse(localStorage.getItem("userdata")).email;
                var payload = {
                    area: this.props.area,
                    coordinates: JSON.stringify(this.props.coordinates),
                    slope: this.props.style,
                    estimatedamount: Roofprice,
                    material: this.props.material,
                    slopecost: this.props.roofstylecost,
                    materialcost: this.props.materialcost,
                    labour: costoflabour,
                    address: this.props.address,
                    email: email,
                    power: this.props.power,
                    e_consumption: this.state.e_consumption,
                    floors: this.props.floors,
                    roof_pitch: this.props.roof_pitch,
                    property_type: this.props.property_type,
                    battery: battery,
                    panel: panel,
                    panelsCount: Count,
                    solar_installation_cost: installationBeforeTaxNoComm,
                    supervisor_commission: superVisorCommission,
                    digisolar_commission: digisolarComission,
                    solar_installation_With_commission: installationBeforeTax,
                    solar_installation_after_tax: Roofprice,
                    display_cost: displayPrice,
                    solar_incentives: soalrIncentives,
                    battery_cost: batteryCost,
                    battery_cost_after_tax: BatteryCostAfterTax,
                    battery_incentives: comissionOnBatteryIncentives,
                    solar_intallation_after_commission: installationAfterIncentives,
                    battery_after_incentives: batteryAfterIncentive,
                    final_cost: finalCost
                };

                fetch('users/estimation', {
                    method: "post",
                    crossDomain: true,
                    headers: {
                        'Content-Type': 'application/x-www-form-urlencoded',
                        "Access-Control-Request-Headers": "*",
                        "Access-Control-Request-Method": "*"
                    }, body: 'json=' + JSON.stringify(payload) + '&token=' + token
                }).then(function (response) {
                    return response;
                }).then(function (response) {
                    return response.json();
                }).then(function (data) {
                    localStorage.setItem('userdata', JSON.stringify(data));
                });
            }
            this.initialValues(panel, battery, Count);
        }
    }, {
        key: 'afterOpenModal',
        value: function afterOpenModal() {}
    }, {
        key: 'closeModal',
        value: function closeModal() {
            this.setState({ modalIsOpen: false, PanelModalIsOpen: false, closeUpdatePanelmodal: false });
        }
    }, {
        key: 'modalpopup',
        value: function modalpopup() {
            this.setState({ popup: true, modalIsOpen: true, calenderIndex: 1 });
        }
    }, {
        key: 'nextPage',
        value: function nextPage(date, time) {
            var _this2 = this;

            if (this.state.calenderIndex > 3) {
                this.closeModal.bind(this);
            } else if (this.state.calenderIndex === 2) {
                var bookPayload;

                (function () {
                    var _self = _this2,
                        userdata = JSON.parse(localStorage.getItem('userdata'));
                    if (userdata && userdata._id) {
                        bookPayload = {
                            "contractor_id": "5d1350199880ff94115dedde",
                            "user_id": userdata._id,
                            "booking_slot_date": date,
                            "booking_slot_time": time
                        };

                        fetch('/contractor/book-appointment', {
                            method: "post",
                            crossDomain: true,
                            headers: {
                                'Content-Type': 'application/json',
                                "Access-Control-Request-Headers": "*",
                                "Access-Control-Request-Method": "*"

                            },
                            body: JSON.stringify(bookPayload)
                        }).then(function (res) {
                            return res.json();
                        }).then(function (result) {
                            _self.setState({
                                availableslots: data,
                                datepicker: false, calenderIndex: parseInt(_self.state.calenderIndex) + 1
                            });
                        });
                    }
                })();
            } else {
                this.setState({ datepicker: false, calenderIndex: parseInt(this.state.calenderIndex) + 1 });
            }
        }
    }, {
        key: 'previous',
        value: function previous() {
            this.setState({ calenderIndex: this.state.calenderIndex - 1 });
        }
    }, {
        key: 'colorChange',
        value: function colorChange(id) {
            if (id === 'offert' || id === 'telefon') {
                var btn = document.getElementById(id);
                btn.setAttribute("disabled", "disabled");
                btn.setAttribute("style", "background-color: #0FAF32");
                btn.innerHTML = "Inväntar offert...";
            }
        }
    }, {
        key: 'signupsubmit',
        value: function signupsubmit(event) {
            var _this3 = this;

            event.preventDefault();
            if (this.state.formErrors.email === "" && this.state.formErrors.name === "" && this.state.formErrors.phone === "" && this.state.formErrors.password === "") {
                var est;
                var payload;

                (function () {
                    var main = _this3;
                    est = {
                        area: _this3.props.area,
                        coordinates: _this3.props.coordinates,
                        slope: _this3.props.style,
                        estimatedamount: Roofprice,
                        material: _this3.props.material,
                        slopecost: _this3.props.roofstylecost,
                        materialcost: _this3.props.materialcost,
                        labour: costoflabour,
                        address: _this3.props.address,
                        power: _this3.props.power,
                        e_consumption: _this3.state.e_consumption,
                        battery: _this3.state.battery,
                        panel: _this3.state.panel,
                        panelsCount: _this3.state.panelsCount,
                        solar_installation_cost: installationBeforeTaxNoComm,
                        supervisor_commission: superVisorCommission,
                        digisolar_commission: digisolarComission,
                        solar_installation_With_commission: installationBeforeTax,
                        solar_installation_after_tax: Roofprice,
                        display_cost: displayPrice,
                        solar_incentives: soalrIncentives,
                        battery_cost: batteryCost,
                        battery_cost_after_tax: BatteryCostAfterTax,
                        battery_incentives: comissionOnBatteryIncentives,
                        solar_intallation_after_commission: installationAfterIncentives,
                        battery_after_incentives: batteryAfterIncentive,
                        final_cost: finalCost
                    };
                    payload = {
                        name: _this3.state.name,
                        email: _this3.state.email,
                        password: _this3.state.password,
                        phone: _this3.state.phone,
                        type: 'USER',
                        estdet: est
                    };

                    fetch('users/registeruser', {
                        method: "post", headers: {
                            'Content-Type': 'application/x-www-form-urlencoded',
                            "Access-Control-Request-Headers": "*",
                            "Access-Control-Request-Method": "*"
                        }, body: 'json=' + JSON.stringify(payload)
                    }).then(function (response) {
                        return response;
                    }).then(function (response) {
                        return response.json();
                    }).then(function (data) {
                        if (data.status === 400) {
                            main.setState({
                                responceerrorsignup: data.message
                            });
                        } else if (data.status === 200) {
                            localStorage.setItem('userdata', JSON.stringify(data.data));
                            localStorage.setItem('token', data.token);
                            main.setState({
                                userdata: data.data,
                                responceerrorsignup: ""
                            });
                            main.props.loginmodefun(true);
                        }
                    });
                })();
            } else {
                alert("Please Fill All Mandatory Fields ");
            }
        }
    }, {
        key: 'loginsubmit',
        value: function loginsubmit(event) {
            debugger;
            event.preventDefault();
            var main = this;
            var payload = {
                email: this.state.email,
                phone: this.state.phone,
                password: '123456',
                type: 'USER'
            };

            fetch('users/userLogin', {
                method: "post", headers: {
                    'Content-Type': 'application/x-www-form-urlencoded',
                    "Access-Control-Request-Headers": "*",
                    "Access-Control-Request-Method": "*"
                }, body: 'json=' + JSON.stringify(payload)
            }).then(function (response) {
                return response;
            }).then(function (response) {
                return response.json();
            }).then(function (data) {
                if (data.status === 400) {
                    main.setState({
                        responceerrorlogin: data.message
                    });
                } else if (data.status === 200) {
                    var userdata;
                    main.setState({
                        responceerrorlogin: ""
                    });
                    if (data.data.type === "USER") {
                        userdata = {
                            "type": data.data.type,
                            "estdet": data.data.estdet,
                            "updateon": data.data.updateon,
                            "cratedon": data.data.cratedon,
                            "email": data.data.email, "phone": data.data.phone, "name": data.data.name, "token": data.token
                        };
                        var payload = {
                            area: main.props.area,
                            coordinates: main.props.coordinates,
                            slope: main.props.style,
                            estimatedamount: Roofprice,
                            material: main.props.material,
                            slopecost: main.props.roofstylecost,
                            materialcost: main.props.materialcost,
                            labour: costoflabour,
                            address: main.props.address,
                            email: data.data.email,
                            property_type: main.props.property_type,
                            floors: main.props.floors,
                            roof_pitch: main.props.roof_pitch,
                            power: main.props.power,
                            e_consumption: main.state.e_consumption,
                            battery: main.props.battery,
                            panel: main.props.panel,
                            panelsCount: main.props.panelsCount,
                            solar_installation_cost: installationBeforeTaxNoComm,
                            supervisor_commission: superVisorCommission,
                            digisolar_commission: digisolarComission,
                            solar_installation_With_commission: installationBeforeTax,
                            solar_installation_after_tax: Roofprice,
                            display_cost: displayPrice,
                            solar_incentives: soalrIncentives,
                            battery_cost: batteryCost,
                            battery_cost_after_tax: BatteryCostAfterTax,
                            battery_incentives: comissionOnBatteryIncentives,
                            solar_intallation_after_commission: installationAfterIncentives,
                            battery_after_incentives: batteryAfterIncentive,
                            final_cost: finalCost
                        };
                        fetch('users/estimation', {
                            method: "post",
                            crossDomain: true,
                            headers: {
                                'Content-Type': 'application/x-www-form-urlencoded',
                                "Access-Control-Request-Headers": "*",
                                "Access-Control-Request-Method": "*"

                            }, body: 'json=' + JSON.stringify(payload) + '&token=' + data.token
                        }).then(function (response) {
                            return response;
                        }).then(function (response) {
                            return response.json();
                        }).then(function (data) {
                            if (data.status === 400) {
                                main.setState({
                                    responceerror: data.message
                                });
                            } else if (data.status === 200) {
                                main.setState({
                                    responceerror: ""
                                });
                            }
                        });
                    } else if (data.data.type === "CONTRACTOR") {
                        userdata = {
                            "type": data.data.type,
                            "organization_number": data.data, organization_number: organization_number,
                            "address": data.data.address,
                            "website": data.data.website,
                            "businessname": data.data.businessname,
                            "updateon": data.data.updateon,
                            "cratedon": data.data.cratedon,
                            "email": data.data.email, "phone": data.data.phone, "name": data.data.name, "token": data.toke
                        };
                    }
                    localStorage.setItem('userdata', JSON.stringify(userdata));
                    localStorage.setItem('token', data.toke);
                    main.setState({
                        userdata: data.data
                    });
                    main.props.loginmodefun(true);
                }
            });
        }
    }, {
        key: 'validateField',
        value: function validateField(fieldName, value) {
            var fieldValidationErrors = this.state.formErrors;
            var passwordValid = this.state.passwordValid;
            var phonevalid = this.state.phonevalid;
            var namevalid = this.state.namevalid;
            var emailValid = this.state.emailValid;

            switch (fieldName) {
                case 'email':
                    emailValid = value.length >= 6;
                    fieldValidationErrors.email = emailValid ? '' : ' is invalid';
                    this.setState({ formErrors: fieldValidationErrors, emailValid: emailValid, email: value });
                    break;
                case 'password':
                    passwordValid = value.length >= 6;
                    fieldValidationErrors.password = passwordValid ? '' : ' is too short';
                    this.setState({ formErrors: fieldValidationErrors, passwordValid: passwordValid, password: value });
                    break;
                case 'phone':
                    phonevalid = value.length === 10;
                    fieldValidationErrors.phone = phonevalid ? '' : 'phone number  is too short';
                    this.setState({ formErrors: fieldValidationErrors, phonevalid: phonevalid, phone: value });
                    break;
                case 'name':
                    namevalid = value.length >= 6;
                    fieldValidationErrors.name = namevalid ? '' : ' is too short';
                    this.setState({ formErrors: fieldValidationErrors, namevalid: namevalid, name: value });
                    break;
                default:
                    break;
            }
        }
    }, {
        key: 'haveaccountfunction',
        value: function haveaccountfunction() {
            this.setState({
                haveaccount: !this.state.haveaccount
            });
        }
    }, {
        key: 'SendEstimation',
        value: function SendEstimation() {
            var token = localStorage.getItem("token");

            var userdata = JSON.parse(localStorage.getItem("userdata"));
            if (userdata) {
                var email = userdata.email;
            };
            var payload = {
                area: this.props.area,
                coordinates: JSON.stringify(this.props.coordinates),
                slope: this.props.style,
                estimatedamount: Roofprice,
                material: this.props.material,
                slopecost: this.props.roofstylecost,
                materialcost: this.props.materialcost,
                labour: costoflabour,
                address: this.props.address,
                email: email,
                power: this.props.power,
                e_consumption: this.state.e_consumption,
                floors: this.props.floors,
                roof_pitch: this.props.roof_pitch,
                property_type: this.props.property_type,
                battery: this.state.battery,
                panel: this.state.panel,
                panelsCount: this.state.panelsCount,
                solar_installation_cost: installationBeforeTaxNoComm,
                supervisor_commission: superVisorCommission,
                digisolar_commission: digisolarComission,
                solar_installation_With_commission: installationBeforeTax,
                solar_installation_after_tax: Roofprice,
                display_cost: displayPrice,
                solar_incentives: soalrIncentives,
                battery_cost: batteryCost,
                battery_cost_after_tax: BatteryCostAfterTax,
                battery_incentives: comissionOnBatteryIncentives,
                solar_intallation_after_commission: installationAfterIncentives,
                battery_after_incentives: batteryAfterIncentive,
                final_cost: finalCost
            };

            fetch('users/estimation', {
                method: "post",
                crossDomain: true,
                headers: {
                    'Content-Type': 'application/x-www-form-urlencoded',
                    "Access-Control-Request-Headers": "*",
                    "Access-Control-Request-Method": "*"

                }, body: 'json=' + JSON.stringify(payload) + '&token=' + token
            }).then(function (response) {
                return response;
            }).then(function (response) {
                return response.json();
            }).then(function (data) {
                localStorage.setItem('userdata', JSON.stringify(data));
            });
        }
    }, {
        key: 'componentWillUpdate',
        value: function componentWillUpdate(nextProps, nextState) {
            if (nextState.closeUpdatePanelmodal && !nextState.modalIsOpen) {
                setTimeout(this.initialValues(nextState.panel, nextState.battery, nextState.panelsCount), 2000);
                this.closeModal();
            }
        }
    }, {
        key: 'render',
        value: function render() {
            if (this.props.logedin === true && this.props.componentindex === "7") {
                return _react2['default'].createElement(
                    'div',
                    { className: 'container' },
                    !this.state.loaded ? _react2['default'].createElement(
                        'div',
                        { className: 'container-fluid p-b-5' },
                        _react2['default'].createElement(
                            'video',
                            { className: 'loader', id: 'background-video', loop: true, autoPlay: true, muted: true },
                            _react2['default'].createElement('source', { src: './img/animation2.mp4', type: 'video/mp4' })
                        ),
                        _react2['default'].createElement(
                            'div',
                            { className: 'loaderText' },
                            _react2['default'].createElement(
                                'p',
                                null,
                                this.state.text
                            )
                        )
                    ) : this.state.PanelModalIsOpen ? _react2['default'].createElement(PanelTypes, { battery: this.state.battery,
                        panel: this.state.panel,
                        packetsCount: this.state.panelsCount,
                        packetName: this.state.packetName,
                        update: this.update.bind(this),
                        location: this.props.roofaddress,
                        e_consumption: this.state.e_consumption,
                        closeModal: this.closeModal.bind(this),
                        closeUpdatePanelmodal: this.state.closeUpdatePanelmodal,
                        PanelModalIsOpen: this.state.PanelModalIsOpen,
                        roof_pitch: this.props.roof_pitch,
                        surfaceDirection: this.props.surfaceDirection,
                        annualProduction: this.state.annualProduction,
                        area: this.props.area }) : _react2['default'].createElement(
                        'div',
                        null,
                        _react2['default'].createElement(
                            'div',
                            { className: '', id: 'estimateright', style: { marginTop: 20 } },
                            _react2['default'].createElement(
                                'div',
                                { className: 'col-sm-12 col-md-12 panding_no' },
                                _react2['default'].createElement(
                                    'div',
                                    { className: 'col-sm-6 col-md-6' },
                                    _react2['default'].createElement(
                                        'div',
                                        { className: 'area-estimation-card-heading font-quicksand ' },
                                        'Ditt tak'
                                    ),
                                    _react2['default'].createElement(
                                        'div',
                                        { className: 'col-md-12 col-sm-12 area-estimation-cards' },
                                        _react2['default'].createElement(
                                            'h3',
                                            { id: 'cap-address' },
                                            this.props.address
                                        ),
                                        _react2['default'].createElement(
                                            'div',
                                            { className: 'col-sm-12 panding_no' },
                                            _react2['default'].createElement(
                                                'div',
                                                { className: 'col-sm-12 col-md-6 panding_no' },
                                                _react2['default'].createElement(
                                                    'h3',
                                                    { id: 'eststep2' },
                                                    _react2['default'].createElement(
                                                        'strong',
                                                        { className: 'uppercase f15' },
                                                        'Fastighetstyp: '
                                                    ),
                                                    _react2['default'].createElement('br', null),
                                                    _react2['default'].createElement(
                                                        'b',
                                                        { className: 'f15' },
                                                        this.props.property_type
                                                    )
                                                )
                                            ),
                                            _react2['default'].createElement(
                                                'div',
                                                { className: 'col-sm-12 col-md-6 panding_no' },
                                                _react2['default'].createElement(
                                                    'h3',
                                                    { id: 'eststep2' },
                                                    _react2['default'].createElement(
                                                        'strong',
                                                        { className: 'uppercase f15' },
                                                        'Årlig elförbrukning : '
                                                    ),
                                                    _react2['default'].createElement('br', null),
                                                    _react2['default'].createElement(
                                                        'b',
                                                        { className: 'f15' },
                                                        this.state.e_consumption
                                                    )
                                                )
                                            )
                                        ),
                                        _react2['default'].createElement(
                                            'div',
                                            { className: 'col-sm-12 col-md-12 panding_no' },
                                            _react2['default'].createElement(
                                                'div',
                                                { className: 'col-sm-12 col-md-6  panding_no' },
                                                _react2['default'].createElement(
                                                    'h3',
                                                    { id: 'eststep2' },
                                                    _react2['default'].createElement(
                                                        'strong',
                                                        { className: 'uppercase f15' },
                                                        'Taklutning : '
                                                    ),
                                                    _react2['default'].createElement('br', null),
                                                    _react2['default'].createElement(
                                                        'b',
                                                        { className: 'f15' },
                                                        this.props.roof_pitch,
                                                        ' ° '
                                                    )
                                                )
                                            ),
                                            _react2['default'].createElement(
                                                'div',
                                                { className: 'col-sm-12 col-md-6 panding_no' },
                                                _react2['default'].createElement(
                                                    'h3',
                                                    { id: 'eststep2' },
                                                    _react2['default'].createElement(
                                                        'strong',
                                                        { className: 'uppercase f15' },
                                                        'Huvudsäkring : '
                                                    ),
                                                    _react2['default'].createElement('br', null),
                                                    _react2['default'].createElement(
                                                        'b',
                                                        { className: 'f15' },
                                                        this.props.power
                                                    )
                                                )
                                            )
                                        ),
                                        _react2['default'].createElement(
                                            'div',
                                            { className: 'col-sm-12  col-md-12 panding_no' },
                                            _react2['default'].createElement(
                                                'div',
                                                { className: 'col-sm-12 col-md-6 panding_no' },
                                                _react2['default'].createElement(
                                                    'h3',
                                                    { id: 'eststep2' },
                                                    _react2['default'].createElement(
                                                        'strong',
                                                        { className: 'uppercase f15' },
                                                        'Takmaterial : '
                                                    ),
                                                    _react2['default'].createElement('br', null),
                                                    _react2['default'].createElement(
                                                        'b',
                                                        { className: 'f15' },
                                                        this.props.material
                                                    )
                                                )
                                            )
                                        )
                                    )
                                ),
                                _react2['default'].createElement(
                                    'div',
                                    { className: 'col-sm-6 col-md-6' },
                                    _react2['default'].createElement(
                                        'div',
                                        { className: 'area-estimation-card-heading font-quicksand ' },
                                        'Din Produkt'
                                    ),
                                    _react2['default'].createElement(
                                        'div',
                                        { className: 'col-md-12 col-sm-12 estimation-panel-card' },
                                        sessionStorage.getItem('selected_panel') == 'solpanel' ? _react2['default'].createElement(
                                            'div',
                                            { className: 'col-sm-12 col-md-6 card-content-bottom' },
                                            _react2['default'].createElement(
                                                'div',
                                                { className: 'col-sm-12' },
                                                _react2['default'].createElement(
                                                    'h3',
                                                    { id: 'eststep2' },
                                                    _react2['default'].createElement(
                                                        'strong',
                                                        { className: 'uppercase f15' },
                                                        'SOLPANEL: '
                                                    ),
                                                    _react2['default'].createElement('br', null),
                                                    _react2['default'].createElement(
                                                        'b',
                                                        { className: 'f15' },
                                                        this.state.panel
                                                    )
                                                )
                                            ),
                                            _react2['default'].createElement(
                                                'div',
                                                { className: 'col-sm-12 col-md-12' },
                                                _react2['default'].createElement(
                                                    'h3',
                                                    { id: 'eststep2' },
                                                    _react2['default'].createElement(
                                                        'strong',
                                                        { className: 'uppercase f15' },
                                                        'ANTal PANEL:'
                                                    ),
                                                    _react2['default'].createElement('br', null),
                                                    _react2['default'].createElement(
                                                        'b',
                                                        { className: 'f15' },
                                                        this.state.panelsCount
                                                    )
                                                )
                                            ),
                                            _react2['default'].createElement(
                                                'div',
                                                { className: 'col-sm-12  col-md-12 ' },
                                                _react2['default'].createElement(
                                                    'h3',
                                                    { id: 'eststep2' },
                                                    _react2['default'].createElement(
                                                        'strong',
                                                        { className: 'uppercase f15' },
                                                        'BATTERI '
                                                    ),
                                                    _react2['default'].createElement('br', null),
                                                    _react2['default'].createElement(
                                                        'b',
                                                        { className: 'f15' },
                                                        this.state.battery
                                                    )
                                                )
                                            )
                                        ) : _react2['default'].createElement(
                                            'div',
                                            { className: 'col-sm-12 col-md-6 card-content-bottom' },
                                            _react2['default'].createElement(
                                                'div',
                                                { className: 'col-sm-12' },
                                                _react2['default'].createElement(
                                                    'h3',
                                                    { id: 'eststep2' },
                                                    _react2['default'].createElement(
                                                        'strong',
                                                        { className: 'uppercase f15' },
                                                        'SOlTAK '
                                                    ),
                                                    _react2['default'].createElement('br', null),
                                                    _react2['default'].createElement(
                                                        'b',
                                                        { className: 'f15' },
                                                        sessionStorage.getItem('pannel_name')
                                                    )
                                                )
                                            ),
                                            _react2['default'].createElement(
                                                'div',
                                                { className: 'col-sm-12 col-md-12' },
                                                _react2['default'].createElement(
                                                    'h3',
                                                    { id: 'eststep2' },
                                                    _react2['default'].createElement(
                                                        'strong',
                                                        { className: 'uppercase f15' },
                                                        'SOlTAK  YTA'
                                                    ),
                                                    _react2['default'].createElement('br', null),
                                                    _react2['default'].createElement(
                                                        'b',
                                                        { className: 'f15' },
                                                        sessionStorage.getItem('panel_max_pkt')
                                                    )
                                                )
                                            ),
                                            _react2['default'].createElement(
                                                'div',
                                                { className: 'col-sm-12  col-md-12 ' },
                                                _react2['default'].createElement(
                                                    'h3',
                                                    { id: 'eststep2' },
                                                    _react2['default'].createElement(
                                                        'strong',
                                                        { className: 'uppercase f15' },
                                                        'Batteri '
                                                    ),
                                                    _react2['default'].createElement('br', null),
                                                    _react2['default'].createElement(
                                                        'b',
                                                        { className: 'f15' },
                                                        this.state.battery
                                                    )
                                                )
                                            )
                                        ),
                                        _react2['default'].createElement(
                                            'div',
                                            { className: 'col-md-6 col-sm-12 align-text-center' },
                                            _react2['default'].createElement(
                                                'button',
                                                { className: 'panel-card-button', onClick: this.modalPanelpopup },
                                                'Byt Produkt'
                                            )
                                        )
                                    )
                                )
                            ),
                            _react2['default'].createElement(
                                'div',
                                { className: 'col-sm-12 col-md-12 panding_no' },
                                _react2['default'].createElement(
                                    'div',
                                    { className: 'col-sm-6 col-md-6' },
                                    _react2['default'].createElement(
                                        'div',
                                        { className: 'area-estimation-card-heading font-quicksand ' },
                                        'Elproduktion'
                                    ),
                                    _react2['default'].createElement(
                                        'div',
                                        { className: 'col-md-12 col-sm-12 estimation-panel-card elproduction' },
                                        _react2['default'].createElement(
                                            'div',
                                            { className: 'col-sm-12 panding_no ' },
                                            _react2['default'].createElement(
                                                'div',
                                                { className: 'col-sm-12 col-md-6 panding_no' },
                                                _react2['default'].createElement(
                                                    'h3',
                                                    { id: 'eststep2', className: 'align-text-center' },
                                                    _react2['default'].createElement(
                                                        'b',
                                                        { className: 'f15' },
                                                        'installerade effekt '
                                                    ),
                                                    _react2['default'].createElement('br', null),
                                                    _react2['default'].createElement(
                                                        'div',
                                                        { className: 'per-panel' },
                                                        totalInstalledPowerInkw,
                                                        ' kWh'
                                                    )
                                                )
                                            ),
                                            _react2['default'].createElement(
                                                'div',
                                                { className: 'col-sm-12 col-md-6 panding_no' },
                                                _react2['default'].createElement(
                                                    'h3',
                                                    { id: 'eststep2', className: 'align-text-center' },
                                                    _react2['default'].createElement(
                                                        'b',
                                                        { className: 'f15' },
                                                        'Årsproduktion '
                                                    ),
                                                    _react2['default'].createElement('br', null),
                                                    _react2['default'].createElement(
                                                        'div',
                                                        { className: 'per-panel' },
                                                        this.state.annualProduction,
                                                        ' kWh'
                                                    )
                                                )
                                            )
                                        )
                                    )
                                ),
                                _react2['default'].createElement(
                                    'div',
                                    { className: 'col-sm-6 col-md-6' },
                                    _react2['default'].createElement(
                                        'div',
                                        { className: 'area-estimation-card-heading font-quicksand' },
                                        'Pris '
                                    ),
                                    _react2['default'].createElement(
                                        'div',
                                        { className: 'col-md-12 panding_no' },
                                        _react2['default'].createElement(
                                            'div',
                                            { className: 'table-bg  pris_height' },
                                            _react2['default'].createElement(
                                                'table',
                                                { className: 'table amount-total' },
                                                _react2['default'].createElement(
                                                    'tbody',
                                                    null,
                                                    _react2['default'].createElement(
                                                        'tr',
                                                        { className: 'font-weignt-700' },
                                                        _react2['default'].createElement(
                                                            'td',
                                                            { className: 'table-cat padding-left-none padding-right-none w48' },
                                                            'Solpanelsanlägging  och installation'
                                                        ),
                                                        _react2['default'].createElement(
                                                            'td',
                                                            { className: 'table-price-width' },
                                                            _react2['default'].createElement(CurrencyFormat, { style: { fontSize: 25 }, value: parseFloat(displayPrice.toFixed(0)), displayType: 'text', thousandSeparator: ' ' }),
                                                            _react2['default'].createElement(
                                                                'span',
                                                                { className: 'f21' },
                                                                ' SEK'
                                                            )
                                                        )
                                                    ),
                                                    _react2['default'].createElement(
                                                        'tr',
                                                        { className: 'font-weignt-700' },
                                                        _react2['default'].createElement(
                                                            'td',
                                                            { className: 'table-cat padding-left-none w48' },
                                                            'Batteri'
                                                        ),
                                                        _react2['default'].createElement(
                                                            'td',
                                                            { className: 'table-price-width' },
                                                            _react2['default'].createElement(CurrencyFormat, { style: { fontSize: 25 }, value: parseFloat(BatteryCostAfterTax.toFixed(0)), displayType: 'text', thousandSeparator: ' ' }),
                                                            _react2['default'].createElement(
                                                                'span',
                                                                { className: 'f21' },
                                                                ' SEK'
                                                            )
                                                        )
                                                    ),
                                                    _react2['default'].createElement(
                                                        'tr',
                                                        { className: ' font-weignt-700' },
                                                        _react2['default'].createElement(
                                                            'td',
                                                            { className: 'table-cat padding-left-none w48' },
                                                            'Solcellsstöd'
                                                        ),
                                                        _react2['default'].createElement(
                                                            'td',
                                                            { className: 'table-price-width' },
                                                            _react2['default'].createElement(CurrencyFormat, { style: { fontSize: 25 }, value: -parseFloat(soalrIncentives.toFixed(0)), displayType: 'text', thousandSeparator: ' ' }),
                                                            _react2['default'].createElement(
                                                                'span',
                                                                { className: 'f21' },
                                                                ' SEK'
                                                            )
                                                        )
                                                    ),
                                                    _react2['default'].createElement(
                                                        'tr',
                                                        { className: 'total-border font-weignt-700' },
                                                        _react2['default'].createElement(
                                                            'td',
                                                            { className: 'table-cat padding-left-none w48' },
                                                            'Batteristöd'
                                                        ),
                                                        _react2['default'].createElement(
                                                            'td',
                                                            { className: 'table-price-width' },
                                                            _react2['default'].createElement(CurrencyFormat, { style: { fontSize: 25 }, value: batteryIncentives > 0 ? -parseFloat(batteryIncentives.toFixed(0)) : batteryIncentives, displayType: 'text', thousandSeparator: ' ' }),
                                                            _react2['default'].createElement(
                                                                'span',
                                                                { className: 'f21' },
                                                                ' SEK'
                                                            )
                                                        )
                                                    ),
                                                    _react2['default'].createElement(
                                                        'tr',
                                                        { className: 'font-weignt-700' },
                                                        _react2['default'].createElement(
                                                            'td',
                                                            { className: 'table-cat padding-left-none w48' },
                                                            'Total(inkl moms)'
                                                        ),
                                                        _react2['default'].createElement(
                                                            'td',
                                                            { className: 'table-price-width' },
                                                            _react2['default'].createElement(CurrencyFormat, { style: { fontSize: 25 }, value: parseFloat(finalCost.toFixed(0)), displayType: 'text', thousandSeparator: ' ' }),
                                                            _react2['default'].createElement(
                                                                'span',
                                                                { className: 'f21' },
                                                                ' SEK'
                                                            )
                                                        )
                                                    )
                                                )
                                            )
                                        )
                                    )
                                )
                            ),
                            _react2['default'].createElement(
                                'div',
                                { className: 'col-md-12 col-sm-12 align-text-center align-appointment' },
                                _react2['default'].createElement(
                                    'button',
                                    { id: 'appointment-button', className: 'btn btn-info', onClick: this.modalpopup },
                                    'Boka Besiktning'
                                )
                            ),
                            this.state.popup ? _react2['default'].createElement(
                                'div',
                                null,
                                _react2['default'].createElement(
                                    _reactModal2['default'],
                                    {
                                        isOpen: this.state.modalIsOpen,
                                        onAfterOpen: this.afterOpenModal,
                                        onRequestClose: this.closeModal,
                                        style: customStyles,
                                        contentLabel: 'Example Modal' },
                                    _react2['default'].createElement(
                                        'div',
                                        { className: 'col-md-12 panding_no' },
                                        _react2['default'].createElement(
                                            'div',
                                            { className: 'boka-heading' },
                                            'Boka Besiktning'
                                        ),
                                        _react2['default'].createElement(
                                            'div',
                                            { className: 'f-right' },
                                            _react2['default'].createElement(
                                                'button',
                                                { className: 'close-button ', onClick: this.closeModal },
                                                'X'
                                            )
                                        )
                                    ),
                                    _react2['default'].createElement(TimeBooking, { previous: this.previous.bind(this),
                                        closeModal: this.closeModal.bind(this),
                                        calenderIndex: this.state.calenderIndex,
                                        nextPage: this.nextPage.bind(this) })
                                )
                            ) : null,
                            _react2['default'].createElement(
                                'div',
                                { className: 'col-sm-12 col-md-12 panding_no' },
                                _react2['default'].createElement(
                                    'div',
                                    { className: 'area-estimation-card-heading font-quicksand' },
                                    'Solekonomi'
                                ),
                                _react2['default'].createElement(ESaving, { roof_pitch: this.props.roof_pitch, packetName: this.props.packetName, roofarea: this.props.area, location: this.props.roofaddress, direction: this.props.surfaceDirection, noOfPanels: this.state.panelsCount, capacity: capacity, estimatedAmount: displayPrice })
                            ),
                            _react2['default'].createElement(
                                'div',
                                { className: 'col-sm-12 col-md-12 panding_no' },
                                _react2['default'].createElement(
                                    'div',
                                    { className: 'col-sm-12 panding_no align-text-center  m-50' },
                                    _react2['default'].createElement(
                                        'h2',
                                        { style: { color: '#064f70', fontWeight: 'bold', fontFamily: 'quicksand' } },
                                        'Våra installationer innehåller alltid'
                                    )
                                ),
                                _react2['default'].createElement(
                                    'div',
                                    { className: 'col-sm-12' },
                                    _react2['default'].createElement(
                                        'div',
                                        { className: ' col-sm-6 separet_width' },
                                        _react2['default'].createElement(
                                            'h4',
                                            null,
                                            _react2['default'].createElement('img', { src: './img/Check-Mark-2.png', alt: 'Check-Mark-2' }),
                                            _react2['default'].createElement(
                                                'b',
                                                null,
                                                'Allt material ink solpaneler '
                                            ),
                                            ' '
                                        ),
                                        _react2['default'].createElement(
                                            'h4',
                                            null,
                                            _react2['default'].createElement('img', { src: './img/Check-Mark-2.png', alt: 'Check-Mark' }),
                                            _react2['default'].createElement(
                                                'b',
                                                null,
                                                'Komplett installation inkl elektriker'
                                            )
                                        ),
                                        _react2['default'].createElement(
                                            'h4',
                                            null,
                                            _react2['default'].createElement('img', { src: './img/Check-Mark-2.png', alt: 'CheckMark' }),
                                            _react2['default'].createElement(
                                                'b',
                                                null,
                                                'Transport till mottagaradress '
                                            ),
                                            ' '
                                        ),
                                        _react2['default'].createElement(
                                            'h4',
                                            null,
                                            _react2['default'].createElement('img', { src: './img/Check-Mark-2.png', alt: 'CheckedMark' }),
                                            _react2['default'].createElement(
                                                'b',
                                                null,
                                                'Ställningsmontage & taksäkerhet '
                                            ),
                                            ' '
                                        ),
                                        _react2['default'].createElement(
                                            'h4',
                                            null,
                                            _react2['default'].createElement('img', { src: './img/Check-Mark-2.png', alt: 'CheckerMark' }),
                                            _react2['default'].createElement(
                                                'b',
                                                null,
                                                'Projektledning och dimensionering '
                                            ),
                                            ' '
                                        ),
                                        _react2['default'].createElement(
                                            'h4',
                                            null,
                                            _react2['default'].createElement('img', { src: './img/Check-Mark-2.png', alt: 'Check' }),
                                            _react2['default'].createElement(
                                                'b',
                                                null,
                                                'För och färdiganmälan till nätägare '
                                            ),
                                            ' '
                                        ),
                                        _react2['default'].createElement(
                                            'h4',
                                            null,
                                            _react2['default'].createElement('img', { src: './img/Check-Mark-2.png', alt: 'CheckM' }),
                                            _react2['default'].createElement(
                                                'b',
                                                null,
                                                'Uppkoppling av växelriktare för övervakning av produktion'
                                            ),
                                            ' '
                                        )
                                    ),
                                    _react2['default'].createElement(
                                        'div',
                                        { className: 'col-sm-6', style: { textAlign: 'center', alignItems: 'center' } },
                                        _react2['default'].createElement('img', { className: 'img-responsive', alt: 'image', src: './img/solar_estimation.png' })
                                    )
                                )
                            )
                        )
                    )
                );
            } else {
                return _react2['default'].createElement(
                    'div',
                    null,
                    _react2['default'].createElement(
                        'div',
                        { className: 'container-fluid bg-white' },
                        _react2['default'].createElement(
                            'div',
                            { className: 'shdow_wt' },
                            _react2['default'].createElement(
                                'div',
                                { className: 'row ' },
                                _react2['default'].createElement(
                                    'div',
                                    { className: 'col-sm-12 text-center login_txt' },
                                    _react2['default'].createElement('img', { src: './img/disolar_logo_black.png', alt: 'disolar_logo_black' }),
                                    _react2['default'].createElement(
                                        'h3',
                                        null,
                                        'Din prisuppskattning är färdig!'
                                    ),
                                    _react2['default'].createElement(
                                        'h4',
                                        null,
                                        'Vi har nu genererat din prisuppskattning baserat på följande uppgifter:'
                                    )
                                ),
                                _react2['default'].createElement(
                                    'div',
                                    { className: 'col-sm-12 text-center registrn_add  login_txt' },
                                    _react2['default'].createElement(
                                        'p',
                                        null,
                                        _react2['default'].createElement(
                                            'span',
                                            { className: 'addres_txt' },
                                            'Adress :'
                                        ),
                                        ' ',
                                        this.props.address
                                    ),
                                    _react2['default'].createElement(
                                        'p',
                                        null,
                                        _react2['default'].createElement(
                                            'span',
                                            { className: 'addres_txt' },
                                            'Fastighetstyp :'
                                        ),
                                        ' ',
                                        this.props.property_type
                                    ),
                                    _react2['default'].createElement(
                                        'p',
                                        null,
                                        _react2['default'].createElement(
                                            'span',
                                            { className: 'addres_txt' },
                                            'Taklutning :'
                                        ),
                                        ' ',
                                        this.props.roof_pitch,
                                        ' °'
                                    ),
                                    _react2['default'].createElement(
                                        'p',
                                        null,
                                        _react2['default'].createElement(
                                            'span',
                                            { className: 'addres_txt' },
                                            'Takmaterial :'
                                        ),
                                        '  ',
                                        this.props.material
                                    ),
                                    _react2['default'].createElement(
                                        'p',
                                        null,
                                        _react2['default'].createElement(
                                            'span',
                                            { className: 'addres_txt' },
                                            'Årlig elförbrukning :'
                                        ),
                                        ' ',
                                        this.state.e_consumption
                                    ),
                                    _react2['default'].createElement(
                                        'p',
                                        null,
                                        _react2['default'].createElement(
                                            'span',
                                            { className: 'addres_txt' },
                                            'Huvudsäkring :'
                                        ),
                                        ' ',
                                        this.props.power
                                    ),
                                    _react2['default'].createElement(
                                        'h4',
                                        null,
                                        'Vänligen skriv in din e-postadress för att få tillgång till din prisuppskattning'
                                    )
                                )
                            ),
                            _react2['default'].createElement(
                                'div',
                                { className: 'row form_bottom1' },
                                _react2['default'].createElement(
                                    'div',
                                    { className: 'col-sm-12' },
                                    _react2['default'].createElement(
                                        'div',
                                        { className: 'form_top2' },
                                        _react2['default'].createElement(
                                            'div',
                                            null,
                                            _react2['default'].createElement(GetDetails, { haveaccountfunction: this.haveaccountfunction.bind(this),
                                                haveaccount: this.state.haveaccount,
                                                loginsubmit: this.loginsubmit.bind(this),
                                                signupnsubmit: this.signupsubmit.bind(this),
                                                responceerror: this.state.responceerror,
                                                responceerrorlogin: this.state.responceerrorlogin,
                                                responceerrorsignup: this.state.responceerrorsignup,
                                                validateField: this.validateField.bind(this)
                                            })
                                        )
                                    )
                                )
                            )
                        )
                    ),
                    _react2['default'].createElement(
                        'div',
                        { className: 'container-fluid' },
                        _react2['default'].createElement(
                            'div',
                            { className: 'row' },
                            _react2['default'].createElement(
                                'div',
                                { className: 'btmimg' },
                                _react2['default'].createElement('img', { src: './img/bootm-im.jpg', className: 'img-responsive', alt: 'bootm-im.jpg' })
                            )
                        )
                    )
                );
            }
        }
    }]);

    return Areaestimate;
})(_react.Component);

var GetDetails = (function (_Component2) {
    _inherits(GetDetails, _Component2);

    function GetDetails(props) {
        _classCallCheck(this, GetDetails);

        _get(Object.getPrototypeOf(GetDetails.prototype), 'constructor', this).call(this, props);
    }

    _createClass(GetDetails, [{
        key: 'handleChange',
        value: function handleChange(event) {
            this.props.validateField(event.target.name, event.target.value);
        }
    }, {
        key: 'render',
        value: function render() {
            return _react2['default'].createElement(
                'form',
                { onSubmit: this.props.loginsubmit.bind(this), id: 'login', style: matstyle.formmargin },
                _react2['default'].createElement(
                    'div',
                    { className: 'alert alert-danger', hidden: this.props.responceerrorlogin === "" },
                    this.props.responceerrorlogin
                ),
                _react2['default'].createElement('input', { type: 'email', name: 'email', placeholder: 'E-postadress*', className: 'form-control input-bg', onBlur: this.handleChange.bind(this), required: true }),
                _react2['default'].createElement(
                    'span',
                    { id: 'error' },
                    this.props.EmailErrors
                ),
                _react2['default'].createElement('input', { type: 'text', name: 'phone', className: 'form-control input-phonebg', placeholder: 'Telefonnummer*', onBlur: this.handleChange.bind(this), required: true }),
                _react2['default'].createElement(
                    'span',
                    { id: 'error' },
                    this.props.PhoneErrors
                ),
                _react2['default'].createElement('br', null),
                _react2['default'].createElement(
                    'div',
                    null,
                    ' ',
                    _react2['default'].createElement('input', { type: 'submit', className: 'form-control btn-primary', value: 'Vidare' })
                )
            );
        }
    }]);

    return GetDetails;
})(_react.Component);

exports['default'] = Areaestimate;
module.exports = exports['default'];

},{"./components/DatePicker":9,"./components/ESaving":11,"./components/PanelBatteryTypes":13,"react":undefined,"react-currency-format":59,"react-modal":88}],7:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, '__esModule', {
  value: true
});

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var AppContext = _react2['default'].createContext();
exports['default'] = AppContext;
module.exports = exports['default'];

},{"react":undefined}],8:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, '__esModule', {
    value: true
});

var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; desc = parent = undefined; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _Context = require('./Context');

var _Context2 = _interopRequireDefault(_Context);

var ContextProvider = (function (_Component) {
    _inherits(ContextProvider, _Component);

    function ContextProvider(props) {
        _classCallCheck(this, ContextProvider);

        _get(Object.getPrototypeOf(ContextProvider.prototype), 'constructor', this).call(this, props);
        this.state = {
            componentindex: 1,
            finished: false,
            roofarea: 0,
            roofstyle: "",
            material: "",
            materialCost: 0,
            roofstylecost: 0,
            Roofaddress: "",
            roofadress: "",
            coordinates: "",
            e_consumption: '',
            power: '',
            location: '',
            panel: '',
            battery: '',
            panelsCount: ''
        };
    }

    _createClass(ContextProvider, [{
        key: 'componentWillMount',
        value: function componentWillMount() {
            var index = sessionStorage.getItem('componentindex');
            if (index && index !== '' && index !== 'undefined' && index !== 'null') {
                this.setState({
                    componentindex: index,
                    location: ''
                });
            } else {
                sessionStorage.setItem('componentindex', 1);
                this.setState({
                    componentindex: 1,
                    location: ''
                });
            }
        }
    }, {
        key: 'area1',
        value: function area1(v, address, coordinates) {
            var json = coordinates;
            var obj = JSON.parse(json);
            var coordinate = obj.map(function (o, v) {
                return Math.round(parseFloat(o));
            });
            sessionStorage.setItem('coordinates', coordinate.toString());
            sessionStorage.setItem('Roofaddress', address);
            sessionStorage.setItem('roofarea', v);
            sessionStorage.setItem('componentindex', 2);
            window.location.href = "/#steg2";
            this.setState({
                location: '/#steg2',
                componentindex: 2,
                roofarea: v,
                Roofaddress: address,
                coordinates: coordinates
            });
        }
    }, {
        key: 'qusetionsval',
        value: function qusetionsval(type, floor, angle) {
            sessionStorage.setItem('property_type', type);
            sessionStorage.setItem('floors', floor);
            sessionStorage.setItem('roof_pitch', angle);
            sessionStorage.setItem('componentindex', 3);
            window.location.href = "/#steg3";
            this.setState({
                componentindex: 3,
                property_type: type,
                floors: floor,
                roof_pitch: angle,
                location: "/#steg3"
            });
        }
    }, {
        key: 'materialval',
        value: function materialval(value, cost) {
            sessionStorage.setItem('materialCost', cost);
            sessionStorage.setItem('roofmaterial', value);
            sessionStorage.setItem('componentindex', 4);
            window.location.href = "/#steg4";
            this.setState({
                componentindex: 4,
                roofmaterial: sessionStorage.getItem('roofmaterial'),
                materialCost: sessionStorage.getItem('materialCost'),
                location: "/#steg4"
            });
        }
    }, {
        key: 'matquestionval',
        value: function matquestionval(type, floor) {
            sessionStorage.setItem('e_consumption', type);
            sessionStorage.setItem('power', floor);
            sessionStorage.setItem('componentindex', 5);
            window.location.href = "/#steg5";
            this.setState({
                componentindex: 5,
                e_consumption: sessionStorage.getItem('e_consumption'),
                power: sessionStorage.getItem('power'),
                location: "/#steg5"
            });
        }
    }, {
        key: 'panelTypes',
        value: function panelTypes(panel, battery, count, packetName) {
            sessionStorage.setItem('panel', panel);
            sessionStorage.setItem('battery', battery);
            sessionStorage.setItem('panelsCount', count);
            sessionStorage.setItem('packetName', packetName);
            if (this.props.loginmode) {
                sessionStorage.setItem('componentindex', 7);
                this.areaEst = this.areaEstimetack.bind(this);
                this.areaEst(this);
                this.setState({
                    componentindex: 7,
                    e_consumption: sessionStorage.getItem('e_consumption'),
                    power: sessionStorage.getItem('power'),
                    roofmaterial: sessionStorage.getItem('roofmaterial'),
                    materialCost: sessionStorage.getItem('materialCost'),
                    Roofaddress: sessionStorage.getItem('Roofaddress'),
                    coordinates: sessionStorage.getItem('coordinates'),
                    roofarea: sessionStorage.getItem('roofarea'),
                    property_type: sessionStorage.getItem('property_type'),
                    floors: sessionStorage.getItem('floors'),
                    roof_pitch: sessionStorage.getItem('roof_pitch'),
                    panel: sessionStorage.getItem('panel'),
                    battery: sessionStorage.getItem('battery'),
                    panelsCount: sessionStorage.getItem('panelsCount')

                });
            } else {
                sessionStorage.setItem('componentindex', 6);
                window.location.href = "/#steg6", this.setState({
                    componentindex: 6,
                    e_consumption: sessionStorage.getItem('e_consumption'),
                    power: sessionStorage.getItem('power'),
                    roofmaterial: sessionStorage.getItem('roofmaterial'),
                    materialCost: sessionStorage.getItem('materialCost'),
                    Roofaddress: sessionStorage.getItem('Roofaddress'),
                    coordinates: sessionStorage.getItem('coordinates'),
                    roofarea: sessionStorage.getItem('roofarea'),
                    property_type: sessionStorage.getItem('property_type'),
                    floors: sessionStorage.getItem('floors'),
                    roof_pitch: sessionStorage.getItem('roof_pitch'),
                    panel: sessionStorage.getItem('panel'),
                    battery: sessionStorage.getItem('battery'),
                    panelsCount: sessionStorage.getItem('panelsCount'),
                    location: "/#steg6"
                });
            }
        }
    }, {
        key: 'areaEstimetack',
        value: function areaEstimetack() {
            window.location.href = "/#tack";
            sessionStorage.setItem('componentindex', 7);
            this.setState({
                componentindex: 6,
                location: "/#tack",
                roofmaterial: sessionStorage.getItem('roofmaterial'),
                materialCost: sessionStorage.getItem('materialCost'),
                Roofaddress: sessionStorage.getItem('Roofaddress'),
                coordinates: sessionStorage.getItem('coordinates'),
                roofstyle: sessionStorage.getItem('roofstyle'),
                roofstylecost: sessionStorage.getItem('roofstylecost'),
                roofarea: sessionStorage.getItem('roofarea'),
                property_type: sessionStorage.getItem('property_type'),
                floors: sessionStorage.getItem('floors'),
                roof_pitch: sessionStorage.getItem('roof_pitch')
            });
        }
    }, {
        key: 'handlePre',
        value: function handlePre(val) {
            if (this.state.componentindex > 1) this.setState({ componentindex: this.state.componentindex - 1 });
        }
    }, {
        key: 'handleNext',
        value: function handleNext() {
            if (this.state.finished == false) {
                this.setState({
                    componentindex: this.state.componentindex + 1,
                    finished: this.state.componentindex >= 7
                });
            }
        }
    }, {
        key: 'stepval',
        value: function stepval(val) {
            if (val === 1) {
                window.location.href = "/";
            } else {
                window.location.href = "/#steg" + val;
                this.setState({ location: "/#steg" + val, componentindex: val });
            }
            sessionStorage.setItem('componentindex', val);
        }
    }, {
        key: 'render',
        value: function render() {
            return _react2['default'].createElement(
                _Context2['default'].Provider,
                { value: {
                        state: this.state,
                        actions: {
                            qusetionsval: this.qusetionsval,
                            stepval: this.stepval,
                            materialval: this.materialval,
                            panelTypes: this.panelTypes,
                            areaEstimetack: this.areaEstimetack,
                            matquestionval: this.matquestionval
                        }
                    } },
                this.props.children
            );
        }
    }]);

    return ContextProvider;
})(_react.Component);

exports['default'] = ContextProvider;
module.exports = exports['default'];

},{"./Context":7,"react":undefined}],9:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, '__esModule', {
    value: true
});

var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; desc = parent = undefined; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _reactDayPicker = require('react-day-picker');

var _reactDayPicker2 = _interopRequireDefault(_reactDayPicker);

var _moment = require('moment');

var _moment2 = _interopRequireDefault(_moment);

var DatePicker = (function (_Component) {
    _inherits(DatePicker, _Component);

    function DatePicker(props) {
        _classCallCheck(this, DatePicker);

        _get(Object.getPrototypeOf(DatePicker.prototype), 'constructor', this).call(this, props);
        this.state = {
            selectedDay: null,
            selectedSlot: null,
            validDay: false,
            validSlot: false,
            availableslots: ['9:00', '9:30', '10:00', '10:30', '11:00', '11:30', '12:00', '12:30', '13:00', '13:30', '14:00', '14:30', '15:00', '15:30', '16:00', '17:00']
        };
        this.nextPage = this.props.nextPage.bind(this);
        this.closeModal = this.props.closeModal.bind(this);
        this.previous = this.props.previous.bind(this);
        this.handleDayClick = this.handleDayClick.bind(this);
        this.handleSlotClick = this.handleSlotClick.bind(this);
        this.contractorAvailabilitySlots = this.contractorAvailabilitySlots.bind(this);
        this.validate = this.validate.bind(this);
    }

    _createClass(DatePicker, [{
        key: 'handleDayClick',
        value: function handleDayClick(day, _ref) {
            var selected = _ref.selected;

            this.setState({
                selectedDay: selected ? undefined : day,
                validDay: false
            });
        }
    }, {
        key: 'handleSlotClick',
        value: function handleSlotClick(slot) {
            this.setState({
                selectedSlot: slot,
                validSlot: false
            });
        }
    }, {
        key: 'componentDidMount',
        value: function componentDidMount() {
            this.contractorAvailabilitySlots();
        }
    }, {
        key: 'contractorAvailabilitySlots',
        value: function contractorAvailabilitySlots() {
            var _self = this,
                data = [];
            fetch('/contractor/availability/5d1350199880ff94115dedde', {
                method: "get"
            }).then(function (res) {
                return res.json();
            }).then(function (result) {
                if (result.response && result.response.time_slots) {
                    data = result.response.time_slots.map(function (d) {
                        return d.slot;
                    });
                }
                _self.setState({
                    availableslots: data
                });
            });
        }
    }, {
        key: 'validate',
        value: function validate() {
            if (!this.state.selectedDay) {
                this.setState({ validDay: true });
            } else if (!this.state.selectedSlot) {
                this.setState({ validSlot: true });
            }
        }
    }, {
        key: 'render',
        value: function render() {
            switch (this.props.calenderIndex) {
                case 1:
                    return _react2['default'].createElement(Calenderpicker, { validate: this.validate, validDay: this.state.validDay,
                        selectedDay: this.state.selectedDay, handleDayClick: this.handleDayClick,
                        nextPage: this.nextPage, closeModal: this.closeModal });
                case 2:
                    return _react2['default'].createElement(TimeSlot, { previous: this.previous, validate: this.validate,
                        validSlot: this.state.validSlot, selectedSlot: this.state.selectedSlot,
                        selectedDay: this.state.selectedDay,
                        nextPage: this.nextPage.bind(this, this.state.selectedDay, this.state.selectedSlot),
                        slots: this.state.availableslots, handleSlotClick: this.handleSlotClick,
                        selectedSlot: this.state.selectedSlot });
                case 3:
                    return _react2['default'].createElement(
                        'div',
                        null,
                        _react2['default'].createElement(
                            'div',
                            { className: 'time-booking-final' },
                            'Thank you. your slot is booked'
                        ),
                        _react2['default'].createElement(
                            'div',
                            { className: 'booking-buttons align-text-center align-button-bottom' },
                            _react2['default'].createElement(
                                'button',
                                { className: 'submit', onClick: this.closeModal },
                                'stäng'
                            )
                        )
                    );
            }
        }
    }]);

    return DatePicker;
})(_react.Component);

function Calenderpicker(props) {
    var date = new Date(),
        StartDate = new Date(date.getFullYear(), date.getMonth() - 1, 0).getDate();

    return _react2['default'].createElement(
        'div',
        null,
        _react2['default'].createElement(
            'div',
            { className: 'col-md-12 align-text-center padding1' },
            'Välj datum'
        ),
        _react2['default'].createElement(
            'div',
            { className: 'col-md-12 datepicker-boking' },
            _react2['default'].createElement(_reactDayPicker2['default'], {
                month: new Date(),
                selectedDays: props.selectedDay,
                onDayClick: props.handleDayClick,
                disabledDays: [{
                    after: new Date(date.getFullYear(), date.getMonth() - 1, StartDate),
                    before: new Date()
                }]
            }),
            _react2['default'].createElement(
                'div',
                { className: 'col-md-12' },
                props.validDay ? _react2['default'].createElement(
                    'div',
                    { className: 'validation border-none' },
                    'Please select available Date'
                ) : null
            )
        ),
        _react2['default'].createElement(
            'div',
            { className: 'col-md-12 booking-buttons panding_no' },
            _react2['default'].createElement(
                'button',
                { className: 'submit f-left', onClick: props.closeModal },
                'Avbryt'
            ),
            props.selectedDay ? _react2['default'].createElement(
                'button',
                { className: 'submit', onClick: props.nextPage },
                'Nästa'
            ) : _react2['default'].createElement(
                'button',
                { className: 'submit', onClick: props.validate },
                'Nästa'
            )
        )
    );
}

function TimeSlot(props) {
    var data = (0, _moment2['default'])(props.selectedDay).format("MMMM Do YYYY");
    return _react2['default'].createElement(
        'div',
        { className: '' },
        _react2['default'].createElement(
            'div',
            { className: 'col-md-12 align-text-center padding1' },
            'Välj tid'
        ),
        _react2['default'].createElement(
            'div',
            { className: 'col-md-12 align-text-center' },
            data
        ),
        _react2['default'].createElement(
            'div',
            { className: 'col-md-12 align-text-center slots-centering padding-bottom-none' },
            _react2['default'].createElement(
                'div',
                { className: 'row', style: { maxHeight: '300px', minHeight: '240px', overflowY: 'auto' } },
                props.slots.map(function (time, index) {
                    return _react2['default'].createElement(
                        'div',
                        { key: index, className: 'col-md-4', onClick: props.handleSlotClick.bind(this, time) },
                        props.selectedSlot === time ? _react2['default'].createElement(
                            'p',
                            { className: 'selectcard-bg available-slots' },
                            time
                        ) : _react2['default'].createElement(
                            'p',
                            { className: 'available-slots' },
                            time
                        )
                    );
                })
            )
        ),
        _react2['default'].createElement(
            'div',
            { className: 'col-md-12' },
            props.validSlot ? _react2['default'].createElement(
                'div',
                { className: 'validation border-none' },
                'Please select available time slot'
            ) : null
        ),
        _react2['default'].createElement(
            'div',
            { className: 'booking-buttons col-md-12 panding_no' },
            _react2['default'].createElement(
                'button',
                { className: 'submit f-left', onClick: props.previous },
                'Föregående'
            ),
            props.selectedSlot ? _react2['default'].createElement(
                'button',
                { className: 'submit', onClick: props.nextPage },
                'Nästa'
            ) : _react2['default'].createElement(
                'button',
                { className: 'submit', onClick: props.validate },
                'Nästa'
            )
        )
    );
}

exports['default'] = DatePicker;
module.exports = exports['default'];

},{"moment":43,"react":undefined,"react-day-picker":61}],10:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, '__esModule', {
  value: true
});

var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; desc = parent = undefined; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _reactRangeslider = require('react-rangeslider');

var _reactRangeslider2 = _interopRequireDefault(_reactRangeslider);

var styles;

var Horizontal = (function (_React$Component) {
  _inherits(Horizontal, _React$Component);

  function Horizontal(props, context) {
    _classCallCheck(this, Horizontal);

    _get(Object.getPrototypeOf(Horizontal.prototype), 'constructor', this).call(this, props, context);
    this.state = {
      value: 0
    };
    this.handleChange = this.handleChange.bind(this);
    this.handleChangeStart = this.handleChangeStart.bind(this);
    this.handleChangeComplete = this.handleChangeComplete.bind(this);
  }

  _createClass(Horizontal, [{
    key: 'handleChangeStart',
    value: function handleChangeStart() {}
  }, {
    key: 'handleChange',
    value: function handleChange(v) {
      var _self = this;
      _self.setState({
        value: v
      });
    }
  }, {
    key: 'handleChangeComplete',
    value: function handleChangeComplete() {
      this.props.handleClick(this.state.value);
    }
  }, {
    key: 'render',
    value: function render() {
      return _react2['default'].createElement(
        'div',
        { className: 'col-lg-8 col-md-12 col-lg-offset-2' },
        _react2['default'].createElement(
          'div',
          { className: 'slider padd-top-bot' },
          _react2['default'].createElement(_reactRangeslider2['default'], {
            min: 0,
            max: 90,
            value: this.state.value,
            onChangeStart: this.handleChangeStart,
            onChange: this.handleChange,
            onChangeComplete: this.handleChangeComplete
          })
        )
      );
    }
  }]);

  return Horizontal;
})(_react2['default'].Component);

var DropArea = (function (_React$Component2) {
  _inherits(DropArea, _React$Component2);

  function DropArea(props) {
    _classCallCheck(this, DropArea);

    _get(Object.getPrototypeOf(DropArea.prototype), 'constructor', this).call(this, props);
    this.state = {
      list: [{ id: 1, isDragging: false, left: 0, angle: 0 }]
    };
    this.scrollable = this.scrollable.bind(this);
  }

  _createClass(DropArea, [{
    key: 'onDragOver',
    value: function onDragOver(e) {
      e.preventDefault();
      return false;
    }
  }, {
    key: 'onDrop',
    value: function onDrop(e) {
      var obj = JSON.parse(e.dataTransfer.getData('application/json'));
      var list = this.state.list;
      var index = this.state.list.findIndex(function (item) {
        return item.id === obj.id;
      });
      list[index].isDragging = false;
      list[index].left = e.clientX - obj.x;
      var val = Math.floor((e.clientX - obj.x) / 3);
      list[index].angle = Math.ceil(val / 5) * 5;
      if (list[index].angle > 90) {
        list[index].angle = 90;
      } else if (list[index].angle < 0) {
        list[index].angle = 0;
      }
      var newState = _extends(this.state, {
        list: list
      });
      this.setState(newState);
      e.preventDefault();
    }
  }, {
    key: 'scrollable',
    value: function scrollable(e) {
      var lists = this.state.list;
      var indexOne = this.state.list.findIndex(function (item) {
        return item.id === lists[0].id;
      });
      lists[indexOne].angle = e;
      var clickedState = _extends(this.state, {
        list: lists
      });
      this.setState(clickedState);
      this.props.roofAngle(lists[indexOne].angle);
    }
  }, {
    key: 'updateStateDragging',
    value: function updateStateDragging(id, isDragging) {
      var list = this.state.list;
      var index = this.state.list.findIndex(function (item) {
        return item.id === id;
      });
      list[index].isDragging = isDragging;
      var newState = _extends(this.state, {
        list: list
      });
      this.setState(newState);
    }
  }, {
    key: 'render',
    value: function render() {
      var items = [];
      var _iteratorNormalCompletion = true;
      var _didIteratorError = false;
      var _iteratorError = undefined;

      try {
        for (var _iterator = this.state.list[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
          var item = _step.value;

          items.push(_react2['default'].createElement(Draggable, {
            ref: "node_" + item.id,
            key: item.id,
            id: item.id,
            left: item.left,
            width: item.width,
            angle: item.angle,
            isDragging: item.isDragging,
            updateStateDragging: this.updateStateDragging.bind(this),
            scrollable: this.scrollable.bind(this)
          }));
        }
      } catch (err) {
        _didIteratorError = true;
        _iteratorError = err;
      } finally {
        try {
          if (!_iteratorNormalCompletion && _iterator['return']) {
            _iterator['return']();
          }
        } finally {
          if (_didIteratorError) {
            throw _iteratorError;
          }
        }
      }

      return _react2['default'].createElement(
        'div',
        {
          className: 'col-sm-12 align-text-center drop-area',
          onDragOver: this.onDragOver.bind(this),
          onDrop: this.onDrop.bind(this) },
        items
      );
    }
  }]);

  return DropArea;
})(_react2['default'].Component);

;

var Draggable = (function (_React$Component3) {
  _inherits(Draggable, _React$Component3);

  function Draggable() {
    _classCallCheck(this, Draggable);

    _get(Object.getPrototypeOf(Draggable.prototype), 'constructor', this).apply(this, arguments);
  }

  _createClass(Draggable, [{
    key: 'onMouseDown',
    value: function onMouseDown(e) {
      var elm = document.elementFromPoint(e.clientX, e.clientY);
      if (elm.className !== 'resizer') {
        this.props.updateStateDragging(this.props.id, true);
      }
    }
  }, {
    key: 'onMouseUp',
    value: function onMouseUp(e) {
      this.props.updateStateDragging(this.props.id, false);
    }
  }, {
    key: 'onDragStart',
    value: function onDragStart(e) {
      var nodeStyle = this.refs.node.style;
      e.dataTransfer.setData('application/json', JSON.stringify({
        id: this.props.id,
        x: e.clientX - parseInt(nodeStyle.left)
      }));
    }
  }, {
    key: 'onDragEnd',
    value: function onDragEnd(e) {
      this.props.updateStateDragging(this.props.id, false);
    }
  }, {
    key: 'render',
    value: function render() {
      if (this.props.left > 269) {
        styles = {
          left: '269px',
          width: this.props.width
        };
      } else if (this.props.left < 0) {
        styles = {
          left: '0px',
          width: this.props.width
        };
      } else {
        styles = {
          left: this.props.left,
          width: this.props.width
        };
      }

      return _react2['default'].createElement(
        'div',
        null,
        _react2['default'].createElement('div', { className: 'col-md-2' }),
        _react2['default'].createElement(
          'div',
          { className: '  scroll', style: { textAlign: 'center', padding: '20px' } },
          _react2['default'].createElement(
            'div',
            { id: 'ratio' },
            _react2['default'].createElement('div', { id: 'ratio-center' }),
            _react2['default'].createElement('div', { id: 'ratio-left', className: 'rotate-left-' + this.props.angle, style: { transform: 'rotate(' + this.props.angle + 'deg)' } }),
            _react2['default'].createElement('div', { id: 'ratio-right', className: 'rotate-right-' + this.props.angle, style: { transform: 'rotate(-' + this.props.angle + 'deg)' } })
          ),
          _react2['default'].createElement(
            'div',
            { id: 'ratio-value' },
            this.props.angle,
            '° '
          ),
          _react2['default'].createElement('input', { type: 'hidden', name: 'ratioValue', id: 'ratioValue', ref: 'myInput', value: this.props.angle }),
          _react2['default'].createElement(Horizontal, { handleClick: this.props.scrollable })
        ),
        _react2['default'].createElement('div', { className: 'col-md-3' })
      );
    }
  }]);

  return Draggable;
})(_react2['default'].Component);

;

exports['default'] = DropArea;
module.exports = exports['default'];

},{"react":undefined,"react-rangeslider":90}],11:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, '__esModule', {
    value: true
});

var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; desc = parent = undefined; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _reactCountup = require('react-countup');

var _reactCountup2 = _interopRequireDefault(_reactCountup);

var annualOutput = undefined,
    solarRadiation = 0.9,
    powerLoss = 0.9,
    reducedPower = 0.9,
    yearlySavingsdata = [],
    breakpoint = true;

var ESaving = (function (_Component) {
    _inherits(ESaving, _Component);

    function ESaving(props) {
        _classCallCheck(this, ESaving);

        _get(Object.getPrototypeOf(ESaving.prototype), 'constructor', this).call(this, props);
        this.state = {
            lifeTimeSaving: 0,
            breakEvenYr: 8,
            electricityRateIncrease: 2 + '%',
            electricityPerkw: 1.54,
            firstYrSaving: 0.0,
            minimumPackets: 0,
            maximumPackets: 0,
            customPacket: "Specify Number of panels",
            selectedPacket: 'Custom paket'
        };
        this.panelsArray = [];
        this.soltakPanelsArray = [];
        this.initalSumUp = this.initalSumUp.bind(this);
        this.decrement = this.decrement.bind(this);
        this.increment = this.increment.bind(this);
        this.elprisökningChange = this.elprisökningChange.bind(this);
        this.elprisChange = this.elprisChange.bind(this);
        this.packetsWithCount = this.packetsWithCount.bind(this);
        if (this.props.location.includes('Stockholm')) {
            solarRadiation = 1000;
        } else if (this.props.location.includes('Västerbotten')) {
            solarRadiation = 825;
        } else if (this.props.location.includes('Norrbotten')) {
            solarRadiation = 775;
        } else if (this.props.location.includes('Uppsala')) {
            solarRadiation = 95;
        } else if (this.props.location.includes('Södermanland')) {
            solarRadiation = 85;
        } else if (this.props.location.includes('Östergötland')) {
            solarRadiation = 975;
        } else if (this.props.location.includes('Jönköping')) {
            solarRadiation = 925;
        } else if (this.props.location.includes('Kronoberg')) {
            solarRadiation = 925;
        } else if (this.props.location.includes('Kalmar')) {
            solarRadiation = 950;
        } else if (this.props.location.includes('Gotland')) {
            solarRadiation = 1025;
        } else if (this.props.location.includes('Blekinge')) {
            solarRadiation = 975;
        } else if (this.props.location.includes('Skåne')) {
            solarRadiation = 1000;
        } else if (this.props.location.includes('Halland')) {
            solarRadiation = 1000;
        } else if (this.props.location.includes('Västra Götaland')) {
            solarRadiation = 950;
        } else if (this.props.location.includes('Värmland')) {
            solarRadiation = 950;
        } else if (this.props.location.includes('Örebro')) {
            solarRadiation = 950;
        } else if (this.props.location.includes('Västmanland')) {
            solarRadiation = 975;
        } else if (this.props.location.includes('Dalarna')) {
            solarRadiation = 950;
        } else if (this.props.location.includes('Gävleborgd')) {
            solarRadiation = 950;
        } else if (this.props.location.includes('Västernorrland')) {
            solarRadiation = 900;
        } else if (this.props.location.includes('Jämtland')) {
            solarRadiation = 900;
        } else {
            solarRadiation = 900;
        }
    }

    _createClass(ESaving, [{
        key: 'componentDidMount',
        value: function componentDidMount() {
            this.packetsWithCount();
            this.initalSumUp();
        }
    }, {
        key: 'packetsWithCount',
        value: function packetsWithCount() {
            var maxPacket, minPacket, Standardpacket;
            function degrees_to_radians(degrees) {
                var pi = Math.PI;
                return degrees * (pi / 180);
            }
            this.soltakPanelsArray = [{ packet: 'Small paket', count: 25 }, { packet: 'Standard paket', count: 50 }, { packet: 'Max paket', count: 99 }, { packet: 'Custom paket', count: 'Specify the area of solar roof' }];
            var roofArea = parseInt(this.props.roofarea) / Math.cos(degrees_to_radians(parseInt(this.props.roof_pitch)));
            if (roofArea > 400) {
                this.panelsArray = [];
                Standardpacket = 100;
                minPacket = 12;
                this.panelsArray = [{ packet: 'Small paket', count: parseInt(minPacket) }, { packet: 'Standard paket', count: parseInt(Standardpacket) }, { packet: this.state.selectedPacket, count: this.state.customPacket }];
                this.state.maximumPackets = parseInt(Standardpacket);
                this.state.minimumPackets = parseInt(minPacket);
            } else if (roofArea < 400 && roofArea > 200) {
                this.panelsArray = [];
                maxPacket = 100;
                Standardpacket = parseInt(roofArea / 4);
                minPacket = 12;
                this.panelsArray = [{ packet: 'Small paket', count: parseInt(minPacket) }, { packet: 'Standard paket', count: parseInt(Standardpacket) }, { packet: 'Max paket', count: parseInt(maxPacket) }, { packet: this.state.selectedPacket, count: this.state.customPacket }];
                this.state.maximumPackets = parseInt(maxPacket);
                this.state.minimumPackets = parseInt(minPacket);
            } else if (roofArea < 200 && roofArea > 36) {
                this.panelsArray = [];
                maxPacket = parseInt(roofArea / 2);
                Standardpacket = 1 / 2 * maxPacket;
                minPacket = 12;
                this.panelsArray = [{ packet: 'Small paket', count: parseInt(minPacket) }, { packet: 'Standard paket', count: parseInt(Standardpacket) }, { packet: 'Max paket', count: parseInt(maxPacket) }, { packet: this.state.selectedPacket, count: this.state.customPacket }];
                this.state.maximumPackets = parseInt(maxPacket);
                this.state.minimumPackets = parseInt(minPacket);
            } else if (roofArea < 36 && roofArea > 26) {
                this.panelsArray = [];
                Standardpacket = parseInt(roofArea / 2);
                minPacket = 12;
                this.panelsArray = [{ packet: 'Small paket', count: parseInt(minPacket) }, { packet: 'Standard paket', count: parseInt(Standardpacket) }, { packet: this.state.selectedPacket, count: this.state.customPacket }];
                this.state.maximumPackets = parseInt(Standardpacket);
                this.state.minimumPackets = parseInt(minPacket);
            } else if (roofArea < 26) {
                this.panelsArray = [];
                Standardpacket = 12;
                this.panelsArray = [{ packet: 'Standard paket', count: parseInt(Standardpacket) }, { packet: this.state.selectedPacket, count: this.state.customPacket }];
                this.state.maximumPackets = parseInt(Standardpacket);
                this.state.minimumPackets = parseInt(Standardpacket);
            }
        }
    }, {
        key: 'initalSumUp',
        value: function initalSumUp() {
            var primarySideAnualOutput,
                secondarySideAnnualOutput,
                primarySideRadiation,
                secondarySideRadiation,
                primarySidePanels,
                secondarySidePanels = 0,
                installedPowerOnPrimarySide,
                installedPowerOnSecondarySide,
                direction = this.props.direction.replace(/[0-9 ]/g, '');
            if (direction == 'VÄST' || direction == 'OST') {
                //west east
                primarySideRadiation = 0.85;
                secondarySideRadiation = 0.65;
            } else if (direction == 'SYDVÄST') {
                //southwest
                primarySideRadiation = 0.95;
                secondarySideRadiation = 0.65;
            } else if (direction == 'SYD') {
                //south
                primarySideRadiation = 1;
                secondarySideRadiation = 0.60;
            } else if (direction == 'SYDOST') {
                //southeast
                primarySideRadiation = 0.95;
                secondarySideRadiation = 0.65;
            }
            if (this.panelsArray.length) {
                var _self = this;
                var pannelName = sessionStorage.getItem('pannelName');
                var packetValuesObject;
                if (pannelName == 'solpanel') {
                    packetValuesObject = _self.panelsArray.filter(function (packetObj) {
                        return packetObj.packet === _self.props.packetName;
                    });
                } else {
                    packetValuesObject = _self.soltakPanelsArray.filter(function (packetObj) {
                        return packetObj.packet === _self.props.packetName;
                    });
                }

                if (packetValuesObject[0].packet == 'Small paket' || packetValuesObject[0].packet == 'Standard paket') {
                    primarySidePanels = this.props.noOfPanels;
                } else if (packetValuesObject[0].packet == 'Max paket') {
                    primarySidePanels = this.props.noOfPanels / 2;
                    secondarySidePanels = this.props.noOfPanels / 2;
                } else if (packetValuesObject[0].packet == 'Custom paket') {
                    if (this.props.noOfPanels > this.panelsArray[1].count) {
                        primarySidePanels = this.panelsArray[1].count;
                        secondarySidePanels = this.props.noOfPanels - this.panelsArray[1].count;
                    } else if (this.props.noOfPanels == this.panelsArray[1].count || this.props.noOfPanels < this.panelsArray[1].count) {
                        primarySidePanels = this.props.noOfPanels;
                    }
                }
            }

            breakpoint = true;
            yearlySavingsdata = [];
            installedPowerOnPrimarySide = primarySidePanels * this.props.capacity;
            installedPowerOnSecondarySide = secondarySidePanels * this.props.capacity;
            primarySideAnualOutput = installedPowerOnPrimarySide * primarySideRadiation * solarRadiation * powerLoss * reducedPower;
            secondarySideAnnualOutput = installedPowerOnSecondarySide * secondarySideRadiation * solarRadiation * powerLoss * reducedPower;
            annualOutput = (primarySideAnualOutput + secondarySideAnnualOutput) / 1000;
            var firstYrSaving = annualOutput * this.state.electricityPerkw;
            var totalsavings;
            this.setState({ firstYrSaving: firstYrSaving });
            yearlySavingsdata.push(firstYrSaving);
            for (var i = 2; i <= 30; i++) {
                var x = parseInt(this.state.electricityRateIncrease.slice(0, -1));
                var power = Math.pow(1 + x / 100, i);
                var yrSaving = firstYrSaving * power;
                yearlySavingsdata.push(yrSaving);
                totalsavings = yearlySavingsdata.reduce(function (partial_sum, a) {
                    return partial_sum + a;
                }, 0);
                if (totalsavings >= this.props.estimatedAmount && breakpoint) {
                    breakpoint = false;
                    this.setState({ breakEvenYr: i });
                }
            }
            this.setState({
                lifeTimeSaving: totalsavings
            });
        }
    }, {
        key: 'increment',
        value: function increment(type) {
            var _this = this;

            if (type == 'elprisökning') {
                var value = parseFloat(this.state.electricityRateIncrease.slice(0, -1)),
                    increasedValue = value + 1;
                this.setState({
                    electricityRateIncrease: increasedValue.toFixed(0) + '%'
                });
            } else if (type == 'elpris') {
                var value = parseFloat(this.state.electricityPerkw),
                    increasedValue = value + 0.1;
                this.setState({
                    electricityPerkw: increasedValue.toFixed(1)
                });
            }
            setTimeout(function () {
                _this.initalSumUp();
            }, 100);
        }
    }, {
        key: 'decrement',
        value: function decrement(type) {
            var _this2 = this;

            if (type == 'elprisökning') {
                var value = parseFloat(this.state.electricityRateIncrease.slice(0, -1)),
                    decreasedValue = value - 1;
                this.setState({
                    electricityRateIncrease: decreasedValue.toFixed(0) + '%'
                });
            } else if (type == 'elpris') {
                var value = parseFloat(this.state.electricityPerkw),
                    decreasedValue = value - 0.1;
                this.setState({
                    electricityPerkw: decreasedValue.toFixed(1)
                });
            }
            setTimeout(function () {
                _this2.initalSumUp();
            }, 100);
        }
    }, {
        key: 'elprisChange',
        value: function elprisChange(e) {
            var _this3 = this;

            this.setState({ electricityPerkw: e.target.value });
            setTimeout(function () {
                _this3.initalSumUp();
            }, 100);
        }
    }, {
        key: 'elprisökningChange',
        value: function elprisKningChange(e) {
            var _this4 = this;

            this.setState({ electricityRateIncrease: e.target.value + '%' });
            setTimeout(function () {
                _this4.initalSumUp();
            }, 100);
        }
    }, {
        key: 'render',
        value: function render() {
            return _react2['default'].createElement(
                'div',
                { className: 'row text-blue esaving-background padding20' },
                _react2['default'].createElement('div', { className: 'col-md-1' }),
                _react2['default'].createElement(
                    'div',
                    { className: 'col-sm-10' },
                    _react2['default'].createElement(
                        'div',
                        { className: 'row slots-centering' },
                        _react2['default'].createElement(
                            'div',
                            { className: 'col-md-7 col-sm-12' },
                            _react2['default'].createElement(
                                'div',
                                { className: 'row' },
                                _react2['default'].createElement(
                                    'div',
                                    { className: 'col-md-6 col-sm-6 section-name' },
                                    'Om vi räknar med'
                                ),
                                _react2['default'].createElement(
                                    'div',
                                    { className: 'col-md-6 col-sm-6 elpris panding_no' },
                                    _react2['default'].createElement(
                                        'div',
                                        { className: 'elpris-name col-sm-4' },
                                        'el pris :'
                                    ),
                                    _react2['default'].createElement(
                                        'div',
                                        { className: ' col-md-8 col-sm-6 panding_no' },
                                        _react2['default'].createElement(
                                            'ul',
                                            { className: 'main-list' },
                                            _react2['default'].createElement(
                                                'li',
                                                { className: 'mini-list' },
                                                _react2['default'].createElement('input', { value: this.state.electricityPerkw, onChange: this.elprisChange })
                                            ),
                                            _react2['default'].createElement(
                                                'li',
                                                { className: '' },
                                                _react2['default'].createElement(
                                                    'ul',
                                                    { className: 'increment-icon' },
                                                    _react2['default'].createElement(
                                                        'li',
                                                        { className: 'increment-list', onClick: this.increment.bind(this, 'elpris') },
                                                        _react2['default'].createElement('img', { src: './img/caret-symbol.png', alt: 'image' })
                                                    ),
                                                    _react2['default'].createElement(
                                                        'li',
                                                        { className: 'decrement-list', onClick: this.decrement.bind(this, 'elpris') },
                                                        _react2['default'].createElement('img', { src: './img/down-arrow.png', alt: 'image' })
                                                    )
                                                )
                                            )
                                        )
                                    )
                                )
                            )
                        ),
                        _react2['default'].createElement(
                            'div',
                            { className: 'col-md-5 col-sm-12 note-align' },
                            _react2['default'].createElement(
                                'div',
                                { className: 'row' },
                                _react2['default'].createElement(
                                    'div',
                                    { className: 'col-md-12 col-sm-12 panding_no' },
                                    _react2['default'].createElement(
                                        'div',
                                        { className: 'och-style col-md-6 col-sm-6' },
                                        'elprisökning per år :'
                                    ),
                                    _react2['default'].createElement(
                                        'div',
                                        { className: ' col-md-6 col-sm-6' },
                                        _react2['default'].createElement(
                                            'ul',
                                            { className: 'main-list note-align' },
                                            _react2['default'].createElement(
                                                'li',
                                                { className: 'mini-list' },
                                                _react2['default'].createElement(
                                                    'div',
                                                    { className: 'elpris-value' },
                                                    _react2['default'].createElement('input', { value: this.state.electricityRateIncrease, onChange: this.elprisökningChange })
                                                )
                                            ),
                                            _react2['default'].createElement(
                                                'li',
                                                { className: '' },
                                                _react2['default'].createElement(
                                                    'ul',
                                                    { className: 'increment-icon' },
                                                    _react2['default'].createElement(
                                                        'li',
                                                        { className: 'increment-list', onClick: this.increment.bind(this, 'elprisökning') },
                                                        _react2['default'].createElement('img', { src: './img/caret-symbol.png', alt: 'image' })
                                                    ),
                                                    _react2['default'].createElement(
                                                        'li',
                                                        { className: 'decrement-list', onClick: this.decrement.bind(this, 'elprisökning') },
                                                        _react2['default'].createElement('img', { src: './img/down-arrow.png', alt: 'image' })
                                                    )
                                                )
                                            )
                                        )
                                    )
                                )
                            )
                        )
                    )
                ),
                _react2['default'].createElement('div', { className: 'col-md-1' }),
                _react2['default'].createElement(
                    'div',
                    { className: 'col-md-12 col-sm-12' },
                    _react2['default'].createElement(
                        'div',
                        { className: 'col-md-4 col-sm-4  align-text-center border-right' },
                        _react2['default'].createElement(
                            'div',
                            { className: 'annual-savings' },
                            _react2['default'].createElement(_reactCountup2['default'], { className: 'count-up', start: 0, end: parseInt(this.state.firstYrSaving) }),
                            _react2['default'].createElement(
                                'span',
                                { className: 'f21' },
                                'SEK'
                            )
                        ),
                        _react2['default'].createElement(
                            'div',
                            null,
                            _react2['default'].createElement(
                                'p',
                                { className: 'saving-name' },
                                'ÅRLIG ELPRISÖKNING'
                            )
                        ),
                        _react2['default'].createElement(
                            'div',
                            null,
                            _react2['default'].createElement(
                                'p',
                                { className: 'pricing-note' },
                                'första året'
                            )
                        )
                    ),
                    _react2['default'].createElement(
                        'div',
                        { className: 'col-md-4 col-sm-4  align-text-center border-right' },
                        _react2['default'].createElement(
                            'div',
                            { className: 'annual-savings' },
                            _react2['default'].createElement(_reactCountup2['default'], { className: 'count-up', start: 0, end: parseInt(this.state.breakEvenYr) }),
                            _react2['default'].createElement(
                                'span',
                                { className: 'f21' },
                                'ÅR'
                            )
                        ),
                        _react2['default'].createElement(
                            'div',
                            null,
                            _react2['default'].createElement(
                                'p',
                                { className: 'saving-name' },
                                'BREAKEVEN'
                            )
                        ),
                        _react2['default'].createElement(
                            'div',
                            null,
                            _react2['default'].createElement(
                                'p',
                                { className: 'pricing-note' },
                                'beräknad återbetalningstid'
                            )
                        )
                    ),
                    _react2['default'].createElement(
                        'div',
                        { className: 'col-md-4 col-sm-4  align-text-center' },
                        _react2['default'].createElement(
                            'div',
                            { className: 'annual-savings' },
                            _react2['default'].createElement(_reactCountup2['default'], { className: 'count-up', start: 0, end: parseInt(this.state.lifeTimeSaving) }),
                            _react2['default'].createElement(
                                'span',
                                { className: 'f21' },
                                'SEK'
                            )
                        ),
                        _react2['default'].createElement(
                            'div',
                            null,
                            _react2['default'].createElement(
                                'p',
                                { className: 'saving-name' },
                                'TOTAL BESPARING'
                            )
                        ),
                        _react2['default'].createElement(
                            'div',
                            null,
                            _react2['default'].createElement(
                                'p',
                                { className: 'pricing-note' },
                                'under 30 år'
                            )
                        )
                    )
                )
            );
        }
    }]);

    return ESaving;
})(_react.Component);

;

exports['default'] = ESaving;
module.exports = exports['default'];

},{"react":undefined,"react-countup":57}],12:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, '__esModule', {
    value: true
});

var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; desc = parent = undefined; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _reactRangeslider = require('react-rangeslider');

var _reactRangeslider2 = _interopRequireDefault(_reactRangeslider);

var styles;

var Horizontal = (function (_React$Component) {
    _inherits(Horizontal, _React$Component);

    function Horizontal(props, context) {
        _classCallCheck(this, Horizontal);

        _get(Object.getPrototypeOf(Horizontal.prototype), 'constructor', this).call(this, props, context);
        this.state = {
            value: 1000
        };
        this.handleChange = this.handleChange.bind(this);
        this.handleChangeStart = this.handleChangeStart.bind(this);
        this.handleChangeComplete = this.handleChangeComplete.bind(this);
    }

    _createClass(Horizontal, [{
        key: 'handleChangeStart',
        value: function handleChangeStart() {}
    }, {
        key: 'handleChange',
        value: function handleChange(v) {
            var _self = this;
            _self.setState({
                value: v
            });
        }
    }, {
        key: 'handleChangeComplete',
        value: function handleChangeComplete() {
            this.props.handleClick(this.state.value);
        }
    }, {
        key: 'render',
        value: function render() {
            return _react2['default'].createElement(
                'div',
                { className: 'slider padd-top-bot' },
                _react2['default'].createElement(_reactRangeslider2['default'], {
                    min: 0,
                    max: 50000,
                    step: 100,
                    value: this.state.value,
                    onChangeStart: this.handleChangeStart,
                    onChange: this.handleChange,
                    onChangeComplete: this.handleChangeComplete
                })
            );
        }
    }]);

    return Horizontal;
})(_react2['default'].Component);

var EDropArea = (function (_React$Component2) {
    _inherits(EDropArea, _React$Component2);

    function EDropArea(props) {
        _classCallCheck(this, EDropArea);

        _get(Object.getPrototypeOf(EDropArea.prototype), 'constructor', this).call(this, props);

        this.state = {
            list: [{ id: 1, isDragging: false, left: 0, angle: 1000 }]
        };
        this.scrollable = this.scrollable.bind(this);
    }

    _createClass(EDropArea, [{
        key: 'onDragOver',
        value: function onDragOver(e) {
            e.preventDefault();
            return false;
        }
    }, {
        key: 'onDrop',
        value: function onDrop(e) {
            var obj = JSON.parse(e.dataTransfer.getData('application/json'));
            var list = this.state.list;
            var index = this.state.list.findIndex(function (item) {
                return item.id === obj.id;
            });
            list[index].isDragging = false;
            list[index].left = e.clientX - obj.x;
            var value = Math.floor(e.nativeEvent.offsetX / 3);
            list[index].angle = Math.ceil(value / 5) * 1000;
            var newState = _extends(this.state, {
                list: list
            });
            this.setState(newState);
            e.preventDefault();
            this.props.electricy(list[index].angle);
        }
    }, {
        key: 'scrollable',
        value: function scrollable(e) {

            var lists = this.state.list;
            var indexOne = this.state.list.findIndex(function (item) {
                return item.id === lists[0].id;
            });
            lists[indexOne].angle = e;

            var clickedState = _extends(this.state, {
                list: lists
            });
            this.props.electricy(lists[indexOne].angle);
        }
    }, {
        key: 'updateStateDragging',
        value: function updateStateDragging(id, isDragging) {
            var list = this.state.list;
            var index = this.state.list.findIndex(function (item) {
                return item.id === id;
            });
            list[index].isDragging = isDragging;
            var newState = _extends(this.state, {
                list: list
            });
            this.setState(newState);
        }
    }, {
        key: 'render',
        value: function render() {
            var items = [];
            var _iteratorNormalCompletion = true;
            var _didIteratorError = false;
            var _iteratorError = undefined;

            try {
                for (var _iterator = this.state.list[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
                    var item = _step.value;

                    items.push(_react2['default'].createElement(EDraggable, {
                        ref: "node_" + item.id,
                        key: item.id,
                        id: item.id,
                        left: item.left,
                        width: item.width,
                        angle: item.angle,
                        isDragging: item.isDragging,
                        updateStateDragging: this.updateStateDragging.bind(this),
                        scrollable: this.scrollable.bind(this)
                    }));
                }
            } catch (err) {
                _didIteratorError = true;
                _iteratorError = err;
            } finally {
                try {
                    if (!_iteratorNormalCompletion && _iterator['return']) {
                        _iterator['return']();
                    }
                } finally {
                    if (_didIteratorError) {
                        throw _iteratorError;
                    }
                }
            }

            return _react2['default'].createElement(
                'div',
                {
                    className: 'col-md-12  drop-area', style: { padding: '0px' },
                    onDragOver: this.onDragOver.bind(this),
                    onDrop: this.onDrop.bind(this) },
                items
            );
        }
    }]);

    return EDropArea;
})(_react2['default'].Component);

;

var EDraggable = (function (_React$Component3) {
    _inherits(EDraggable, _React$Component3);

    function EDraggable() {
        _classCallCheck(this, EDraggable);

        _get(Object.getPrototypeOf(EDraggable.prototype), 'constructor', this).apply(this, arguments);
    }

    _createClass(EDraggable, [{
        key: 'onMouseDown',
        value: function onMouseDown(e) {
            var elm = document.elementFromPoint(e.clientX, e.clientY);
            if (elm.className !== 'resizer') {
                this.props.updateStateDragging(this.props.id, true);
            }
        }
    }, {
        key: 'onMouseUp',
        value: function onMouseUp(e) {
            this.props.updateStateDragging(this.props.id, false);
        }
    }, {
        key: 'onDragStart',
        value: function onDragStart(e) {
            var nodeStyle = this.refs.node.style;
            e.dataTransfer.setData('application/json', JSON.stringify({
                id: this.props.id,
                x: e.clientX - parseInt(nodeStyle.left)
            }));
        }
    }, {
        key: 'onDragEnd',
        value: function onDragEnd(e) {
            this.props.updateStateDragging(this.props.id, false);
        }
    }, {
        key: 'render',
        value: function render() {
            if (this.props.left > 595) {
                styles = {
                    left: '595px',
                    width: this.props.width,
                    position: 'absolute'
                };
            } else if (this.props.left < 0) {
                styles = {
                    left: '0px',
                    width: this.props.width,
                    position: 'absolute'
                };
            } else {
                styles = {
                    left: this.props.left,
                    width: this.props.width,
                    position: 'absolute'
                };
            }

            return _react2['default'].createElement(
                'div',
                null,
                _react2['default'].createElement(Horizontal, { handleClick: this.props.scrollable })
            );
        }
    }]);

    return EDraggable;
})(_react2['default'].Component);

;

exports['default'] = EDropArea;
module.exports = exports['default'];

},{"react":undefined,"react-rangeslider":90}],13:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, '__esModule', {
    value: true
});

var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; desc = parent = undefined; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _reactModal = require('react-modal');

var _reactModal2 = _interopRequireDefault(_reactModal);

var matstyle = {
    padding: "20px",
    margin: "5px 5px 50px 5px",
    border: "4px solid #f9f9f9",
    textAlign: "-webkit-center",
    borderRadius: "4px",
    boxShadow: "0 15px 35px rgba(50,50,93,.1), 0 5px 15px rgba(0,0,0,.07)",
    transition: "all 0.3s ease-out",
    WebkitTransform: "all 0.3s ease-out",
    textTransform: "uppercase",
    color: '#064f70',
    fontSize: '16px',
    minHeight: '240px'
};

var selectedStyle = {
    padding: "20px",
    margin: "5px 5px 50px 5px",
    textAlign: "-webkit-center",
    borderRadius: "4px",
    boxShadow: "0 15px 35px rgba(50,50,93,.1), 0 5px 15px rgba(0,0,0,.07)",
    transition: "all 0.3s ease-out",
    WebkitTransform: "all 0.3s ease-out",
    border: "4px solid rgb(142, 226, 174)",
    textTransform: "uppercase",
    color: '#064f70',
    fontWeight: 'bold',
    fontSize: '16px',
    minHeight: '240px'
};

var customStyles = {
    content: {
        top: '50%',
        left: '50%',
        right: 'auto',
        bottom: 'auto',
        marginRight: '-50%',
        transform: 'translate(-50%, -50%)',
        padding: '10px 15px 23px',
        fontSize: '16px',
        width: '50%',
        border: "4px solid rgb(142, 226, 174)",
        borderRadius: '20px'
    }
};

var _annualOutput = undefined,
    solarRadiation = 0.9,
    powerLoss = 0.9,
    reducedPower = 0.9,
    Standardpacket = undefined,
    maxPacket = undefined,
    minPacket = undefined,
    capacity = undefined,
    totalInstalledPowerInkw = undefined;

var PanelBatteryTypes = (function (_Component) {
    _inherits(PanelBatteryTypes, _Component);

    function PanelBatteryTypes(props) {
        _classCallCheck(this, PanelBatteryTypes);

        _get(Object.getPrototypeOf(PanelBatteryTypes.prototype), 'constructor', this).call(this, props);
        this.state = {
            validationOne: false,
            panel_cost: '',
            battery_cost: '',
            message: null,
            panelCount: [],
            validationThree: false,
            popup: false,
            modalIsOpen: false,
            customPacket: "Ange antal paneler",
            selectedPacket: 'Custom paket',
            panelarrayUpdate: false,
            modalForPanelIsOpen: false,
            panelPopup: false,
            batteryPopup: false,
            battery: this.props.battery,
            panel: this.props.panel,
            packetsCount: parseInt(this.props.packetsCount),
            packetName: this.props.packetName,
            annualOutput: parseInt(this.props.annualProduction),
            maximumPackets: 0,
            panelCountValidation: false,
            minimumPackets: 0
        };
        this.modalpopup = this.modalpopup.bind(this);
        _reactModal2['default'].setAppElement('body');
        this.openModal = this.openModal.bind(this);
        this.afterOpenModal = this.afterOpenModal.bind(this);
        this.closeModal = this.closeModal.bind(this);
        this.validate = this.validate.bind(this);
        this.selectedCount = this.selectedCount.bind(this);
        this.panelTypesChange = this.panelTypesChange.bind(this);
        this.countOfpanels = this.countOfpanels.bind(this);
        this.increment = this.increment.bind(this);
        this.decrement = this.decrement.bind(this);
        this.closePanelModal = this.closePanelModal.bind(this);
        this.openPanelPopup = this.openPanelPopup.bind(this);
        this.closeBatteryModal = this.closeBatteryModal.bind(this);
        this.openBatteryPopup = this.openBatteryPopup.bind(this);
        this.closePacketModal = this.closePacketModal.bind(this);
        this.openPacketPopup = this.openPacketPopup.bind(this);
        this.annualOutput = this.annualOutput.bind(this);

        this.panels = [{
            image: "./img/premium_panel2.jpg",
            name: "Premium",
            cost: 1180
        }, {
            image: "./img/Standard_Panel2.jpg",
            name: "Standard",
            cost: 1400
        }];
        this.batteries = [{
            image: "./img/premium-battery.png",
            name: "Premium",
            cost: 300
        }, {
            image: "./img/no_battery.png",
            name: "Inga",
            cost: 220
        }];
        function degrees_to_radians(degrees) {
            var pi = Math.PI;
            return degrees * (pi / 180);
        }
        var roofArea = parseInt(this.props.area) / Math.cos(degrees_to_radians(parseInt(this.props.roof_pitch)));
        if (roofArea > 400) {
            this.panelsArray = [];
            Standardpacket = 100;
            minPacket = 12;
            this.panelsArray = [{ packet: 'Small paket', count: parseInt(minPacket) }, { packet: 'Standard paket', count: parseInt(Standardpacket) }, { packet: this.state.selectedPacket, count: this.props.packetName == 'Custom paket' ? parseInt(this.props.packetsCount) : this.state.customPacket }];
            this.state.maximumPackets = parseInt(Standardpacket);
            this.state.minimumPackets = parseInt(minPacket);
        } else if (roofArea < 400 && roofArea > 200) {
            this.panelsArray = [];
            maxPacket = 100;
            Standardpacket = roofArea / 4;
            minPacket = 12;
            this.panelsArray = [{ packet: 'Small paket', count: parseInt(minPacket) }, { packet: 'Standard paket', count: parseInt(Standardpacket) }, { packet: 'Max paket', count: parseInt(maxPacket) }, { packet: this.state.selectedPacket, count: this.props.packetName == 'Custom paket' ? parseInt(this.props.packetsCount) : this.state.customPacket }];
            this.state.maximumPackets = parseInt(maxPacket);
            this.state.minimumPackets = parseInt(minPacket);
        } else if (roofArea < 200 && roofArea > 36) {
            this.panelsArray = [];
            maxPacket = roofArea / 2;
            Standardpacket = 1 / 2 * maxPacket;
            minPacket = 12;
            this.panelsArray = [{ packet: 'Small paket', count: parseInt(minPacket) }, { packet: 'Standard paket', count: parseInt(Standardpacket) }, { packet: 'Max paket', count: parseInt(maxPacket) }, { packet: this.state.selectedPacket, count: this.props.packetName == 'Custom paket' ? parseInt(this.props.packetsCount) : this.state.customPacket }];
            this.state.maximumPackets = parseInt(maxPacket);
            this.state.minimumPackets = parseInt(minPacket);
        } else if (roofArea < 36 && roofArea > 26) {
            this.panelsArray = [];
            Standardpacket = roofArea / 2;
            minPacket = 12;
            this.panelsArray = [{ packet: 'Small paket', count: parseInt(minPacket) }, { packet: 'Standard paket', count: parseInt(Standardpacket) }, { packet: this.state.selectedPacket, count: this.props.packetName == 'Custom paket' ? parseInt(this.props.packetsCount) : this.state.customPacket }];
            this.state.maximumPackets = parseInt(Standardpacket);
            this.state.minimumPackets = parseInt(minPacket);
        } else if (roofArea < 26) {
            this.panelsArray = [];
            Standardpacket = 12;
            this.panelsArray = [{ packet: 'Standard paket', count: parseInt(Standardpacket) }, { packet: this.state.selectedPacket, count: this.props.packetName == 'Custom paket' ? parseInt(this.props.packetsCount) : this.state.customPacket }];
            this.state.maximumPackets = parseInt(Standardpacket);
            this.state.minimumPackets = parseInt(Standardpacket);
        }
    }

    _createClass(PanelBatteryTypes, [{
        key: 'componentDidMount',
        value: function componentDidMount() {
            if (this.props.panel === 'Standard') {
                capacity = 270;
            } else if (this.props.panel === 'Premium') {
                capacity = 320;
            }
            this.setState({
                battery: this.props.battery,
                panel: this.props.panel,
                packetsCount: parseInt(this.props.packetsCount),
                packetName: this.props.packetName
            });
        }
    }, {
        key: 'openModal',
        value: function openModal() {}
    }, {
        key: 'afterOpenModal',
        value: function afterOpenModal() {}
    }, {
        key: 'closeModal',
        value: function closeModal() {
            this.setState({ modalIsOpen: false });
        }
    }, {
        key: 'modalpopup',
        value: function modalpopup() {
            this.setState({ popup: true, modalIsOpen: true });
        }
    }, {
        key: 'selectedPanel',
        value: function selectedPanel(panel, cost) {
            if (panel === 'Standard') {
                capacity = 270;
            } else if (panel === 'Premium') {
                capacity = 320;
            }
            this.setState({
                panel: panel,
                panel_cost: cost,
                validationOne: false
            });
            this.annualOutput(capacity, this.state.packetName, this.state.packetsCount);
        }
    }, {
        key: 'selectedBattery',
        value: function selectedBattery(battery, cost) {
            this.setState({
                battery: battery,
                battery_cost: cost,
                validationTwo: false
            });
        }
    }, {
        key: 'annualOutput',
        value: function annualOutput(watts, packet, countOfPanels) {
            var primarySideAnualOutput,
                secondarySideAnnualOutput,
                installedPowerOnPrimarySide,
                installedPowerOnSecondarySide,
                primarySideRadiation,
                secondarySideRadiation,
                primarySidePanels = 0,
                secondarySidePanels = 0;
            switch (this.props.surfaceDirection) {
                case 'VÄST 1':
                    primarySideRadiation = 0.84;
                    secondarySideRadiation = 0.76;
                case 'OST 2':
                    primarySideRadiation = 0.84;
                    secondarySideRadiation = 0.76;
                case 'VÄST 2':
                    primarySideRadiation = 0.88;
                    secondarySideRadiation = 0.72;
                case 'OST 1':
                    primarySideRadiation = 0.88;
                    secondarySideRadiation = 0.72;
                case 'SYDVÄST 1':
                    primarySideRadiation = 0.92;
                    secondarySideRadiation = 0.68;
                case 'SYDVÄST':
                    primarySideRadiation = 0.96;
                    secondarySideRadiation = 0.64;
                case 'VÄST 2':
                    primarySideRadiation = 0.88;
                    secondarySideRadiation = 0.72;
                case 'SYD 1':
                    primarySideRadiation = 1;
                    secondarySideRadiation = 0.60;
                case 'SYD 2':
                    primarySideRadiation = 1;
                    secondarySideRadiation = 0.60;
                case 'SYDOST 1':
                    primarySideRadiation = 0.92;
                    secondarySideRadiation = 0.64;
                case 'SYDOST 2':
                    primarySideRadiation = 0.92;
                    secondarySideRadiation = 0.68;
                case 'OST 1':
                    primarySideRadiation = 0.84;
                    secondarySideRadiation = 0.72;
                default:
                    primarySideRadiation = 0.84;
                    secondarySideRadiation = 0.72;
            }
            // if (this.props.surfaceDirection == 'VÄST 1' || this.props.surfaceDirection == 'OST 2') {//west east
            //     primarySideRadiation = 0.84;
            //     secondarySideRadiation = 0.76;
            // } else if (this.props.surfaceDirection == 'VÄST 2' || this.props.surfaceDirection == 'OST 1') {//west east
            //     primarySideRadiation = 0.88;
            //     secondarySideRadiation = 0.72;
            // } else if (this.props.surfaceDirection == 'SYDVÄST 1') {//southwest
            //     primarySideRadiation = 0.92;
            //     secondarySideRadiation = 0.68;
            // } else if (this.props.surfaceDirection == 'SYDVÄST') {//southwest
            //     primarySideRadiation = 0.96;
            //     secondarySideRadiation = 0.64;
            // } else if (this.props.surfaceDirection == 'SYD 1' || this.props.surfaceDirection == 'SYD 2') {//south
            //     primarySideRadiation = 1;
            //     secondarySideRadiation = 0.60;
            // } else if (this.props.surfaceDirection == 'SYDOST 1') {//southeast
            //     primarySideRadiation = 0.92;
            //     secondarySideRadiation = 0.64;
            // } else if (this.props.surfaceDirection == 'SYDOST 2') {//southeast
            //     primarySideRadiation = 0.92;
            //     secondarySideRadiation = 0.68;
            // } else if (this.props.surfaceDirection == 'OST 1') {//east
            //     primarySideRadiation = 0.84;
            //     secondarySideRadiation = 0.72;
            // }
            if (this.props.location.includes('Stockholm')) {
                solarRadiation = 1000;
            } else if (this.props.location.includes('Västerbotten')) {
                solarRadiation = 825;
            } else if (this.props.location.includes('Norrbotten')) {
                solarRadiation = 775;
            } else if (this.props.location.includes('Uppsala')) {
                solarRadiation = 95;
            } else if (this.props.location.includes('Södermanland')) {
                solarRadiation = 85;
            } else if (this.props.location.includes('Östergötland')) {
                solarRadiation = 975;
            } else if (this.props.location.includes('Jönköping')) {
                solarRadiation = 925;
            } else if (this.props.location.includes('Kronoberg')) {
                solarRadiation = 925;
            } else if (this.props.location.includes('Kalmar')) {
                solarRadiation = 950;
            } else if (this.props.location.includes('Gotland')) {
                solarRadiation = 1025;
            } else if (this.props.location.includes('Blekinge')) {
                solarRadiation = 975;
            } else if (this.props.location.includes('Skåne')) {
                solarRadiation = 1000;
            } else if (this.props.location.includes('Halland')) {
                solarRadiation = 1000;
            } else if (this.props.location.includes('Västra Götaland')) {
                solarRadiation = 950;
            } else if (this.props.location.includes('Värmland')) {
                solarRadiation = 950;
            } else if (this.props.location.includes('Örebro')) {
                solarRadiation = 950;
            } else if (this.props.location.includes('Västmanland')) {
                solarRadiation = 975;
            } else if (this.props.location.includes('Dalarna')) {
                solarRadiation = 950;
            } else if (this.props.location.includes('Gävleborgd')) {
                solarRadiation = 950;
            } else if (this.props.location.includes('Västernorrland')) {
                solarRadiation = 900;
            } else if (this.props.location.includes('Jämtland')) {
                solarRadiation = 900;
            } else {
                solarRadiation = 900;
            }

            if (packet) {
                var packetValuesObject = this.panelsArray.filter(function (packetObj) {
                    return packetObj.packet === packet;
                });
                totalInstalledPowerInkw = countOfPanels * watts / 1000;
                if (packetValuesObject[0].packet == 'Small paket' || packetValuesObject[0].packet == 'Standard paket') {
                    primarySidePanels = countOfPanels;
                } else if (packetValuesObject[0].packet == 'Max paket') {
                    primarySidePanels = countOfPanels / 2;
                    secondarySidePanels = countOfPanels / 2;
                } else if (packetValuesObject[0].packet == 'Custom paket') {
                    if (countOfPanels > this.panelsArray[1].count) {
                        primarySidePanels = this.panelsArray[1].count;
                        secondarySidePanels = countOfPanels - this.panelsArray[1].count;
                    } else if (countOfPanels == this.panelsArray[1].count || countOfPanels < this.panelsArray[1].count) {
                        primarySidePanels = countOfPanels;
                    }
                }
                installedPowerOnPrimarySide = primarySidePanels * watts;
                installedPowerOnSecondarySide = secondarySidePanels * watts;
                primarySideAnualOutput = installedPowerOnPrimarySide * primarySideRadiation * solarRadiation * powerLoss * reducedPower;
                secondarySideAnnualOutput = installedPowerOnSecondarySide * secondarySideRadiation * solarRadiation * powerLoss * reducedPower;
                _annualOutput = (primarySideAnualOutput + secondarySideAnnualOutput) / 1000;
                this.setState({
                    annualOutput: _annualOutput
                });
            }
        }
    }, {
        key: 'selectedCount',
        value: function selectedCount(name, count) {
            if (name == 'Custom paket' || name == 'Selected Paket') {
                this.setState({ popup: true, modalIsOpen: true });
            } else if (name === '') {
                this.setState({
                    packetName: 'Custom paket',
                    selectedPacket: 'Custom paket',
                    packetsCount: count,
                    validationThree: false,
                    value: count,
                    customPacket: parseInt(this.state.packetsCount),
                    panelarrayUpdate: true,
                    modalIsOpen: false,
                    packetPopup: true
                });
                this.annualOutput(capacity, 'Custom paket', count);
            } else {
                this.setState({
                    packetName: name,
                    packetsCount: count,
                    validationThree: false,
                    // value: count,
                    panelarrayUpdate: true,
                    customPacket: "Ange antal paneler",
                    packetPopup: true
                });
            }
            this.annualOutput(capacity, name, count);
        }
    }, {
        key: 'componentWillUpdate',
        value: function componentWillUpdate(state, prop) {
            var _self = this;
            setTimeout(update(prop), 2000);
            function update(props) {
                if (props.panelarrayUpdate) {
                    var degrees_to_radians = function degrees_to_radians(degrees) {
                        var pi = Math.PI;
                        return degrees * (pi / 180);
                    };

                    _self.setState({ panelarrayUpdate: false });

                    var roofArea = parseInt(_self.props.area) / Math.cos(degrees_to_radians(parseInt(_self.props.roof_pitch)));
                    if (roofArea > 400) {
                        _self.panelsArray = [];
                        Standardpacket = 100;
                        minPacket = 12;
                        _self.panelsArray = [{ packet: 'Small paket', count: parseInt(minPacket) }, { packet: 'Standard paket', count: parseInt(Standardpacket) }, { packet: props.selectedPacket, count: props.customPacket }];
                        _self.setState({ maximumPackets: parseInt(Standardpacket), minimumPackets: minPacket });
                    } else if (roofArea < 400 && roofArea > 200) {
                        _self.panelsArray = [];
                        Standardpacket = roofArea / 4;
                        minPacket = 12;
                        maxPacket = 100;
                        _self.panelsArray = [{ packet: 'Small paket', count: parseInt(minPacket) }, { packet: 'Standard paket', count: parseInt(Standardpacket) }, { packet: 'Max paket', count: parseInt(maxPacket) }, { packet: props.selectedPacket, count: props.customPacket }];
                        _self.setState({ maximumPackets: parseInt(maxPacket), minimumPackets: minPacket });
                    } else if (roofArea < 200 && roofArea > 36) {
                        _self.panelsArray = [];
                        maxPacket = parseInt(roofArea / 2);
                        Standardpacket = 1 / 2 * maxPacket;
                        minPacket = 12;
                        _self.panelsArray = [{ packet: 'Small paket', count: parseInt(minPacket) }, { packet: 'Standard paket', count: parseInt(Standardpacket) }, { packet: 'Max paket', count: parseInt(maxPacket) }, { packet: props.selectedPacket, count: props.customPacket }];
                        _self.setState({ maximumPackets: parseInt(maxPacket), minimumPackets: minPacket });
                    } else if (roofArea < 36 && roofArea > 26) {
                        _self.panelsArray = [];
                        Standardpacket = roofArea / 2;
                        minPacket = 12;
                        _self.panelsArray = [{ packet: 'Small paket', count: parseInt(minPacket) }, { packet: 'Standard paket', count: parseInt(Standardpacket) }, { packet: props.selectedPacket, count: props.customPacket }];
                        _self.setState({ maximumPackets: parseInt(Standardpacket), minimumPackets: parseInt(minPacket) });
                    } else if (roofArea < 26) {
                        _self.panelsArray = [];
                        Standardpacket = 12;
                        _self.panelsArray = [{ packet: 'Standard paket', count: parseInt(Standardpacket) }, { packet: props.selectedPacket, count: props.customPacket }];
                        _self.setState({ maximumPackets: parseInt(Standardpacket), minimumPackets: 12 });
                    }
                }
            }
        }
    }, {
        key: 'validate',
        value: function validate() {
            if (this.state.panel === '') {
                this.setState({ validationOne: true });
            } else if (this.state.battery === '') {
                this.setState({ validationTwo: true });
            } else if (this.state.packetsCount === '') {
                this.setState({ validationThree: true });
            }
        }
    }, {
        key: 'panelTypesChange',
        value: function panelTypesChange(panel, battery, value) {
            sessionStorage.removeItem('panel');
            sessionStorage.removeItem('battery');
            sessionStorage.removeItem('panelsCount');
            sessionStorage.setItem('panel', panel);
            sessionStorage.setItem('battery', battery);
            sessionStorage.setItem('panelsCount', value);
        }
    }, {
        key: 'countOfpanels',
        value: function countOfpanels(e) {
            if (this.state.minimumPackets <= e.target.value && e.target.value <= this.state.maximumPackets) {
                this.setState({
                    packetsCount: e.target.value,
                    //customPacket: e.target.value,
                    selectedPacket: 'Custom paket',
                    packetName: 'Custom paket',
                    //  packetsCount: e.target.value,
                    panelCountValidation: false
                });
            } else {
                this.setState({
                    packetsCount: e.target.value,
                    panelCountValidation: true
                });
            }
        }
    }, {
        key: 'increment',
        value: function increment() {
            if (this.state.packetsCount <= this.state.maximumPackets - 1) {
                this.setState({
                    packetsCount: parseInt(this.state.packetsCount) + 1,
                    panelCountValidation: false
                });
            } else {
                this.setState({ panelCountValidation: true });
            }
        }
    }, {
        key: 'decrement',
        value: function decrement() {
            if (this.state.packetsCount >= this.state.minimumPackets + 1) {
                this.setState({
                    packetsCount: parseInt(this.state.packetsCount) - 1,
                    panelCountValidation: false
                });
            } else {
                this.setState({ panelCountValidation: true });
            }
        }
    }, {
        key: 'openPanelPopup',
        value: function openPanelPopup() {
            this.setState({ modalForPanelIsOpen: true, panelPopup: true });
        }
    }, {
        key: 'closePanelModal',
        value: function closePanelModal() {
            this.setState({ modalForPanelIsOpen: false, panelPopup: false });
        }
    }, {
        key: 'openBatteryPopup',
        value: function openBatteryPopup() {
            this.setState({ modalForBatteryIsOpen: true, batteryPopup: true });
        }
    }, {
        key: 'closeBatteryModal',
        value: function closeBatteryModal() {
            this.setState({ modalForBatteryIsOpen: false, batteryPopup: false });
        }
    }, {
        key: 'closePacketModal',
        value: function closePacketModal() {
            this.setState({ modalForPacketIsOpen: false, packetPopup: false });
        }
    }, {
        key: 'openPacketPopup',
        value: function openPacketPopup() {
            this.setState({ modalForPacketIsOpen: true, packetPopup: true });
        }
    }, {
        key: 'render',
        value: function render() {
            var _this = this;

            return _react2['default'].createElement(
                'div',
                null,
                _react2['default'].createElement(
                    'div',
                    { className: '' },
                    _react2['default'].createElement(
                        'h3',
                        { className: 'roof_subhead' },
                        'Byt produkt'
                    )
                ),
                _react2['default'].createElement(
                    'div',
                    { className: '' },
                    _react2['default'].createElement(
                        'div',
                        { className: 'seperation-line' },
                        _react2['default'].createElement(
                            'div',
                            { className: 'container' },
                            _react2['default'].createElement(
                                'div',
                                { className: 'col-md-12 heading_text font-quicksand bold' },
                                'välj Solpaneler'
                            ),
                            _react2['default'].createElement(
                                'div',
                                { className: 'col-sm-12 col-sm-offset-3 material', style: { textAlign: 'center', padding: '30px', margin: '0px auto' } },
                                this.state.validationOne ? _react2['default'].createElement(
                                    'div',
                                    { className: 'validation', style: { margin: '0px auto' } },
                                    _react2['default'].createElement(
                                        'span',
                                        null,
                                        'Please select the Panel type'
                                    )
                                ) : null
                            ),
                            _react2['default'].createElement('div', { className: 'col-md-1' }),
                            _react2['default'].createElement(
                                'div',
                                { className: 'col-sm-12 col-md-10', id: 'panel-types' },
                                this.panels.map(function (data, index) {
                                    return _react2['default'].createElement(
                                        'div',
                                        { className: 'col-sm-6 col-md-4', key: index, onClick: _this.selectedPanel.bind(_this, data.name, data.cost) },
                                        _react2['default'].createElement(
                                            'div',
                                            { className: 'onfocs_brdr b-white', style: data.name == _this.state.panel ? selectedStyle : matstyle },
                                            _react2['default'].createElement('img', { src: data.image, alt: data.name, className: 'img-responsive' }),
                                            _react2['default'].createElement('br', null),
                                            _react2['default'].createElement(
                                                'p',
                                                { className: 'm-top9' },
                                                data.name,
                                                ' panel'
                                            )
                                        )
                                    );
                                })
                            ),
                            _react2['default'].createElement(
                                'div',
                                { className: 'col-md-12 col-sm-12 align-text-center' },
                                _react2['default'].createElement(
                                    'a',
                                    { className: 'hiperLink', onClick: this.openPanelPopup.bind(this) },
                                    'Läs mer om solpanel'
                                ),
                                this.state.panelPopup ? _react2['default'].createElement(
                                    'div',
                                    null,
                                    _react2['default'].createElement(
                                        _reactModal2['default'],
                                        {
                                            isOpen: this.state.modalForPanelIsOpen,
                                            onAfterOpen: this.afterOpenModal,
                                            onRequestClose: this.closePanelModal,
                                            style: customStyles,
                                            contentLabel: 'Example Modal' },
                                        _react2['default'].createElement(
                                            'div',
                                            { className: 'col-md-12 panding_no' },
                                            _react2['default'].createElement(
                                                'div',
                                                { className: 'boka-heading' },
                                                'Solpaneler'
                                            ),
                                            _react2['default'].createElement(
                                                'div',
                                                { className: 'f-right' },
                                                _react2['default'].createElement(
                                                    'button',
                                                    { className: 'close-button ', onClick: this.closePanelModal },
                                                    'X'
                                                )
                                            )
                                        ),
                                        _react2['default'].createElement(
                                            'div',
                                            { className: 'col-md-12 questionsPage padding-bottom-none' },
                                            _react2['default'].createElement(
                                                'div',
                                                { className: 'heading list-head' },
                                                'STANDARD SOLPANEL'
                                            ),
                                            _react2['default'].createElement(
                                                'div',
                                                { className: 'p-10' },
                                                _react2['default'].createElement(
                                                    'ul',
                                                    { className: 'panels-list' },
                                                    _react2['default'].createElement(
                                                        'li',
                                                        null,
                                                        ' - 275 kWh '
                                                    ),
                                                    _react2['default'].createElement(
                                                        'li',
                                                        null,
                                                        ' - Panel ipolykristallin'
                                                    ),
                                                    _react2['default'].createElement(
                                                        'li',
                                                        null,
                                                        ' - Passarbästförstorainstallationerpåexempelvisföretag, solcellsparkerochmarkanläggningar'
                                                    )
                                                )
                                            )
                                        ),
                                        _react2['default'].createElement(
                                            'div',
                                            { className: 'col-md-12 questionsPage padding-top-none' },
                                            _react2['default'].createElement(
                                                'div',
                                                { className: 'heading list-head' },
                                                'PREMIUM SOLPANEL'
                                            ),
                                            _react2['default'].createElement(
                                                'div',
                                                { className: 'p-10' },
                                                _react2['default'].createElement(
                                                    'ul',
                                                    { className: 'panels-list' },
                                                    _react2['default'].createElement(
                                                        'li',
                                                        null,
                                                        ' - 320 kWh '
                                                    ),
                                                    _react2['default'].createElement(
                                                        'li',
                                                        null,
                                                        ' - Panel imonokristallin'
                                                    ),
                                                    _react2['default'].createElement(
                                                        'li',
                                                        null,
                                                        ' - Passarbästförvillordå den svartskimrandefärgenoftastärmeruppskattadänstandardpanelen'
                                                    ),
                                                    _react2['default'].createElement(
                                                        'li',
                                                        null,
                                                        ' - Högreeffekt per panel görpanelenlämpligförmindretak'
                                                    )
                                                )
                                            )
                                        ),
                                        _react2['default'].createElement(
                                            'div',
                                            { className: 'estimate col-md-12 align-text-center' },
                                            _react2['default'].createElement(
                                                'button',
                                                { className: 'submit float-none', onClick: this.closePanelModal },
                                                'stäng'
                                            )
                                        )
                                    )
                                ) : null
                            )
                        )
                    ),
                    _react2['default'].createElement(
                        'div',
                        { className: 'col-sm-12 center-line-seperation' },
                        _react2['default'].createElement(
                            'div',
                            { className: 'container' },
                            _react2['default'].createElement(
                                'div',
                                { className: 'col-md-12 heading_text font-quicksand bold' },
                                'välj Batteri'
                            ),
                            _react2['default'].createElement(
                                'div',
                                { className: 'col-sm-12 material', style: { textAlign: 'center', padding: '30px', margin: '0px auto' } },
                                this.state.validationTwo ? _react2['default'].createElement(
                                    'div',
                                    { className: 'validation', style: { margin: '0px auto' } },
                                    _react2['default'].createElement(
                                        'span',
                                        null,
                                        'Please select the Battery type'
                                    )
                                ) : null
                            ),
                            _react2['default'].createElement('div', { className: 'col-md-1' }),
                            _react2['default'].createElement(
                                'div',
                                { className: 'col-sm-12 col-md-10', id: 'battery-types' },
                                this.batteries.map(function (data, index) {
                                    return _react2['default'].createElement(
                                        'div',
                                        { className: 'col-sm-6 col-md-4', key: index, onClick: _this.selectedBattery.bind(_this, data.name, data.cost) },
                                        _react2['default'].createElement(
                                            'div',
                                            { className: 'onfocs_brdr b-white', style: data.name == _this.state.battery ? selectedStyle : matstyle },
                                            _react2['default'].createElement('img', { src: data.image, alt: data.name, className: 'img-responsive' }),
                                            _react2['default'].createElement('br', null),
                                            _react2['default'].createElement(
                                                'p',
                                                { className: 'm-top9' },
                                                data.name,
                                                ' batteri'
                                            )
                                        )
                                    );
                                })
                            ),
                            _react2['default'].createElement(
                                'div',
                                { className: 'col-md-12 col-sm-12 align-text-center' },
                                _react2['default'].createElement(
                                    'a',
                                    { className: 'hiperLink', onClick: this.openBatteryPopup.bind(this) },
                                    'Läs mer om batteri'
                                ),
                                this.state.batteryPopup ? _react2['default'].createElement(
                                    'div',
                                    null,
                                    _react2['default'].createElement(
                                        _reactModal2['default'],
                                        {
                                            isOpen: this.state.modalForBatteryIsOpen,
                                            onAfterOpen: this.afterOpenModal,
                                            onRequestClose: this.closeBatteryModal,
                                            style: customStyles,
                                            contentLabel: 'Example Modal' },
                                        _react2['default'].createElement(
                                            'div',
                                            { className: 'col-md-12 panding_no' },
                                            _react2['default'].createElement(
                                                'div',
                                                { className: 'boka-heading' },
                                                'BATTERI'
                                            ),
                                            _react2['default'].createElement(
                                                'div',
                                                { className: 'f-right' },
                                                _react2['default'].createElement(
                                                    'button',
                                                    { className: 'close-button ', onClick: this.closeBatteryModal },
                                                    'X'
                                                )
                                            )
                                        ),
                                        _react2['default'].createElement(
                                            'div',
                                            { className: 'questionsPage padding-bottom-none' },
                                            _react2['default'].createElement(
                                                'div',
                                                { className: 'heading list-head' },
                                                'PREMIUM BATTERI'
                                            ),
                                            _react2['default'].createElement(
                                                'div',
                                                { className: 'p-10' },
                                                _react2['default'].createElement(
                                                    'ul',
                                                    { className: 'panels-list' },
                                                    _react2['default'].createElement(
                                                        'li',
                                                        null,
                                                        ' - 11,4 kWh effekt '
                                                    ),
                                                    _react2['default'].createElement(
                                                        'li',
                                                        null,
                                                        ' - Strömäven vid strömavbrott'
                                                    ),
                                                    _react2['default'].createElement(
                                                        'li',
                                                        null,
                                                        ' - VäxelriktareochbatterigenomBatterX.'
                                                    ),
                                                    _react2['default'].createElement(
                                                        'li',
                                                        null,
                                                        ' - Möjlighet till strömlagringfrånsolpaneler'
                                                    )
                                                )
                                            )
                                        ),
                                        _react2['default'].createElement(
                                            'div',
                                            { className: 'questionsPage padding-top-none' },
                                            _react2['default'].createElement(
                                                'div',
                                                { className: 'heading list-head' },
                                                'UTAN BATTERI'
                                            ),
                                            _react2['default'].createElement(
                                                'div',
                                                { className: 'p-10' },
                                                _react2['default'].createElement(
                                                    'ul',
                                                    { className: 'panels-list' },
                                                    _react2['default'].createElement(
                                                        'li',
                                                        null,
                                                        ' - Sälj din överskottseldirekt till elbolaget'
                                                    ),
                                                    _react2['default'].createElement(
                                                        'li',
                                                        null,
                                                        ' - Panel imonokristallin'
                                                    ),
                                                    _react2['default'].createElement(
                                                        'li',
                                                        null,
                                                        ' - Passarbästförvillordå den svartskimrandefärgenoftastärmeruppskattadänstandardpanelen'
                                                    ),
                                                    _react2['default'].createElement(
                                                        'li',
                                                        null,
                                                        ' - Högreeffekt per panel görpanelenlämpligförmindretak'
                                                    )
                                                )
                                            )
                                        ),
                                        _react2['default'].createElement(
                                            'div',
                                            { className: 'estimate align-text-center' },
                                            _react2['default'].createElement(
                                                'button',
                                                { className: 'submit float-none', onClick: this.closeBatteryModal },
                                                'stäng'
                                            )
                                        )
                                    )
                                ) : null
                            )
                        )
                    ),
                    _react2['default'].createElement(
                        'div',
                        { className: 'col-sm-12 ' },
                        _react2['default'].createElement(
                            'div',
                            { className: 'container' },
                            _react2['default'].createElement(
                                'div',
                                { className: 'col-md-12 heading_text font-quicksand bold' },
                                'välj antal solpaneler'
                            ),
                            _react2['default'].createElement(
                                'div',
                                { className: '' },
                                _react2['default'].createElement(
                                    'div',
                                    { className: 'col-sm-12 material', style: { textAlign: 'center', padding: '30px', margin: '0px auto' } },
                                    this.state.validationThree ? _react2['default'].createElement(
                                        'div',
                                        { className: 'validation', style: { margin: '0px auto' } },
                                        _react2['default'].createElement(
                                            'span',
                                            null,
                                            'Please select the packet type'
                                        )
                                    ) : null
                                ),
                                _react2['default'].createElement('div', { className: 'col-md-1' }),
                                _react2['default'].createElement(
                                    'div',
                                    { className: 'col-sm-12 col-md-10', id: 'panels-count' },
                                    this.state.popup ? _react2['default'].createElement(
                                        'div',
                                        null,
                                        _react2['default'].createElement(
                                            _reactModal2['default'],
                                            {
                                                isOpen: this.state.modalIsOpen,
                                                onAfterOpen: this.afterOpenModal,
                                                onRequestClose: this.closeModal,
                                                style: customStyles,
                                                contentLabel: 'Specify packet' },
                                            _react2['default'].createElement(
                                                'div',
                                                { className: 'col-md-12 panding_no' },
                                                _react2['default'].createElement(
                                                    'div',
                                                    { className: 'boka-heading' },
                                                    'Ange antal paneler'
                                                ),
                                                _react2['default'].createElement(
                                                    'div',
                                                    { className: 'f-right' },
                                                    _react2['default'].createElement(
                                                        'button',
                                                        { className: 'close-button ', onClick: this.closeModal },
                                                        'X'
                                                    )
                                                )
                                            ),
                                            this.state.panelCountValidation ? _react2['default'].createElement(
                                                'div',
                                                { className: 'col-md-12 panels-valid-head' },
                                                _react2['default'].createElement(
                                                    'div',
                                                    { className: 'panels-count-validation' },
                                                    'Panels range is ',
                                                    this.state.maximumPackets,
                                                    ' - ',
                                                    this.state.minimumPackets
                                                )
                                            ) : null,
                                            _react2['default'].createElement(
                                                'form',
                                                null,
                                                _react2['default'].createElement(
                                                    'div',
                                                    { className: 'col-md-12 align-text-center slots-centering ' },
                                                    _react2['default'].createElement(
                                                        'div',
                                                        { className: 'move-left' },
                                                        _react2['default'].createElement(
                                                            'div',
                                                            { onClick: this.increment.bind(this) },
                                                            _react2['default'].createElement('img', { src: './img/caret-symbol.png', alt: 'increment' })
                                                        )
                                                    ),
                                                    _react2['default'].createElement(
                                                        'div',
                                                        null,
                                                        _react2['default'].createElement('input', { id: 'counter', value: this.state.packetsCount, onChange: this.countOfpanels })
                                                    ),
                                                    _react2['default'].createElement(
                                                        'div',
                                                        { className: 'move-left' },
                                                        _react2['default'].createElement(
                                                            'div',
                                                            { onClick: this.decrement.bind(this) },
                                                            _react2['default'].createElement('img', { src: './img/down-arrow.png', alt: 'decrement' }),
                                                            ' '
                                                        )
                                                    )
                                                ),
                                                _react2['default'].createElement(
                                                    'div',
                                                    { className: 'col-md-12 booking-buttons align-text-center' },
                                                    _react2['default'].createElement(
                                                        'button',
                                                        { className: 'submit', onClick: this.closeModal },
                                                        'Avbryt'
                                                    ),
                                                    _react2['default'].createElement(
                                                        'button',
                                                        { className: 'submit', disabled: this.state.panelCountValidation, onClick: this.selectedCount.bind(this, '', this.state.packetsCount) },
                                                        'Ok'
                                                    )
                                                )
                                            )
                                        )
                                    ) : null,
                                    this.panelsArray.map(function (data, index) {
                                        return _react2['default'].createElement(
                                            'div',
                                            { className: 'col-sm-6 col-md-3 panding_no', key: index, onClick: _this.selectedCount.bind(_this, data.packet, data.count) },
                                            _react2['default'].createElement(
                                                'div',
                                                { className: 'onfocs_brdr1 b-white', style: data.packet == _this.state.packetName ? selectedStyle : matstyle },
                                                data.packet === "Custom paket" && data.count == "Ange antal paneler" ? _react2['default'].createElement(
                                                    'div',
                                                    { className: 'f21 text-capital specify-card' },
                                                    data.count
                                                ) : _react2['default'].createElement(
                                                    'div',
                                                    { className: 'packets-font' },
                                                    data.count
                                                ),
                                                _react2['default'].createElement('br', null),
                                                _react2['default'].createElement('br', null),
                                                _react2['default'].createElement(
                                                    'p',
                                                    { className: 'm-top9' },
                                                    data.packet
                                                )
                                            )
                                        );
                                    })
                                ),
                                _react2['default'].createElement(
                                    'div',
                                    { className: 'col-md-12 col-sm-12 align-text-center' },
                                    this.state.packetPopup ? _react2['default'].createElement(
                                        'div',
                                        null,
                                        _react2['default'].createElement('div', { className: 'col-md-1' }),
                                        _react2['default'].createElement(
                                            'div',
                                            { className: 'col-md-10 col-sm-12 panding_no panel-count-info-border' },
                                            _react2['default'].createElement(
                                                'div',
                                                { className: 'col-sm-6 col-md-4 panding_no' },
                                                _react2['default'].createElement(
                                                    'div',
                                                    { className: 'list-head' },
                                                    _react2['default'].createElement(
                                                        'p',
                                                        { className: 'panel-count-info' },
                                                        'MAX ANTAL SOLARPANELER',
                                                        _react2['default'].createElement('br', null),
                                                        '(Takyta har plats for)'
                                                    ),
                                                    _react2['default'].createElement(
                                                        'div',
                                                        { className: 'panel-values-info' },
                                                        this.state.maximumPackets
                                                    )
                                                )
                                            ),
                                            _react2['default'].createElement(
                                                'div',
                                                { className: 'col-sm-6 col-md-4 panding_no' },
                                                _react2['default'].createElement(
                                                    'div',
                                                    { className: 'list-head' },
                                                    _react2['default'].createElement(
                                                        'p',
                                                        { className: 'panel-count-info' },
                                                        'VALT ANTAL SOLARPANELER'
                                                    ),
                                                    _react2['default'].createElement('br', null),
                                                    _react2['default'].createElement(
                                                        'div',
                                                        { className: 'panel-values-info' },
                                                        this.state.packetsCount
                                                    )
                                                )
                                            ),
                                            _react2['default'].createElement(
                                                'div',
                                                { className: 'col-sm-6 col-md-4 panding_no' },
                                                _react2['default'].createElement(
                                                    'div',
                                                    { className: 'list-head' },
                                                    _react2['default'].createElement(
                                                        'p',
                                                        { className: 'panel-count-info' },
                                                        'EFFEKT'
                                                    ),
                                                    _react2['default'].createElement('br', null),
                                                    _react2['default'].createElement(
                                                        'div',
                                                        { className: 'panel-values-info no-border' },
                                                        totalInstalledPowerInkw,
                                                        _react2['default'].createElement(
                                                            'span',
                                                            null,
                                                            ' kWh'
                                                        )
                                                    )
                                                )
                                            )
                                        )
                                    ) : null
                                )
                            )
                        )
                    )
                ),
                _react2['default'].createElement(
                    'div',
                    { className: 'col-sm-12 estimate', style: { textAlign: 'center', padding: '30px' } },
                    _react2['default'].createElement(
                        'div',
                        { className: 'flex justifyCenter' },
                        _react2['default'].createElement(
                            'div',
                            { className: 'padding1' },
                            _react2['default'].createElement(
                                'button',
                                { className: 'submit',
                                    onClick: this.props.update.bind(this, this.state.panel, this.state.battery, this.state.packetsCount, this.state.packetName, parseInt(this.state.annualOutput)) },
                                'Byt produkt'
                            )
                        ),
                        _react2['default'].createElement(
                            'div',
                            { className: 'padding1' },
                            _react2['default'].createElement(
                                'button',
                                { onClick: this.props.closeModal, className: 'submit' },
                                'Avbryt'
                            )
                        )
                    )
                )
            );
        }
    }]);

    return PanelBatteryTypes;
})(_react.Component);

exports['default'] = PanelBatteryTypes;
module.exports = exports['default'];
/* <div className="col-sm-6 col-md-3 panding_no">
   <div className="list-head">
       <p className="panel-count-info">ÅRSPRODUKTION</p>
       <br />
       <div className='panel-values-info'>{parseInt(this.state.annualOutput)}
           <span> KWh</span>
       </div>
   </div>
</div> */

},{"react":undefined,"react-modal":88}],14:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, '__esModule', {
    value: true
});

var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; desc = parent = undefined; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _reactRangeslider = require('react-rangeslider');

var _reactRangeslider2 = _interopRequireDefault(_reactRangeslider);

var styles;

var Horizontal = (function (_React$Component) {
    _inherits(Horizontal, _React$Component);

    function Horizontal(props, context) {
        _classCallCheck(this, Horizontal);

        _get(Object.getPrototypeOf(Horizontal.prototype), 'constructor', this).call(this, props, context);
        this.state = {
            value: 0,
            roof_direction: 'SYD 1'
        };
        this.handleChange = this.handleChange.bind(this);
        this.handleChangeStart = this.handleChangeStart.bind(this);
        this.handleChangeComplete = this.handleChangeComplete.bind(this);
        this.roofDirection = this.roofDirection.bind(this);
    }

    _createClass(Horizontal, [{
        key: 'handleChangeStart',
        value: function handleChangeStart() {}
    }, {
        key: 'handleChange',
        value: function handleChange(v) {
            var _self = this;
            _self.setState({
                value: v,
                roof_direction: this.roofDirection(v)
            });
        }
    }, {
        key: 'roofDirection',
        value: function roofDirection(v) {
            switch (true) {
                // case (-90 <= v && v <= -59): return "VÄST";
                // case (-60 <= v && v <= -19): return "SYDVÄST";
                // case (-20 <= v && v <= 29): return "SYD";
                // case (30 <= v && v <= 69): return "SYDOST";
                // case (70 <= v && v <= 90): return "OST"
                // default: return "worst"
                case -90 <= v && v <= -72:
                    return "VÄST 1";
                case -72 <= v && v <= -54:
                    return "VÄST 2";
                case -55 <= v && v <= -36:
                    return "SYDVÄST 1";
                case -37 <= v && v <= -18:
                    return "SYDVÄST 2";
                case -18 <= v && v <= -1:
                    return "SYD 1";
                case 0 <= v && v <= 18:
                    return "SYD 2";
                case 19 <= v && v <= 35:
                    return "SYDOST 1";
                case 36 <= v && v <= 54:
                    return "SYDOST 2";
                case 55 <= v && v <= 72:
                    return "OST 1";
                case 72 <= v && v <= 90:
                    return "OST 2";
                default:
                    return "worst";
            }
        }
    }, {
        key: 'handleChangeComplete',
        value: function handleChangeComplete() {
            this.props.handleClick(this.state.value);
        }
    }, {
        key: 'render',
        value: function render() {
            return _react2['default'].createElement(
                'div',
                { className: 'col-md-12' },
                _react2['default'].createElement(
                    'div',
                    { className: 'slider surface-slider padd-top-bot m-top-27' },
                    _react2['default'].createElement(
                        'div',
                        { className: 'align-text-center bold' },
                        this.state.roof_direction.match(/[a-zA-Z]+/g)
                    ),
                    _react2['default'].createElement(_reactRangeslider2['default'], {
                        min: -90,
                        max: 90,
                        value: this.state.value,
                        onChangeStart: this.handleChangeStart,
                        onChange: this.handleChange,
                        onChangeComplete: this.handleChangeComplete
                    })
                )
            );
        }
    }]);

    return Horizontal;
})(_react2['default'].Component);

var DropArea = (function (_React$Component2) {
    _inherits(DropArea, _React$Component2);

    function DropArea(props) {
        _classCallCheck(this, DropArea);

        _get(Object.getPrototypeOf(DropArea.prototype), 'constructor', this).call(this, props);
        this.state = {
            list: [{ id: 1, isDragging: false, left: 0, direction: 0, roof_direction: 'SYD 1' }]
        };
        this.scrollable = this.scrollable.bind(this);
    }

    _createClass(DropArea, [{
        key: 'onDragOver',
        value: function onDragOver(e) {
            e.preventDefault();
            return false;
        }
    }, {
        key: 'onDrop',
        value: function onDrop(e) {
            var obj = JSON.parse(e.dataTransfer.getData('application/json'));
            var list = this.state.list;
            var index = this.state.list.findIndex(function (item) {
                return item.id === obj.id;
            });
            list[index].isDragging = false;
            list[index].left = e.clientX - obj.x;
            var val = Math.floor((e.clientX - obj.x) / 3);
            list[index].direction = Math.ceil(val / 5) * 5;
            if (list[index].direction > 90) {
                list[index].direction = 90;
            } else if (list[index].direction < 0) {
                list[index].direction = 0;
            }
            var newState = _extends(this.state, {
                list: list
            });
            this.setState(newState);
            e.preventDefault();
        }
    }, {
        key: 'scrollable',
        value: function scrollable(e) {
            var _this = this;

            var lists = this.state.list;
            var indexOne = this.state.list.findIndex(function (item) {
                return item.id === lists[0].id;
            });
            lists[indexOne].direction = e;
            var dir = lists[indexOne].direction;
            lists[indexOne].roof_direction = roofDirection(dir);

            function roofDirection(dir) {
                switch (true) {
                    // case (-90 <= dir && dir <= -59): return "VÄST";
                    // case (-60 <= dir && dir <= -19): return "SYDVÄST";
                    // case (-20 <= dir && dir <= 29): return "SYD";
                    // case (30 <= dir && dir <= 69): return "SYDOST";
                    // case (70 <= dir && dir <= 90): return "OST"
                    // default: return "worst"
                    case -90 <= dir && dir <= -72:
                        return "VÄST 1";
                    case -72 <= dir && dir <= -54:
                        return "VÄST 2";
                    case -55 <= dir && dir <= -36:
                        return "SYDVÄST 1";
                    case -37 <= dir && dir <= -18:
                        return "SYDVÄST 2";
                    case -18 <= dir && dir <= -1:
                        return "SYD 1";
                    case 0 <= dir && dir <= 18:
                        return "SYD 2";
                    case 19 <= dir && dir <= 35:
                        return "SYDOST 1";
                    case 36 <= dir && dir <= 54:
                        return "SYDOST 2";
                    case 55 <= dir && dir <= 72:
                        return "OST 1";
                    case 72 <= dir && dir <= 90:
                        return "OST 2";
                    default:
                        return "worst";
                }
            }
            var clickedState = _extends(this.state, {
                list: lists
            });
            this.setState(clickedState);
            setTimeout(function () {
                _this.props.direction(roofDirection(dir));
            }, 1000);
        }
    }, {
        key: 'updateStateDragging',
        value: function updateStateDragging(id, isDragging) {
            var list = this.state.list;
            var index = this.state.list.findIndex(function (item) {
                return item.id === id;
            });
            list[index].isDragging = isDragging;
            var newState = _extends(this.state, {
                list: list
            });
            this.setState(newState);
        }
    }, {
        key: 'render',
        value: function render() {
            var items = [];
            var _iteratorNormalCompletion = true;
            var _didIteratorError = false;
            var _iteratorError = undefined;

            try {
                for (var _iterator = this.state.list[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
                    var item = _step.value;

                    items.push(_react2['default'].createElement(Draggable, {
                        ref: "node_" + item.id,
                        key: item.id,
                        id: item.id,
                        left: item.left,
                        width: item.width,
                        direction: item.direction,
                        roof_direction: item.roof_direction,
                        isDragging: item.isDragging,
                        updateStateDragging: this.updateStateDragging.bind(this),
                        scrollable: this.scrollable.bind(this)
                    }));
                }
            } catch (err) {
                _didIteratorError = true;
                _iteratorError = err;
            } finally {
                try {
                    if (!_iteratorNormalCompletion && _iterator['return']) {
                        _iterator['return']();
                    }
                } finally {
                    if (_didIteratorError) {
                        throw _iteratorError;
                    }
                }
            }

            return _react2['default'].createElement(
                'div',
                {
                    className: 'col-md-12 slots-centering',
                    onDragOver: this.onDragOver.bind(this),
                    onDrop: this.onDrop.bind(this) },
                items
            );
        }
    }]);

    return DropArea;
})(_react2['default'].Component);

;

var Draggable = (function (_React$Component3) {
    _inherits(Draggable, _React$Component3);

    function Draggable() {
        _classCallCheck(this, Draggable);

        _get(Object.getPrototypeOf(Draggable.prototype), 'constructor', this).apply(this, arguments);
    }

    _createClass(Draggable, [{
        key: 'onMouseDown',
        value: function onMouseDown(e) {
            var elm = document.elementFromPoint(e.clientX, e.clientY);
            if (elm.className !== 'resizer') {
                this.props.updateStateDragging(this.props.id, true);
            }
        }
    }, {
        key: 'onMouseUp',
        value: function onMouseUp(e) {
            this.props.updateStateDragging(this.props.id, false);
        }
    }, {
        key: 'onDragStart',
        value: function onDragStart(e) {
            var nodeStyle = this.refs.node.style;
            e.dataTransfer.setData('application/json', JSON.stringify({
                id: this.props.id,
                x: e.clientX - parseInt(nodeStyle.left)
            }));
        }
    }, {
        key: 'onDragEnd',
        value: function onDragEnd(e) {
            this.props.updateStateDragging(this.props.id, false);
        }
    }, {
        key: 'render',
        value: function render() {
            if (this.props.left > 269) {
                styles = {
                    left: '269px',
                    width: this.props.width
                };
            } else if (this.props.left < 0) {
                styles = {
                    left: '0px',
                    width: this.props.width
                };
            } else {
                styles = {
                    left: this.props.left,
                    width: this.props.width
                };
            }

            var primarySideRadiation, secondarySideRadiation, color, scolor;
            if (this.props.roof_direction == 'VÄST 1') {
                //west east
                primarySideRadiation = 84;
                secondarySideRadiation = 76;
            } else if (this.props.roof_direction == 'VÄST 2') {
                //southwest
                primarySideRadiation = 88;
                secondarySideRadiation = 72;
            } else if (this.props.roof_direction == 'SYDVÄST 1') {
                //southwest
                primarySideRadiation = 92;
                secondarySideRadiation = 68;
            } else if (this.props.roof_direction == 'SYDVÄST 2') {
                //southwest
                primarySideRadiation = 96;
                secondarySideRadiation = 64;
            } else if (this.props.roof_direction == 'SYD 1') {
                //south
                primarySideRadiation = 100;
                secondarySideRadiation = 60;
            } else if (this.props.roof_direction == 'SYD 2') {
                //south
                primarySideRadiation = 100;
                secondarySideRadiation = 60;
            } else if (this.props.roof_direction == 'SYDOST 1') {
                //southeast
                primarySideRadiation = 92;
                secondarySideRadiation = 64;
            } else if (this.props.roof_direction == 'SYDOST 2') {
                //southeast
                primarySideRadiation = 84;
                secondarySideRadiation = 68;
            } else if (this.props.roof_direction == 'OST 1') {
                //southeast
                primarySideRadiation = 72;
                secondarySideRadiation = 84;
            } else if (this.props.roof_direction == 'OST 2') {
                //southeast
                primarySideRadiation = 76;
                secondarySideRadiation = 84;
            }

            if (primarySideRadiation == '100') {
                color = '#E89600';
            } else if (primarySideRadiation == '96') {
                color = '#FFA500';
            } else if (primarySideRadiation == '92') {
                color = '#FFAD17';
            } else if (primarySideRadiation == '88') {
                color = '#FFB52E';
            } else if (primarySideRadiation == '84') {
                color = '#FFBD45';
            } else if (primarySideRadiation == '76') {
                color = '#FFC55C';
            } else if (primarySideRadiation == '72') {
                color = '#FFCD73';
            } else if (primarySideRadiation == '68') {
                color = '#FFD68B';
            } else if (primarySideRadiation == '64') {
                color = '#FFDEA2';
            } else if (primarySideRadiation == '60') {
                color = '#FFE6B9';
            }
            if (secondarySideRadiation == '100') {
                scolor = '#E89600';
            } else if (secondarySideRadiation == '96') {
                scolor = '#FFA500';
            } else if (secondarySideRadiation == '92') {
                scolor = '#FFAD17';
            } else if (secondarySideRadiation == '88') {
                scolor = '#FFB52E';
            } else if (secondarySideRadiation == '84') {
                scolor = '#FFBD45';
            } else if (secondarySideRadiation == '76') {
                scolor = '#FFC55C';
            } else if (secondarySideRadiation == '72') {
                scolor = '#FFCD73';
            } else if (secondarySideRadiation == '68') {
                scolor = '#FFD68B';
            } else if (secondarySideRadiation == '64') {
                scolor = '#FFDEA2';
            } else if (secondarySideRadiation == '60') {
                scolor = '#FFE6B9';
            }

            return _react2['default'].createElement(
                _react2['default'].Fragment,
                null,
                _react2['default'].createElement('div', { className: 'col-md-1' }),
                _react2['default'].createElement(
                    'div',
                    { className: 'col-md-5 direction' },
                    _react2['default'].createElement(Horizontal, { handleClick: this.props.scrollable })
                ),
                _react2['default'].createElement(
                    'div',
                    { className: 'col-md-6' },
                    _react2['default'].createElement(
                        'div',
                        { className: 'col-md-12 col-sm-12 border-box px2 mb2 sm-mb0 news' },
                        _react2['default'].createElement(
                            'div',
                            { className: 'calc-roof flex items-center justify-center mx-auto mt2' },
                            _react2['default'].createElement(
                                'span',
                                { className: 'calc-roof-direction calc-roof-direction--north h4 top-0 text-blue bold ' },
                                'N'
                            ),
                            _react2['default'].createElement(
                                'span',
                                { className: 'calc-roof-direction calc-roof-direction--south h4 bottom-0 text-blue bold' },
                                'S'
                            ),
                            _react2['default'].createElement(
                                'span',
                                { className: 'calc-roof-direction calc-roof-direction--west h4 left-0 text-blue bold west' },
                                'W'
                            ),
                            _react2['default'].createElement(
                                'span',
                                { className: 'calc-roof-direction calc-roof-direction--east h4 right-0 text-blue bold east' },
                                'E'
                            ),
                            _react2['default'].createElement(
                                'ul',
                                { className: 'directions-list', style: { transform: 'rotate(' + this.props.direction + 'deg)' } },
                                _react2['default'].createElement(
                                    'li',
                                    { className: 'Upper-list', style: { background: '' + scolor } },
                                    secondarySideRadiation
                                ),
                                _react2['default'].createElement(
                                    'li',
                                    { className: 'lower-list', style: { background: '' + color } },
                                    primarySideRadiation
                                )
                            )
                        )
                    )
                )
            );
        }
    }]);

    return Draggable;
})(_react2['default'].Component);

;

exports['default'] = DropArea;
module.exports = exports['default'];
/* <img className="calc-roof-img js-calc-roof-img"
   src="https://www.utellus.se/wp-content/themes/utellus/images/roof.svg" alt="roof" style={{ transform: `rotate(${this.props.direction}deg)` }} /> */

},{"react":undefined,"react-rangeslider":90}],15:[function(require,module,exports){
module.exports={"url":"http://localhost:8080/","lt_70":220,"gt_70_gt_1000":190,"gt_1000":100}

},{}],16:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; desc = parent = undefined; continue _function; } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var mapstyle = {
    width: "100%",
    height: "400px"
};

var Contact = (function (_Component) {
    _inherits(Contact, _Component);

    function Contact(props) {
        _classCallCheck(this, Contact);

        _get(Object.getPrototypeOf(Contact.prototype), "constructor", this).call(this, props);
        this.state = {
            date: new Date(),
            time: ""
        };
    }

    _createClass(Contact, [{
        key: "contactdate",
        value: function contactdate(event) {
            alert(this.refs.googleInput.value);
            this.setState({
                date: event.target.name
            });
        }
    }, {
        key: "contacttime",
        value: function contacttime(event) {
            alert(event.target.name);
            this.setState({
                time: event.target.name
            });
        }
    }, {
        key: "datetimeservice",
        value: function datetimeservice(valdate, valtime, valemail) {
            var valemail = JSON.parse(localStorage.getItem("userdata")).email;
            var token = localStorage.getItem("token");
            var payload = {
                valdate: valdate,
                valtime: valtime,
                email: valemail
            };

            fetch(mainurl.url + 'users/connecttimes', {
                method: "post",
                crossDomain: true,
                headers: {
                    'Content-Type': 'application/x-www-form-urlencoded',
                    "Access-Control-Request-Headers": "*",
                    "Access-Control-Request-Method": "*"
                }, body: 'json=' + JSON.stringify(payload) + '&token=' + token
            }).then(function (response) {
                return response;
            }).then(function (response) {
                return response.json();
            }).then(function (data) {
                if (data.status == 400) {
                    main.setState({
                        responceerror: data.message
                    });
                } else if (data.status == 200) {
                    alert("dtaasaved");
                }
            });
        }
    }, {
        key: "contactfunc",
        value: function contactfunc(event) {
            event.preventDefault();
            this.datetimeservice(this.refs.dateinput.value, this.refs.googleInput.value);
        }
    }, {
        key: "render",
        value: function render() {
            return _react2["default"].createElement(
                "div",
                { id: "contactus" },
                _react2["default"].createElement(
                    "div",
                    { id: "aboutus-image" },
                    _react2["default"].createElement(
                        "div",
                        { className: "container about_txt" },
                        _react2["default"].createElement(
                            "h2",
                            null,
                            "Contact us"
                        ),
                        _react2["default"].createElement(
                            "p",
                            null,
                            "Contrary to popular belief, Lorem Ipsum is not simply random text. "
                        ),
                        _react2["default"].createElement(
                            "p",
                            null,
                            "Contrary to popular belief, Lorem Ipsum is not simply random text. "
                        ),
                        _react2["default"].createElement(
                            "p",
                            null,
                            "Contrary to popular belief, Lorem Ipsum is not simply random text. "
                        )
                    )
                ),
                _react2["default"].createElement(
                    "section",
                    null,
                    _react2["default"].createElement(
                        "div",
                        { className: "container" },
                        _react2["default"].createElement(
                            "div",
                            { id: "contactus-text" },
                            _react2["default"].createElement(
                                "h2",
                                null,
                                "Head"
                            ),
                            _react2["default"].createElement(
                                "h4",
                                null,
                                "Contrary to popular belief, Lorem Ipsum is not simply random text"
                            ),
                            _react2["default"].createElement(
                                "h4",
                                null,
                                "Contrary to popular belief, Lorem Ipsum is not simply random text"
                            ),
                            _react2["default"].createElement(
                                "h4",
                                null,
                                "Contrary to popular belief, Lorem Ipsum is not simply random text"
                            )
                        )
                    )
                ),
                _react2["default"].createElement(
                    "div",
                    { className: "container" },
                    _react2["default"].createElement(
                        "h3",
                        null,
                        "Find us"
                    )
                ),
                _react2["default"].createElement(
                    "div",
                    null,
                    _react2["default"].createElement("iframe", { src: "https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d3112.39757369508!2d25.426806322419676!3d59.44615054777371!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x4692fc596b38b4e1%3A0xc5602a1b2a678b42!2sBuilding+Materials+kaluplus!5e0!3m2!1sen!2sin!4v1519103601985", style: mapstyle })
                )
            );
        }
    }]);

    return Contact;
})(_react.Component);

exports["default"] = Contact;
module.exports = exports["default"];

},{"react":undefined}],17:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, '__esModule', {
  value: true
});

var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; desc = parent = undefined; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _reactDom = require('react-dom');

var _reactDom2 = _interopRequireDefault(_reactDom);

var _reactStepperHorizontal = require('react-stepper-horizontal');

var _reactStepperHorizontal2 = _interopRequireDefault(_reactStepperHorizontal);

var CStepper = (function (_Component) {
  _inherits(CStepper, _Component);

  function CStepper(props) {
    _classCallCheck(this, CStepper);

    _get(Object.getPrototypeOf(CStepper.prototype), 'constructor', this).call(this, props);

    this.steps = [{
      image: "./img/map.png",
      name: "Markera ut ditt tak",
      arrow: "fa fa-angle-double-right fa-3x text-right",
      stepindex: 1

    },
    // {
    //   image: "./img/style.png",
    //   name: "Välj din takstil",
    //   arrow: "fa fa-angle-double-right fa-3x text-right",
    //   stepindex: 2

    // },
    {
      image: "./img/material.png",
      name: "Välj material",
      arrow: "fa fa-angle-double-right fa-3x text-right",
      stepindex: 3

    }, {
      image: "./img/estimate.png",
      name: "Prisuppskattning",
      arrow: "",
      stepindex: 4

    }];
  }

  _createClass(CStepper, [{
    key: 'render',
    value: function render() {
      return _react2['default'].createElement(_reactStepperHorizontal2['default'], { steps: [{ title: 'Map' }, { title: 'Slope' }, { title: 'Material' }, { title: 'Estimation' }], activeStep: this.props.stepindex, titleTop: 'Hi' });
    }
  }]);

  return CStepper;
})(_react.Component);

var selectcolor = {
  color: "#5cb85c",
  border: { border: "2px solid rgb(10,83,156)", backgroundColor: '#c3e0ce' },
  topborder: { borderTop: "2px solid rgb(10,83,156)" }
};

var currentselectcolor = {
  color: "#5cb85c",
  border: { border: "2px solid rgb(10,83,156)", backgroundColor: 'rgb(10, 83, 156)' },
  topborder: { borderTop: "2px solid rgb(10,83,156)" }
};

var unselect = {
  color: "#000"
};

var Steps = (function (_Component2) {
  _inherits(Steps, _Component2);

  function Steps(props) {
    _classCallCheck(this, Steps);

    _get(Object.getPrototypeOf(Steps.prototype), 'constructor', this).call(this, props);

    this.steps = [{
      image: "./img/map.png",
      name: "Markera ut ditt tak",
      arrow: "fa fa-angle-double-right fa-3x text-right",
      stepindex: 1

    }, {
      image: "./img/property-information.png",
      name: "Fastighetsinformation",
      arrow: "fa fa-angle-double-right fa-3x text-right",
      stepindex: 3
    }, {
      image: "./img/material.png",
      name: "Takinformation",
      arrow: "fa fa-angle-double-right fa-3x text-right",
      stepindex: 4
    }, {
      image: "./img/electricity.png",
      name: " Elförbrukning & säkring  ",
      arrow: "fa fa-angle-double-right fa-3x text-right",
      stepindex: 5
    }, {
      image: "./img/electricity.png",
      name: " Solpanel & Batteri  ",
      arrow: "fa fa-angle-double-right fa-3x text-right",
      stepindex: 6
    }, {
      image: "./img/estimate.png",
      name: "Prisuppskattning färdig",
      arrow: "",
      stepindex: 7
    }];
  }

  _createClass(Steps, [{
    key: 'render',
    value: function render() {
      var _this = this;

      return _react2['default'].createElement(
        'div',
        { className: 'container' },
        _react2['default'].createElement('br', null),
        _react2['default'].createElement(
          'div',
          { className: 'md-stepper-horizontal orange' },
          this.steps.map(function (data, index) {
            var stepstyle = _this.props.stepindex > data.stepindex ? selectcolor : _this.props.stepindex === data.stepindex ? currentselectcolor : unselect;
            return _react2['default'].createElement(
              'div',
              { className: 'md-step active editable', key: index },
              _react2['default'].createElement(
                'div',
                { className: 'md-step-circle', style: stepstyle.border },
                _react2['default'].createElement(
                  'span',
                  null,
                  _react2['default'].createElement('img', { src: data.image, alt: data.name, className: 'img-responsive stepper-icon' })
                )
              ),
              _react2['default'].createElement(
                'div',
                { className: 'md-step-title' },
                _react2['default'].createElement(
                  'p',
                  { className: 'stepstext', style: stepstyle },
                  data.name
                )
              ),
              _react2['default'].createElement('div', { className: 'md-step-bar-left', style: stepstyle.topborder }),
              _react2['default'].createElement('div', { className: 'md-step-bar-right', style: stepstyle.topborder })
            );
          })
        )
      );
    }
  }]);

  return Steps;
})(_react.Component);

exports['default'] = Steps;
module.exports = exports['default'];

},{"react":undefined,"react-dom":undefined,"react-stepper-horizontal":121}],18:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, '__esModule', {
  value: true
});

var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; desc = parent = undefined; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _mapcomponent = require('./mapcomponent');

var _mapcomponent2 = _interopRequireDefault(_mapcomponent);

var _cstepper = require('./cstepper');

var _cstepper2 = _interopRequireDefault(_cstepper);

var _materialComponent = require('./materialComponent');

var _materialComponent2 = _interopRequireDefault(_materialComponent);

var _areaestimate = require('./areaestimate');

var _areaestimate2 = _interopRequireDefault(_areaestimate);

var _roof_questions = require('./roof_questions');

var _roof_questions2 = _interopRequireDefault(_roof_questions);

var _material_questions = require('./material_questions');

var _material_questions2 = _interopRequireDefault(_material_questions);

var _loginEstimation = require('./loginEstimation');

var _loginEstimation2 = _interopRequireDefault(_loginEstimation);

var _panelTypes = require('./panelTypes');

var _panelTypes2 = _interopRequireDefault(_panelTypes);

var _componentsContextProvider = require('./components/ContextProvider');

var _componentsContextProvider2 = _interopRequireDefault(_componentsContextProvider);

var style = {
  marginTop: 0,
  marginBottom: 30
};

var Main = (function (_Component) {
  _inherits(Main, _Component);

  function Main(props) {
    _classCallCheck(this, Main);

    _get(Object.getPrototypeOf(Main.prototype), 'constructor', this).call(this, props);
    this.state = {
      componentindex: 1,
      finished: false,
      roofarea: 0,
      roofstyle: "",
      material: "",
      materialCost: 0,
      roofstylecost: 0,
      Roofaddress: "",
      roofadress: "",
      coordinates: "",
      e_consumption: '',
      power: '',
      location: '',
      panel: '',
      battery: '',
      panelsCount: '',
      surfaceDirection: '',
      annualoutput: ''
    };
  }

  _createClass(Main, [{
    key: 'componentWillMount',
    value: function componentWillMount() {
      var index = sessionStorage.getItem('componentindex');
      if (index && index !== '' && index !== 'undefined' && index !== 'null') {
        this.setState({
          componentindex: index,
          location: ''
        });
      } else {
        sessionStorage.setItem('componentindex', 1);
        this.setState({
          componentindex: 1,
          location: ''
        });
      }
    }
  }, {
    key: 'area1',
    value: function area1(v, address, coordinates) {
      var json = coordinates;
      var obj = JSON.parse(json);
      var coordinate = obj.map(function (o, v) {
        return Math.round(parseFloat(o));
      });
      sessionStorage.setItem('coordinates', coordinate.toString());
      sessionStorage.setItem('Roofaddress', address);
      sessionStorage.setItem('roofarea', v);
      sessionStorage.setItem('componentindex', 2);
      window.location.href = "/#steg2";
      this.setState({
        location: '/#steg2',
        componentindex: 2,
        roofarea: v,
        Roofaddress: address,
        coordinates: coordinates
      });
    }
  }, {
    key: 'qusetionsval',
    value: function qusetionsval(type, floor, angle) {
      sessionStorage.setItem('property_type', type);
      sessionStorage.setItem('floors', floor);
      sessionStorage.setItem('roof_pitch', angle);
      sessionStorage.setItem('componentindex', 3);
      window.location.href = "/#steg3";
      this.setState({
        componentindex: 3,
        property_type: type,
        floors: floor,
        roof_pitch: angle,
        location: "/#steg3"
      });
    }
  }, {
    key: 'materialval',
    value: function materialval(value, cost, direction) {
      sessionStorage.setItem('materialCost', cost);
      sessionStorage.setItem('roofmaterial', value);
      sessionStorage.setItem('surfaceDirection', direction);
      sessionStorage.setItem('componentindex', 4);
      window.location.href = "/#steg4";
      this.setState({
        componentindex: 4,
        roofmaterial: sessionStorage.getItem('roofmaterial'),
        materialCost: sessionStorage.getItem('materialCost'),
        surfaceDirection: sessionStorage.getItem('surfaceDirection'),
        location: "/#steg4"
      });
    }
  }, {
    key: 'matquestionval',
    value: function matquestionval(type, floor) {
      sessionStorage.setItem('e_consumption', type);
      sessionStorage.setItem('power', floor);
      sessionStorage.setItem('componentindex', 5);
      window.location.href = "/#steg5";
      this.setState({
        componentindex: 5,
        e_consumption: sessionStorage.getItem('e_consumption'),
        power: sessionStorage.getItem('power'),
        location: "/#steg5"
      });
    }
  }, {
    key: 'panelTypes',
    value: function panelTypes(panel, battery, count, packetName, annualoutput) {
      sessionStorage.setItem('panel', panel);
      sessionStorage.setItem('battery', battery);
      sessionStorage.setItem('panelsCount', count);
      sessionStorage.setItem('packetName', packetName);
      sessionStorage.setItem('annualoutput', annualoutput);
      if (this.props.loginmode) {
        sessionStorage.setItem('componentindex', 7);
        this.areaEst = this.areaEstimetack.bind(this);
        this.areaEst(this);
        console.log(sessionStorage.getItem('solarIncentives'));
        this.setState({
          componentindex: 7,
          e_consumption: sessionStorage.getItem('e_consumption'),
          power: sessionStorage.getItem('power'),
          roofmaterial: sessionStorage.getItem('roofmaterial'),
          materialCost: sessionStorage.getItem('materialCost'),
          Roofaddress: sessionStorage.getItem('Roofaddress'),
          coordinates: sessionStorage.getItem('coordinates'),
          roofarea: sessionStorage.getItem('roofarea'),
          property_type: sessionStorage.getItem('property_type'),
          floors: sessionStorage.getItem('floors'),
          roof_pitch: sessionStorage.getItem('roof_pitch'),
          panel: sessionStorage.getItem('panel'),
          battery: sessionStorage.getItem('battery'),
          panelsCount: sessionStorage.getItem('panelsCount'),
          annualoutput: sessionStorage.getItem('annualoutput'),
          battery1: sessionStorage.getItem('battery'),
          solarIncentives: sessionStorage.getItem('solarIncentives'),
          batteryIncentvies: sessionStorage.getItem('battbatteryIncentiveser'),
          finalCost: sessionStorage.getItem('final_cost')
        });
      } else {
        sessionStorage.setItem('componentindex', 6);
        window.location.href = "/#steg6", this.setState({
          componentindex: 6,
          e_consumption: sessionStorage.getItem('e_consumption'),
          power: sessionStorage.getItem('power'),
          roofmaterial: sessionStorage.getItem('roofmaterial'),
          materialCost: sessionStorage.getItem('materialCost'),
          Roofaddress: sessionStorage.getItem('Roofaddress'),
          coordinates: sessionStorage.getItem('coordinates'),
          roofarea: sessionStorage.getItem('roofarea'),
          property_type: sessionStorage.getItem('property_type'),
          floors: sessionStorage.getItem('floors'),
          roof_pitch: sessionStorage.getItem('roof_pitch'),
          panel: sessionStorage.getItem('panel'),
          battery: sessionStorage.getItem('battery'),
          panelsCount: sessionStorage.getItem('panelsCount'),
          roofAreaPkt: JSON.parse(sessionStorage.getItem('roofAreaPkt')),
          location: "/#steg6"
        });
      }
    }
  }, {
    key: 'areaEstimetack',
    value: function areaEstimetack() {

      window.location.href = "/#tack";
      sessionStorage.setItem('componentindex', 7);
      this.setState({
        componentindex: 6,
        location: "/#tack",
        roofmaterial: sessionStorage.getItem('roofmaterial'),
        materialCost: sessionStorage.getItem('materialCost'),
        Roofaddress: sessionStorage.getItem('Roofaddress'),
        coordinates: sessionStorage.getItem('coordinates'),
        roofstyle: sessionStorage.getItem('roofstyle'),
        roofstylecost: sessionStorage.getItem('roofstylecost'),
        roofarea: sessionStorage.getItem('roofarea'),
        property_type: sessionStorage.getItem('property_type'),
        floors: sessionStorage.getItem('floors'),
        roof_pitch: sessionStorage.getItem('roof_pitch'),
        battery1: sessionStorage.getItem('battery'),
        solarIncentives: sessionStorage.getItem('solarIncentives'),
        batteryIncentvies: sessionStorage.getItem('battbatteryIncentiveser'),
        finalCost: sessionStorage.getItem('final_cost')
      });
    }
  }, {
    key: 'handlePre',
    value: function handlePre(val) {
      if (this.state.componentindex > 1) this.setState({ componentindex: this.state.componentindex - 1 });
    }
  }, {
    key: 'handleNext',
    value: function handleNext() {
      if (this.state.finished == false) {
        this.setState({
          componentindex: this.state.componentindex + 1,
          finished: this.state.componentindex >= 7
        });
      }
    }
  }, {
    key: 'stepval',
    value: function stepval(val) {
      if (val === 1) {
        window.location.href = "/";
      } else {
        window.location.href = "/#steg" + val;
        this.setState({ location: "/#steg" + val, componentindex: val });
      }
      sessionStorage.setItem('componentindex', val);
    }
  }, {
    key: 'render',
    value: function render() {
      var _this = this;

      switch (window.location.hash) {
        case '':
          sessionStorage.setItem('componentindex', 1);
          return _react2['default'].createElement(
            'div',
            { ref: function (ref) {
                return _this._div = ref;
              } },
            _react2['default'].createElement(_cstepper2['default'], { stepindex: parseInt(sessionStorage.getItem('componentindex')) + 1 }),
            _react2['default'].createElement(_mapcomponent2['default'], { area: this.area1.bind(this), stepindex: this.state.componentindex, roofaddress: sessionStorage.getItem('Roofaddress') === null ? this.state.Roofaddress : sessionStorage.getItem('Roofaddress') })
          );
        case '/':
          return _react2['default'].createElement(
            'div',
            { ref: function (ref) {
                return _this._div = ref;
              } },
            _react2['default'].createElement(_cstepper2['default'], { stepindex: parseInt(sessionStorage.getItem('componentindex')) + 1 }),
            _react2['default'].createElement(_mapcomponent2['default'], { area: this.area1.bind(this), stepindex: this.state.componentindex, roofaddress: sessionStorage.getItem('Roofaddress') === null ? this.state.Roofaddress : sessionStorage.getItem('Roofaddress') })
          );
        case '/#':
          return _react2['default'].createElement(
            'div',
            { ref: function (ref) {
                return _this._div = ref;
              } },
            _react2['default'].createElement(_cstepper2['default'], { stepindex: parseInt(sessionStorage.getItem('componentindex')) + 1 }),
            _react2['default'].createElement(_mapcomponent2['default'], { area: this.area1.bind(this), stepindex: this.state.componentindex, roofaddress: sessionStorage.getItem('Roofaddress') === null ? this.state.Roofaddress : sessionStorage.getItem('Roofaddress') })
          );
        case '#steg2':
          sessionStorage.setItem('componentindex', 2);
          return _react2['default'].createElement(
            _componentsContextProvider2['default'],
            null,
            _react2['default'].createElement(_cstepper2['default'], { stepindex: parseInt(sessionStorage.getItem('componentindex')) + 1 }),
            _react2['default'].createElement(
              'div',
              { className: 'container-fluid panding_no' },
              _react2['default'].createElement(_roof_questions2['default'], null)
            )
          );
        case '#steg3':
          sessionStorage.setItem('componentindex', 3);
          return _react2['default'].createElement(
            _componentsContextProvider2['default'],
            null,
            _react2['default'].createElement(
              _react2['default'].Fragment,
              null,
              _react2['default'].createElement(_cstepper2['default'], { stepindex: parseInt(sessionStorage.getItem('componentindex')) + 1 }),
              _react2['default'].createElement(
                'div',
                { className: 'container-fluid', style: style },
                _react2['default'].createElement(_materialComponent2['default'], { matval: this.materialval.bind(this), back: this.stepval.bind(this) })
              )
            )
          );
        case '#steg4':
          sessionStorage.setItem('componentindex', 4);
          return _react2['default'].createElement(
            _componentsContextProvider2['default'],
            null,
            _react2['default'].createElement(
              _react2['default'].Fragment,
              null,
              _react2['default'].createElement(_cstepper2['default'], { stepindex: parseInt(sessionStorage.getItem('componentindex')) + 1 }),
              _react2['default'].createElement(
                'div',
                { className: 'container-fluid', style: style },
                _react2['default'].createElement(_material_questions2['default'], { matquestionval: this.matquestionval.bind(this), back: this.stepval.bind(this) })
              )
            )
          );

        case '#steg5':
          sessionStorage.setItem('componentindex', 5);
          return _react2['default'].createElement(
            _componentsContextProvider2['default'],
            null,
            _react2['default'].createElement(
              _react2['default'].Fragment,
              null,
              _react2['default'].createElement(_cstepper2['default'], { stepindex: parseInt(sessionStorage.getItem('componentindex')) + 1 }),
              _react2['default'].createElement(
                'div',
                { className: 'container-fluid stegs_map', style: style },
                _react2['default'].createElement(_panelTypes2['default'], { roofarea: this.state.roofarea != '' && this.state.roofarea != 0 ? this.state.roofarea : sessionStorage.getItem('roofarea'), e_consumption: this.state.e_consumption != '' && typeof this.state.e_consumption != 'undefined' ? this.state.e_consumption : sessionStorage.getItem('e_consumption'),
                  panelTypes: this.panelTypes.bind(this), back: this.stepval.bind(this),
                  panel: this.state.panel != '' && typeof this.state.panel != 'undefined' ? this.state.panel : sessionStorage.getItem('panel'),
                  e_consumption: this.state.e_consumption != '' && typeof this.state.e_consumption != 'undefined' ? this.state.e_consumption : sessionStorage.getItem('e_consumption'),
                  roof_pitch: this.state.roof_pitch != '' && typeof this.state.roof_pitch != 'undefined' ? this.state.roof_pitch : sessionStorage.getItem('roof_pitch'),
                  surfaceDirection: this.state.surfaceDirection != '' && typeof this.state.surfaceDirection != 'undefined' ? this.state.surfaceDirection : sessionStorage.getItem('surfaceDirection'),
                  panelsCount: this.state.panelsCount != '' && typeof this.state.panelsCount != 'undefined' ? this.state.panelsCount : sessionStorage.getItem('panelsCount'),
                  location: sessionStorage.getItem('Roofaddress') === null ? this.state.Roofaddress : sessionStorage.getItem('Roofaddress')
                })
              )
            )
          );
        case '#steg6':
          sessionStorage.setItem('componentindex', 6);
          if (this.props.loginmode === false) {
            return _react2['default'].createElement(
              _componentsContextProvider2['default'],
              null,
              _react2['default'].createElement(
                _react2['default'].Fragment,
                null,
                _react2['default'].createElement(_cstepper2['default'], { stepindex: parseInt(sessionStorage.getItem('componentindex')) + 1 }),
                _react2['default'].createElement(
                  'div',
                  { className: 'container-fluid', style: style },
                  _react2['default'].createElement(_loginEstimation2['default'], {
                    location: this.state.location,
                    material: this.state.roofmaterial != '' && typeof this.state.roofmaterial != 'undefined' ? this.state.roofmaterial : sessionStorage.getItem('roofmaterial'),
                    materialcost: this.state.materialCost != '' && this.state.materialCost != 0 ? this.state.materialCost : sessionStorage.getItem('materialCost'),
                    area: this.state.roofarea != '' && this.state.roofarea != 0 ? this.state.roofarea : sessionStorage.getItem('roofarea'),
                    logedin: this.props.loginmode,
                    address: this.state.Roofaddress != '' ? this.state.Roofaddress : sessionStorage.getItem('Roofaddress'),
                    loginmodefun: this.props.loginmodefun,
                    coordinates: this.state.coordinates != '' ? this.state.coordinates : sessionStorage.getItem('coordinates'),
                    property_type: this.state.property_type != '' && typeof this.state.property_type != 'undefined' ? this.state.property_type : sessionStorage.getItem('property_type'),
                    floors: this.state.floors != '' && typeof this.state.floors != 'undefined' ? this.state.floors : sessionStorage.getItem('floors'),
                    roof_pitch: this.state.roof_pitch != '' && typeof this.state.roof_pitch != 'undefined' ? this.state.roof_pitch : sessionStorage.getItem('roof_pitch'),
                    e_consumption: this.state.e_consumption != '' && typeof this.state.e_consumption != 'undefined' ? this.state.e_consumption : sessionStorage.getItem('e_consumption'),
                    power: this.state.power != '' && typeof this.state.power != 'undefined' ? this.state.power : sessionStorage.getItem('power'),
                    areaEstimetack: this.areaEstimetack.bind(this),
                    style: this.state.roofstyle,
                    roofstylecost: this.state.roofstylecost,
                    panel: this.state.panel != '' && typeof this.state.panel != 'undefined' ? this.state.panel : sessionStorage.getItem('panel'),
                    battery: this.state.battery != '' && typeof this.state.battery != 'undefined' ? this.state.battery : sessionStorage.getItem('battery'),
                    panelsCount: this.state.panelsCount != '' && typeof this.state.panelsCount != 'undefined' ? this.state.panelsCount : sessionStorage.getItem('panelsCount'),
                    surfaceDirection: this.state.surfaceDirection != '' && typeof this.state.surfaceDirection != 'undefined' ? this.state.surfaceDirection : sessionStorage.getItem('surfaceDirection'),
                    roofAreaPkt: JSON.parse(sessionStorage.getItem('roofAreaPkt')),
                    panel_cost: parseInt(sessionStorage.getItem('panel_cost')),
                    pannel_name: sessionStorage.getItem('pannel_name'),
                    pannel_capacity: sessionStorage.getItem('pannel_capacity'),
                    battery1: sessionStorage.getItem('battery'),
                    solarIncentives: sessionStorage.getItem('solarIncentives'),
                    batteryIncentvies: sessionStorage.getItem('battbatteryIncentiveser'),
                    finalCost: sessionStorage.getItem('final_cost')
                  })
                )
              )
            );
          } else {
            this.panelTypes.bind(this);
          }

        case '#tack':
          sessionStorage.setItem('componentindex', 7);
          return _react2['default'].createElement(
            _componentsContextProvider2['default'],
            null,
            _react2['default'].createElement(
              _react2['default'].Fragment,
              null,
              _react2['default'].createElement(_cstepper2['default'], { stepindex: parseInt(sessionStorage.getItem('componentindex')) + 1 }),
              _react2['default'].createElement(
                'div',
                { className: 'container-fluid panding_no', style: { marginTop: '20px' } },
                _react2['default'].createElement(_areaestimate2['default'], {
                  location: this.state.location,
                  material: this.state.roofmaterial != '' && typeof this.state.roofmaterial != 'undefined' ? this.state.roofmaterial : sessionStorage.getItem('roofmaterial'),
                  materialcost: this.state.materialCost != '' && this.state.materialCost != 0 ? this.state.materialCost : sessionStorage.getItem('materialCost'),
                  area: this.state.roofarea != '' && this.state.roofarea != 0 ? this.state.roofarea : sessionStorage.getItem('roofarea'),
                  logedin: this.props.loginmode,
                  address: this.state.Roofaddress != '' ? this.state.Roofaddress : sessionStorage.getItem('Roofaddress'),
                  loginmodefun: this.props.loginmodefun,
                  coordinates: this.state.coordinates != '' ? this.state.coordinates : sessionStorage.getItem('coordinates'),
                  property_type: this.state.property_type != '' && typeof this.state.property_type != 'undefined' ? this.state.property_type : sessionStorage.getItem('property_type'),
                  floors: this.state.floors != '' && typeof this.state.floors != 'undefined' ? this.state.floors : sessionStorage.getItem('floors'),
                  roof_pitch: this.state.roof_pitch != '' && typeof this.state.roof_pitch != 'undefined' ? this.state.roof_pitch : sessionStorage.getItem('roof_pitch'),
                  e_consumption: this.state.e_consumption != '' && typeof this.state.e_consumption != 'undefined' ? this.state.e_consumption : sessionStorage.getItem('e_consumption'),
                  power: this.state.power != '' && typeof this.state.power != 'undefined' ? this.state.power : sessionStorage.getItem('power'),
                  areaEstimetack: this.areaEstimetack.bind(this),
                  style: this.state.roofstyle,
                  roofstylecost: this.state.roofstylecost,
                  componentindex: sessionStorage.getItem('componentindex'),
                  panel: this.state.panel != '' && typeof this.state.panel != 'undefined' ? this.state.panel : sessionStorage.getItem('panel'),
                  battery: this.state.battery != '' && typeof this.state.battery != 'undefined' ? this.state.battery : sessionStorage.getItem('battery'),
                  panelsCount: this.state.panelsCount != '' && typeof this.state.panelsCount != 'undefined' ? this.state.panelsCount : sessionStorage.getItem('panelsCount'),
                  packetName: sessionStorage.getItem('packetName'),
                  surfaceDirection: this.state.surfaceDirection != '' && typeof this.state.surfaceDirection != 'undefined' ? this.state.surfaceDirection : sessionStorage.getItem('surfaceDirection'),
                  annualoutput: this.state.annualoutput != '' && typeof this.state.annualoutput != 'undefined' ? this.state.annualoutput : sessionStorage.getItem('annualoutput'),
                  roofaddress: sessionStorage.getItem('Roofaddress') === null ? this.state.Roofaddress : sessionStorage.getItem('Roofaddress'),
                  packetName: sessionStorage.getItem('packetName'),

                  pannel_capacity: sessionStorage.getItem('pannel_capacity'),
                  battery1: sessionStorage.getItem('battery'),
                  solarIncentives: sessionStorage.getItem('solarIncentives'),
                  batteryIncentvies: sessionStorage.getItem('battbatteryIncentiveser'),
                  finalCost: sessionStorage.getItem('final_cost')
                })
              )
            )
          );
        default:
          return _react2['default'].createElement(
            _componentsContextProvider2['default'],
            null,
            _react2['default'].createElement(
              _react2['default'].Fragment,
              null,
              _react2['default'].createElement(_cstepper2['default'], { stepindex: parseInt(sessionStorage.getItem('componentindex')) + 1 }),
              _react2['default'].createElement(_mapcomponent2['default'], { area: this.area1.bind(this), stepindex: this.state.componentindex, roofaddress: this.state.Roofaddress })
            )
          );
      }
    }
  }]);

  return Main;
})(_react.Component);

exports['default'] = Main;
module.exports = exports['default'];

},{"./areaestimate":6,"./components/ContextProvider":8,"./cstepper":17,"./loginEstimation":27,"./mapcomponent":28,"./materialComponent":29,"./material_questions":30,"./panelTypes":31,"./roof_questions":33,"react":undefined}],19:[function(require,module,exports){
'use strict';

var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; desc = parent = undefined; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _reactDom = require('react-dom');

var _reactDom2 = _interopRequireDefault(_reactDom);

var _reactRouterDom = require('react-router-dom');

var _estimation = require('./estimation');

var _estimation2 = _interopRequireDefault(_estimation);

var _logedinLogin = require('./logedin/login');

var _logedinLogin2 = _interopRequireDefault(_logedinLogin);

var _logedinRegistration = require('./logedin/registration');

var _logedinRegistration2 = _interopRequireDefault(_logedinRegistration);

var _text = require('./text');

var _text2 = _interopRequireDefault(_text);

var _header = require('./header');

var _header2 = _interopRequireDefault(_header);

var _footer = require('./footer');

var _footer2 = _interopRequireDefault(_footer);

var _profile = require('./profile');

var _profile2 = _interopRequireDefault(_profile);

var _contactus = require('./contactus');

var _contactus2 = _interopRequireDefault(_contactus);

var _aboutus = require('./aboutus');

var _aboutus2 = _interopRequireDefault(_aboutus);

var _faq = require('./faq');

var _faq2 = _interopRequireDefault(_faq);

var _logedinContractorsignup = require('./logedin/contractorsignup');

var _logedinContractorsignup2 = _interopRequireDefault(_logedinContractorsignup);

var _admin_userlist = require('./admin_userlist');

var _admin_userlist2 = _interopRequireDefault(_admin_userlist);

var _admin_contractorlist = require('./admin_contractorlist');

var _admin_contractorlist2 = _interopRequireDefault(_admin_contractorlist);

var _admin_home = require('./admin_home');

var _admin_home2 = _interopRequireDefault(_admin_home);

var _forgotpassword = require('./forgotpassword');

var _forgotpassword2 = _interopRequireDefault(_forgotpassword);

var data = undefined,
    userdata = undefined,
    logintest = undefined,
    admintoken = undefined,
    adminLogin = undefined;

var Routing = (function (_Component) {
  _inherits(Routing, _Component);

  function Routing(props) {
    _classCallCheck(this, Routing);

    _get(Object.getPrototypeOf(Routing.prototype), 'constructor', this).call(this, props);
    if (localStorage.getItem("userdata") === null || localStorage.getItem("userdata") === undefined || localStorage.getItem("userdata") === "undefined") {
      admintoken = "";
      adminLogin = false;
      userdata = {
        "type": "",
        "organization_number": "",
        "address": "",
        "website": "",
        "estdet": [],
        "businessname": "",
        "updateon": "",
        "cratedon": "",
        "email": "", "phone": "", "name": "", "token": ""
      };
      logintest = false;
    } else {
      userdata = JSON.parse(localStorage.getItem("userdata"));
      logintest = true;
    }
    this.state = {
      Login: logintest,
      userdet: '',
      token: userdata.token,
      admintoken: admintoken,
      adminLogin: adminLogin
    };
  }

  _createClass(Routing, [{
    key: 'loginmodefun',
    value: function loginmodefun(val) {
      this.setState({
        Login: val
      });
    }
  }, {
    key: 'render',
    value: function render() {
      var _this = this;

      return _react2['default'].createElement(
        _react2['default'].Fragment,
        null,
        _react2['default'].createElement(
          _reactRouterDom.BrowserRouter,
          null,
          _react2['default'].createElement(
            'div',
            { className: 'align-top' },
            _react2['default'].createElement(
              _reactRouterDom.Switch,
              null,
              _react2['default'].createElement(_reactRouterDom.Route, { exact: true, path: '/', render: function (props) {
                  return _react2['default'].createElement(
                    _react2['default'].Fragment,
                    null,
                    _react2['default'].createElement(_header2['default'], { login: _this.state.Login, headindex: 1 }),
                    _react2['default'].createElement(_estimation2['default'], { loginmode: _this.state.Login, loginmodefun: _this.loginmodefun.bind(_this) }),
                    _react2['default'].createElement(_footer2['default'], null)
                  );
                } }),
              _react2['default'].createElement(_reactRouterDom.Route, { exact: true, path: '/Login', render: function (props) {
                  return _react2['default'].createElement(
                    _react2['default'].Fragment,
                    null,
                    _react2['default'].createElement(_header2['default'], { login: _this.state.Login, headindex: 2 }),
                    _react2['default'].createElement(_logedinLogin2['default'], { token: _this.state.token, data: data }),
                    _react2['default'].createElement(_footer2['default'], null)
                  );
                } }),
              _react2['default'].createElement(_reactRouterDom.Route, { exact: true, path: '/Register',
                render: function (props) {
                  return _react2['default'].createElement(
                    _react2['default'].Fragment,
                    null,
                    _react2['default'].createElement(_header2['default'], { login: _this.state.Login, headindex: 3 }),
                    _react2['default'].createElement(_logedinRegistration2['default'], null),
                    _react2['default'].createElement(_footer2['default'], null)
                  );
                } }),
              _react2['default'].createElement(_reactRouterDom.Route, { exact: true, path: '/Profile', render: function (props) {
                  return _react2['default'].createElement(
                    _react2['default'].Fragment,
                    null,
                    _react2['default'].createElement(_header2['default'], { login: _this.state.Login, headindex: 4 }),
                    _react2['default'].createElement(_profile2['default'], null),
                    _react2['default'].createElement(_footer2['default'], null)
                  );
                }
              }),
              _react2['default'].createElement(_reactRouterDom.Route, { exact: true, path: '/Faq', render: function (props) {
                  return _react2['default'].createElement(
                    'div',
                    null,
                    _react2['default'].createElement(_header2['default'], { login: _this.state.Login, headindex: 5 }),
                    _react2['default'].createElement(_faq2['default'], null),
                    _react2['default'].createElement(_footer2['default'], null)
                  );
                } }),
              _react2['default'].createElement(_reactRouterDom.Route, { exact: true, path: '/Aboutus', render: function (props) {
                  return _react2['default'].createElement(
                    _react2['default'].Fragment,
                    null,
                    _react2['default'].createElement(_header2['default'], { login: _this.state.Login, headindex: 6 }),
                    _react2['default'].createElement(_aboutus2['default'], null),
                    _react2['default'].createElement(_footer2['default'], null)
                  );
                }
              }),
              _react2['default'].createElement(_reactRouterDom.Route, { exact: true, path: '/Contact', render: function (props) {
                  return _react2['default'].createElement(
                    _react2['default'].Fragment,
                    null,
                    _react2['default'].createElement(_header2['default'], { login: _this.state.Login, headindex: 7 }),
                    _react2['default'].createElement(_contactus2['default'], null),
                    _react2['default'].createElement(_footer2['default'], null)
                  );
                } }),
              _react2['default'].createElement(_reactRouterDom.Route, { exact: true, path: '/Forgotpassword', render: function (props) {
                  return _react2['default'].createElement(
                    _react2['default'].Fragment,
                    null,
                    _react2['default'].createElement(_header2['default'], { login: _this.state.Login, headindex: 2 }),
                    _react2['default'].createElement(_forgotpassword2['default'], null),
                    _react2['default'].createElement(_footer2['default'], null)
                  );
                } }),
              _react2['default'].createElement(_reactRouterDom.Route, { exact: true, path: '/Contractor', render: function (props) {
                  return _react2['default'].createElement(
                    _react2['default'].Fragment,
                    null,
                    _react2['default'].createElement(_header2['default'], { login: _this.state.Login, headindex: 8 }),
                    _react2['default'].createElement(_logedinContractorsignup2['default'], null),
                    _react2['default'].createElement(_footer2['default'], null)
                  );
                } }),
              _react2['default'].createElement(_reactRouterDom.Route, { exact: true, path: '/text', render: function (props) {
                  return _react2['default'].createElement(
                    _react2['default'].Fragment,
                    null,
                    _react2['default'].createElement(_header2['default'], { login: _this.state.Login }),
                    _react2['default'].createElement(_text2['default'], { token: _this.state.token, data: data }),
                    _react2['default'].createElement(_footer2['default'], null)
                  );
                } }),
              _react2['default'].createElement(_reactRouterDom.Route, { exact: true, path: '/userslist', render: function (props) {
                  return _react2['default'].createElement(_admin_userlist2['default'], { token: _this.state.token, data: data });
                } }),
              _react2['default'].createElement(_reactRouterDom.Route, { exact: true, path: '/contractorlist', render: function (props) {
                  return _react2['default'].createElement(_admin_contractorlist2['default'], { token: _this.state.token, data: data });
                } }),
              _react2['default'].createElement(_reactRouterDom.Route, { exact: true, path: '/admin', render: function (props) {
                  return _react2['default'].createElement(_admin_home2['default'], { token: _this.state.token, data: data });
                } })
            )
          )
        )
      );
    }
  }]);

  return Routing;
})(_react.Component);

_reactDom2['default'].render(_react2['default'].createElement(Routing, null), document.getElementById('app'));

},{"./aboutus":1,"./admin_contractorlist":2,"./admin_home":3,"./admin_userlist":5,"./contactus":16,"./estimation":18,"./faq":20,"./footer":21,"./forgotpassword":22,"./header":23,"./logedin/contractorsignup":24,"./logedin/login":25,"./logedin/registration":26,"./profile":32,"./text":34,"react":undefined,"react-dom":undefined,"react-router-dom":104}],20:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; desc = parent = undefined; continue _function; } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var Faq = (function (_Component) {
    _inherits(Faq, _Component);

    function Faq(props) {
        _classCallCheck(this, Faq);

        _get(Object.getPrototypeOf(Faq.prototype), "constructor", this).call(this, props);
    }

    _createClass(Faq, [{
        key: "render",
        value: function render() {
            return _react2["default"].createElement(
                "div",
                null,
                _react2["default"].createElement(
                    "div",
                    { id: "aboutus-image" },
                    _react2["default"].createElement(
                        "div",
                        { className: "container about_txt" },
                        _react2["default"].createElement(
                            "h2",
                            null,
                            "FAQ'S"
                        ),
                        _react2["default"].createElement(
                            "p",
                            null,
                            "Lorem Ipsum is simply dummy text of the printing and typesetting industry. "
                        )
                    )
                ),
                _react2["default"].createElement(
                    "div",
                    { className: "container faqs_below" },
                    _react2["default"].createElement(
                        "h3",
                        null,
                        " Find answers to common questions"
                    ),
                    _react2["default"].createElement(
                        "div",
                        { className: "row" },
                        _react2["default"].createElement(
                            "div",
                            { className: "panel-group", id: "accordion", role: "tablist", "aria-multiselectable": "true" },
                            _react2["default"].createElement(
                                "div",
                                { className: "panel panel-default" },
                                _react2["default"].createElement(
                                    "div",
                                    { className: "panel-heading", role: "tab", id: "headingOne" },
                                    _react2["default"].createElement(
                                        "h4",
                                        { className: "panel-title" },
                                        _react2["default"].createElement(
                                            "a",
                                            { "data-toggle": "collapse", "data-parent": "#accordion", href: "#collapseOne", "aria-expanded": "true", "aria-controls": "collapseOne" },
                                            "Collapsible Group Item #1"
                                        )
                                    )
                                ),
                                _react2["default"].createElement(
                                    "div",
                                    { id: "collapseOne", className: "panel-collapse collapse in", role: "tabpanel", "aria-labelledby": "headingOne" },
                                    _react2["default"].createElement(
                                        "div",
                                        { className: "panel-body" },
                                        "Anim pariatur cliche reprehenderit, enim eiusmod high life accusamus terry richardson ad squid.le VHS."
                                    )
                                )
                            ),
                            _react2["default"].createElement(
                                "div",
                                { className: "panel panel-default" },
                                _react2["default"].createElement(
                                    "div",
                                    { className: "panel-heading", role: "tab", id: "headingTwo" },
                                    _react2["default"].createElement(
                                        "h4",
                                        { className: "panel-title" },
                                        _react2["default"].createElement(
                                            "a",
                                            { className: "collapsed", "data-toggle": "collapse", "data-parent": "#accordion", href: "#collapseTwo", "aria-expanded": "false", "aria-controls": "collapseTwo" },
                                            "Collapsible Group Item #2"
                                        )
                                    )
                                ),
                                _react2["default"].createElement(
                                    "div",
                                    { id: "collapseTwo", className: "panel-collapse collapse", role: "tabpanel", "aria-labelledby": "headingTwo" },
                                    _react2["default"].createElement(
                                        "div",
                                        { className: "panel-body" },
                                        "Anim pariatur cliche reprehenderit, enim eiusmod high life accusamus terry richardson ad squid."
                                    )
                                )
                            ),
                            _react2["default"].createElement(
                                "div",
                                { className: "panel panel-default" },
                                _react2["default"].createElement(
                                    "div",
                                    { className: "panel-heading", role: "tab", id: "headingThree" },
                                    _react2["default"].createElement(
                                        "h4",
                                        { className: "panel-title" },
                                        _react2["default"].createElement(
                                            "a",
                                            { className: "collapsed", "data-toggle": "collapse", "data-parent": "#accordion", href: "#collapseThree", "aria-expanded": "false", "aria-controls": "collapseThree" },
                                            "Collapsible Group Item #3"
                                        )
                                    )
                                ),
                                _react2["default"].createElement(
                                    "div",
                                    { id: "collapseThree", className: "panel-collapse collapse", role: "tabpanel", "aria-labelledby": "headingThree" },
                                    _react2["default"].createElement(
                                        "div",
                                        { className: "panel-body" },
                                        "Anim pariatur cliche reprehenderit, enim eiusmod high life accusamus terry richardson ad squid. "
                                    )
                                )
                            )
                        )
                    )
                )
            );
        }
    }]);

    return Faq;
})(_react.Component);

exports["default"] = Faq;
module.exports = exports["default"];

},{"react":undefined}],21:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, '__esModule', {
  value: true
});

var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; desc = parent = undefined; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _reactModal = require('react-modal');

var _reactModal2 = _interopRequireDefault(_reactModal);

var customStyles = {
  content: {
    top: '50%',
    left: '50%',
    right: 'auto',
    bottom: 'auto',
    marginRight: '-50%',
    transform: 'translate(-50%, -50%)',
    padding: '10px 15px 23px',
    fontSize: '16px',
    width: '50%',
    borderRadius: '85px'
  }
};

var Footer = (function (_Component) {
  _inherits(Footer, _Component);

  function Footer(props) {
    _classCallCheck(this, Footer);

    _get(Object.getPrototypeOf(Footer.prototype), 'constructor', this).call(this, props);
    this.state = {
      popup: false,
      modalIsOpen: false,
      date: new Date()
    };

    this.modalpopup = this.modalpopup.bind(this);
    _reactModal2['default'].setAppElement('body');
    this.openModal = this.openModal.bind(this);
    this.afterOpenModal = this.afterOpenModal.bind(this);
    this.closeModal = this.closeModal.bind(this);
  }

  _createClass(Footer, [{
    key: 'openModal',
    value: function openModal() {}
  }, {
    key: 'afterOpenModal',
    value: function afterOpenModal() {}
  }, {
    key: 'closeModal',
    value: function closeModal() {
      this.setState({ modalIsOpen: false });
    }
  }, {
    key: 'modalpopup',
    value: function modalpopup() {
      this.setState({ popup: true, modalIsOpen: true });
    }
  }, {
    key: 'render',
    value: function render() {
      return _react2['default'].createElement(
        'div',
        null,
        this.state.popup ? _react2['default'].createElement(
          'div',
          null,
          _react2['default'].createElement(
            _reactModal2['default'],
            {
              isOpen: this.state.modalIsOpen,
              onAfterOpen: this.afterOpenModal,
              onRequestClose: this.closeModal,
              style: customStyles,
              contentLabel: 'Example Modal' },
            _react2['default'].createElement(
              'div',
              null,
              _react2['default'].createElement(
                'button',
                { style: { float: 'right', color: '#8ee2ae', backgroundColor: '#fff', border: 'none', margin: '0 75px', fontSize: '20px' }, onClick: this.closeModal },
                'X'
              )
            ),
            _react2['default'].createElement(
              'div',
              { className: 'heading' },
              'Kontakta oss'
            ),
            _react2['default'].createElement(
              'div',
              { className: 'footer-popup row text-center troble_sec' },
              _react2['default'].createElement(
                'a',
                { id: 'left-help-button', href: 'tel:+0763949564' },
                _react2['default'].createElement('i', { className: 'fa fa-phone', 'aria-hidden': 'true' }),
                '   Ring Digitak -  076-3949564'
              ),
              _react2['default'].createElement(
                'a',
                { id: 'left-help-button', href: 'mailto:info@digitak.se?' },
                '@ Maila oss - info@digitak.se '
              )
            ),
            _react2['default'].createElement(
              'div',
              { className: 'estimate ' },
              _react2['default'].createElement(
                'button',
                { className: 'submit', onClick: this.closeModal },
                'stäng'
              )
            )
          )
        ) : null,
        _react2['default'].createElement(
          'section',
          null,
          _react2['default'].createElement(
            'div',
            { id: 'helpus' },
            _react2['default'].createElement(
              'div',
              { className: 'row text-center troble_sec' },
              _react2['default'].createElement(
                'button',
                { id: 'left-help-button', onClick: this.modalpopup },
                'Kontakta oss '
              )
            ),
            _react2['default'].createElement(
              'div',
              { className: 'text-center troble_sec f17' },
              'Har du frågor eller stött på problem? Tryck på kontakt så ',
              _react2['default'].createElement('br', null),
              ' återkommer vi så fort som möjligt.'
            )
          )
        ),
        _react2['default'].createElement(
          'div',
          { id: 'bottomfoo' },
          _react2['default'].createElement(
            'span',
            null,
            'Copyright © ',
            this.state.date.getFullYear(),
            ' Digisolar.All rights reserved'
          )
        )
      );
    }
  }]);

  return Footer;
})(_react.Component);

exports['default'] = Footer;
module.exports = exports['default'];

},{"react":undefined,"react-modal":88}],22:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; desc = parent = undefined; continue _function; } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var formleft = {
    paddingLeft: 0,
    Forgot: {
        width: "50%"

    }, forgottop: {
        textAlign: "-webkit-center"
    }, fobutton: {
        borderRadius: "5px !important",
        height: "40px !important",
        margin: "9px 0px",
        background: "#000",
        fontSize: "16px",
        border: "none",
        marginRight: "10px"
    }
};

var Forgot = (function (_Component) {
    _inherits(Forgot, _Component);

    function Forgot(props) {
        _classCallCheck(this, Forgot);

        _get(Object.getPrototypeOf(Forgot.prototype), "constructor", this).call(this, props);
        this.handleChange = this.handleChange.bind(this);
    }

    _createClass(Forgot, [{
        key: "handleChange",
        value: function handleChange(event) {
            this.props.validateField(event.target.name, event.target.value);
        }
    }, {
        key: "loginvalidationverify",
        value: function loginvalidationverify() {
            if (this.state.emailValid && this.state.passwordValid) {}
        }
    }, {
        key: "render",
        value: function render() {
            return _react2["default"].createElement(
                "form",
                { onSubmit: this.props.forgotsubmit.bind(this), id: "login" },
                _react2["default"].createElement(
                    "h3",
                    null,
                    "Forgot Password"
                ),
                _react2["default"].createElement("input", { type: "email", name: "email", placeholder: "Email*", className: "form-control", onBlur: this.handleChange.bind(this) }),
                _react2["default"].createElement(
                    "div",
                    null,
                    _react2["default"].createElement("input", { type: "submit", className: "btn btn-info", style: formleft.fobutton, value: "Forgot Password" })
                )
            );
        }
    }]);

    return Forgot;
})(_react.Component);

var Forgotpassword = (function (_Component2) {
    _inherits(Forgotpassword, _Component2);

    function Forgotpassword(props) {
        _classCallCheck(this, Forgotpassword);

        _get(Object.getPrototypeOf(Forgotpassword.prototype), "constructor", this).call(this, props);
        this.state = {
            email: '',
            password: '',
            name: '',
            phone: '',
            emailValid: false,
            passwordValid: false,
            formErrors: { email: '', password: '', name: '', phone: '' },
            phonevalid: false,
            namevalid: false,
            loginValid: false,
            signupValid: false
        };
    }

    _createClass(Forgotpassword, [{
        key: "forgotsubmit",
        value: function forgotsubmit(event) {
            event.preventDefault();
            var main = this;
            var payload = {
                email: this.state.email,
                type: 'USER'
            };

            fetch('/forgotpass', {
                method: "post", headers: {
                    'Content-Type': 'application/x-www-form-urlencoded',
                    "Access-Control-Request-Headers": "*",
                    "Access-Control-Request-Method": "*"
                }, body: 'json=' + JSON.stringify(payload)
            }).then(function (response) {
                return response;
            }).then(function (response) {
                return response.json();
            }).then(function (data) {
                if (data.status == 400) {
                    alert("Please Provide Registered Email Id");
                } else if (data.status == 200) {
                    var payload_data = { email: data.data.email, password: data.data.Password, name: data.data.name };
                    fetch('https://digitak.se/send_mail.php', {
                        method: "post", headers: {
                            'Content-Type': 'application/x-www-form-urlencoded',
                            "Access-Control-Request-Headers": "*",
                            "Access-Control-Request-Method": "*"
                        }, body: 'json=' + JSON.stringify(payload_data)
                    }).then(function (response) {
                        return response;
                    }).then(function (response) {
                        return response.json();
                    }).then(function (data) {
                        if (data.status == 400) {
                            alert(data.message);
                        } else if (data.status == 200) {
                            alert(data.message);
                        }
                    });
                }
            });
        }
    }, {
        key: "signupsubmit",
        value: function signupsubmit(event) {
            event.preventDefault();
            alert("ok");
            this.compleatevalidation();
            // alert('A name was submitted: ' + this.state.email+'password'+this.state.email);
        }
    }, {
        key: "validateField",
        value: function validateField(fieldName, value) {
            var fieldValidationErrors = this.state.formErrors;
            var passwordValid = this.state.passwordValid;
            var phonevalid = this.state.phonevalid;
            var namevalid = this.state.namevalid;
            var emailValid = this.state.emailValid;
            switch (fieldName) {
                case 'email':
                    //emailValid = value.match(/^([\w.%+-]+)@([\w-]+\.)+([\w]{2,})$/i);
                    emailValid = value.length >= 6;
                    fieldValidationErrors.email = emailValid ? '' : ' is invalid';
                    this.setState({ formErrors: fieldValidationErrors, emailValid: emailValid, email: value });
                default:
                    break;
            }
        }
    }, {
        key: "render",
        value: function render() {
            return _react2["default"].createElement(
                "div",
                { className: "container", style: formleft.forgottop },
                _react2["default"].createElement("br", null),
                _react2["default"].createElement(
                    "div",
                    { className: "row", id: "box", style: formleft.Forgot },
                    _react2["default"].createElement(Forgot, { forgotsubmit: this.forgotsubmit.bind(this), validateField: this.validateField.bind(this),
                        EmailErrors: this.state.formErrors.email,
                        PasswordErrors: this.state.formErrors.password

                    })
                )
            );
        }
    }]);

    return Forgotpassword;
})(_react.Component);

exports["default"] = Forgotpassword;
module.exports = exports["default"];
/* <div className="col-sm-2"></div>
<div className="col-sm-4" style={formleft}><img src="./img/signup_bg.jpg" className="img-responsive" /></div><div className="col-sm-4"> */ /* <Signup signupnsubmit={this.signupsubmit}
                                                                                                                                                  nameErrors={this.state.formErrors.name}
                                                                                                                                                  PhoneErrors={this.state.formErrors.phone}
                                                                                                                                                  EmailErrors={this.state.formErrors.email}
                                                                                                                                                  PasswordErrors={this.state.formErrors.password}
                                                                                                                                                    signupValid={this.state.signupValid}
                                                                                                                                                  validateField={this.validateField.bind(this)}
                                                                                                                                                  /> */ /* <div className="col-sm-2"></div>
                                                                                                                                                           </div>*/

},{"react":undefined}],23:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; desc = parent = undefined; continue _function; } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var Header = (function (_Component) {
  _inherits(Header, _Component);

  function Header(props) {
    _classCallCheck(this, Header);

    _get(Object.getPrototypeOf(Header.prototype), "constructor", this).call(this, props);
  }

  _createClass(Header, [{
    key: "logout",
    value: function logout() {
      localStorage.clear();
      location.href = "/";
    }
  }, {
    key: "render",
    value: function render() {
      return _react2["default"].createElement(
        "div",
        { className: "example2" },
        _react2["default"].createElement(
          "nav",
          { className: "navbar navbar-default custm-nav " },
          _react2["default"].createElement(
            "div",
            { className: "container" },
            _react2["default"].createElement(
              "div",
              { className: "navbar-header" },
              _react2["default"].createElement(
                "button",
                { type: "button", className: "navbar-toggle collapsed", "data-toggle": "collapse", "data-target": "#navbar2" },
                _react2["default"].createElement(
                  "span",
                  { className: "sr-only" },
                  "Toggle navigation"
                ),
                _react2["default"].createElement("span", { className: "icon-bar" }),
                _react2["default"].createElement("span", { className: "icon-bar" }),
                _react2["default"].createElement("span", { className: "icon-bar" })
              ),
              _react2["default"].createElement(
                "a",
                { className: "navbar-brand", href: "http://www.digisolar.se/" },
                _react2["default"].createElement("img", { src: "./img/white_logo.png", alt: "Dispute Bills" })
              )
            ),
            _react2["default"].createElement(
              "div",
              { id: "navbar2", className: "navbar-collapse collapse" },
              _react2["default"].createElement(Checklogin, { login: this.props.login, logout: this.logout.bind(this), headindex: this.props.headindex })
            )
          )
        )
      );
    }
  }]);

  return Header;
})(_react.Component);

var Checklogin = (function (_Component2) {
  _inherits(Checklogin, _Component2);

  function Checklogin(props) {
    _classCallCheck(this, Checklogin);

    _get(Object.getPrototypeOf(Checklogin.prototype), "constructor", this).call(this, props);
  }

  _createClass(Checklogin, [{
    key: "render",
    value: function render() {
      if (this.props.login == true) {
        return _react2["default"].createElement(
          "ul",
          { className: "nav navbar-nav navbar-right nav-ul" },
          _react2["default"].createElement(
            "li",
            null,
            " ",
            _react2["default"].createElement(
              "a",
              { href: "http://www.digisolar.se/", id: "header_menu" },
              "Tillbaka till startsidan"
            )
          )
        );
      } else {
        return _react2["default"].createElement(
          "ul",
          { className: "nav navbar-nav navbar-right nav-ul" },
          _react2["default"].createElement(
            "li",
            null,
            " ",
            _react2["default"].createElement(
              "a",
              { href: "http://www.digisolar.se//", id: "header_menu" },
              "Tillbaka till startsidan"
            )
          )
        );
      }
    }
  }]);

  return Checklogin;
})(_react.Component);

exports["default"] = Header;
module.exports = exports["default"];
/*}
<li className={this.props.headindex == 6 ? "active" : ""} > <a href="https://www.digitak.se/">Start</a></li>
<li className={this.props.headindex == 6 ? "active" : ""} > <a href="https://www.digitak.se/blogs/">Takbloggen</a></li>
<li><Link to='/Contractor'>För hantverkare</Link></li>
<li className={this.props.headindex == 6 ? "active" : ""} > <a href="https://digitak.se/about-us/">Om oss</a></li>
   <li className="dropdown">
 <a href="#" className="dropdown-toggle" data-toggle="dropdown" role="button" aria-expanded="false">Mitt konto <span className="caret"></span></a>
 <ul className="dropdown-menu" role="menu">
     <li><Link to='/Profile' >Mina takberäkningar</Link></li>
   <li><a onClick={this.props.logout}>Logga ut</a></li>
   </ul>
</li>
*/ /*}
   <li className={this.props.headindex == 6 ? "active" : ""} > <a href="https://www.digitak.se/">Start</a></li>
   <li className={this.props.headindex == 6 ? "active" : ""} > <a href="https://www.digitak.se/blogs/">Takbloggen</a></li>
   <li className={this.props.headindex == 8 ? "active" : ""} ><Link to='/Contractor'>För hantverkare</Link></li>
    <li className={this.props.headindex == 6 ? "active" : ""} > <a href="https://digitak.se/about-us/">Om oss</a></li>
   <li className={this.props.headindex == 5 ? "active" : ""} ><a href="https://www.digitak.se/vanliga-fragor/">Vanliga frågor</a></li>
    <li className={this.props.headindex == 2 ? "active" : ""} ><Link to='/login'>Logga in</Link></li>
   */

},{"react":undefined}],24:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, '__esModule', {
    value: true
});

var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; desc = parent = undefined; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _reactDom = require('react-dom');

var _reactDom2 = _interopRequireDefault(_reactDom);

var _reactRouterDom = require('react-router-dom');

//var mainurl=require('../config.js');

var formleft = {
    paddingLeft: 0
};

var Csignup = (function (_Component) {
    _inherits(Csignup, _Component);

    function Csignup(props) {
        _classCallCheck(this, Csignup);

        _get(Object.getPrototypeOf(Csignup.prototype), 'constructor', this).call(this, props);

        //  console.log(this.props)
    }

    _createClass(Csignup, [{
        key: 'handleChange',
        value: function handleChange(event) {

            this.props.validateField(event.target.name, event.target.value);
        }
    }, {
        key: 'render',
        value: function render() {

            return _react2['default'].createElement(
                'form',
                { onSubmit: this.props.signupnsubmit, id: 'Csignup' },
                _react2['default'].createElement(
                    'h3',
                    null,
                    'Register'
                ),
                _react2['default'].createElement(
                    'p',
                    null,
                    'Get Started already now'
                ),
                _react2['default'].createElement(
                    'div',
                    { className: 'alert alert-danger', hidden: this.props.responseerror == "" },
                    this.props.responseerror
                ),
                _react2['default'].createElement(
                    'p',
                    null,
                    'Account Information'
                ),
                _react2['default'].createElement('input', { type: 'text', name: 'name', className: 'form-control', placeholder: 'Name*', onBlur: this.handleChange.bind(this), required: true }),
                _react2['default'].createElement(
                    'span',
                    { id: 'error' },
                    this.props.nameErrors
                ),
                _react2['default'].createElement('input', { type: 'text', name: 'phone', className: 'form-control', placeholder: 'Phone*', onBlur: this.handleChange.bind(this), required: true }),
                _react2['default'].createElement(
                    'span',
                    { id: 'error' },
                    this.props.PhoneErrors
                ),
                _react2['default'].createElement('input', { type: 'email', name: 'email', className: 'form-control', placeholder: 'Email*', onBlur: this.handleChange.bind(this), required: true }),
                _react2['default'].createElement(
                    'span',
                    { id: 'error' },
                    this.props.EmailErrors
                ),
                _react2['default'].createElement('input', { type: 'password', name: 'password', className: 'form-control', placeholder: 'Password*', onBlur: this.handleChange.bind(this), required: true }),
                _react2['default'].createElement(
                    'span',
                    { id: 'error' },
                    this.props.PasswordErrors
                ),
                _react2['default'].createElement(
                    'p',
                    { className: 'accnt_info' },
                    'Contractor Information'
                ),
                _react2['default'].createElement('input', { type: 'text', name: 'businessname', className: 'form-control', placeholder: 'Business Name*', onBlur: this.handleChange.bind(this), required: true }),
                _react2['default'].createElement('input', { type: 'text', name: 'website', className: 'form-control', placeholder: 'Website(optional)', onBlur: this.handleChange.bind(this) }),
                _react2['default'].createElement('input', { type: 'text', name: 'address', className: 'form-control', placeholder: 'Address*', onBlur: this.handleChange.bind(this), required: true }),
                _react2['default'].createElement('input', { type: 'text', name: 'organizer', className: 'form-control', placeholder: 'Organizer*', onBlur: this.handleChange.bind(this), required: true }),
                _react2['default'].createElement(
                    'div',
                    null,
                    ' ',
                    _react2['default'].createElement('input', { type: 'checkbox', required: true }),
                    '   I Agree to ',
                    _react2['default'].createElement(
                        'a',
                        { href: '' },
                        'Terms & Conditions'
                    )
                ),
                _react2['default'].createElement(
                    'div',
                    null,
                    '  ',
                    _react2['default'].createElement('input', { type: 'submit', id: 'buttonnew', className: 'btn btn-info', value: 'Signup', disabled: this.props.nameErrors == "" && this.props.EmailErrors == "" && this.props.PhoneErrors == "" && this.props.PasswordErrors == "" ? false : true })
                )
            );
        }
    }]);

    return Csignup;
})(_react.Component);

var Contractorsignup = (function (_Component2) {
    _inherits(Contractorsignup, _Component2);

    function Contractorsignup(props) {
        _classCallCheck(this, Contractorsignup);

        _get(Object.getPrototypeOf(Contractorsignup.prototype), 'constructor', this).call(this, props);

        this.state = {
            email: '',
            password: '',
            name: '',
            phone: '',
            emailValid: false,
            passwordValid: false,
            formErrors: { email: '', password: '', name: '', phone: '' },
            phonevalid: false,
            namevalid: false,
            loginValid: false,
            signupValid: false,
            responseerror: "",
            website: "",
            businessname: "",
            address: "",
            organizer: ""

        };
    }

    _createClass(Contractorsignup, [{
        key: 'loginsubmit',
        value: function loginsubmit(event) {
            // this.compleatevalidation();
            // alert('A name was submitted: ' + this.state.email+'password'+this.state.email);
            event.preventDefault();
        }
    }, {
        key: 'signupsubmit',
        value: function signupsubmit(event) {
            var _this = this;

            event.preventDefault();

            if (this.state.formErrors.email == "" && this.state.formErrors.name == "" && this.state.formErrors.phone == "" && this.state.formErrors.password == "") {
                var payload;

                (function () {

                    var main = _this;
                    payload = {
                        name: _this.state.name,
                        email: _this.state.email,
                        password: _this.state.password,
                        phone: _this.state.phone,
                        businessname: _this.state.businessname,

                        website: _this.state.website,
                        address: _this.state.address,
                        organization_number: _this.state.organizer,
                        type: 'CONTRACTOR'

                    };

                    fetch('users/registeruser', {
                        method: "post", headers: {
                            'Content-Type': 'application/x-www-form-urlencoded',
                            "Access-Control-Request-Headers": "*",
                            "Access-Control-Request-Method": "*"
                        }, body: 'json=' + JSON.stringify(payload)
                    }).then(function (response) {
                        return response;
                    }).then(function (response) {
                        return response.json();
                    }).then(function (data) {
                        if (data.status == 400) {
                            main.setState({
                                userdata: data.message,
                                responseerror: data.message
                            });
                        } else if (data.status == 200) {

                            alert("Contractor Registration Successfull");
                            location.href = "/Contractor";

                            /*
                                                    main.setState({
                                                        userdata: data.data,
                                                        responseerror: ""
                                                    })
                                                    localStorage.setItem('userdata', JSON.stringify(data.data));
                                                    localStorage.setItem('token', data.token);
                                                    location.href = "/";
                            */
                        }
                    });
                })();
            } else {
                    alert("Please Fill All Mandatory Fields ");
                }

            //  this.compleatevalidation();
            // alert('A name was submitted: ' + this.state.email+'password'+this.state.email);
        }
    }, {
        key: 'validateField',
        value: function validateField(fieldName, value) {
            console.log(fieldName + "-" + value);
            console.log(this.state.formErrors);

            var fieldValidationErrors = this.state.formErrors;
            var passwordValid = this.state.passwordValid;
            var phonevalid = this.state.phonevalid;
            var namevalid = this.state.namevalid;
            var emailValid = this.state.emailValid;

            switch (fieldName) {
                case 'email':

                    //emailValid = value.match(/^([\w.%+-]+)@([\w-]+\.)+([\w]{2,})$/i);
                    emailValid = value.length >= 6;

                    fieldValidationErrors.email = emailValid ? '' : 'Invalid Email';
                    this.setState({ formErrors: fieldValidationErrors, emailValid: emailValid, email: value });
                    console.log(emailValid);

                    break;
                case 'password':
                    passwordValid = value.length >= 6;
                    fieldValidationErrors.password = passwordValid ? '' : 'Password contain minimum 6 charecters';
                    this.setState({ formErrors: fieldValidationErrors, passwordValid: passwordValid, password: value });
                    console.log(passwordValid);
                    break;
                case 'phone':
                    phonevalid = value.length >= 10;
                    fieldValidationErrors.phone = phonevalid ? '' : ' Phone number contain minimum 10 charecters';
                    this.setState({ formErrors: fieldValidationErrors, phonevalid: phonevalid, phone: value });
                    console.log(phonevalid);
                    break;
                case 'name':
                    namevalid = value.length >= 3;
                    fieldValidationErrors.name = namevalid ? '' : ' name contain minimum 3 charecters';
                    this.setState({ formErrors: fieldValidationErrors, namevalid: namevalid, name: value });
                    console.log(namevalid);
                    break;
                case 'businessname':
                    this.setState({ businessname: value });
                    console.log(value);
                    break;
                case 'website':
                    this.setState({ website: value });
                    console.log(value);
                    break;
                case 'address':
                    this.setState({ address: value });
                    console.log(value);
                    break;
                case 'organizer':
                    this.setState({ organizer: value });
                    console.log(value);
                    break;
                default:
                    break;
            }
        }
    }, {
        key: 'render',
        value: function render() {
            return _react2['default'].createElement(
                'div',
                { className: 'container login-top' },
                _react2['default'].createElement('br', null),
                _react2['default'].createElement(
                    'div',
                    { className: 'row csignup', id: 'box' },
                    _react2['default'].createElement(
                        'div',
                        { className: 'col-sm-12  test1', style: formleft },
                        _react2['default'].createElement('img', { src: './img/contractor_signup-banner.jpg', className: 'img-responsive', alt: 'image' }),
                        _react2['default'].createElement(
                            'div',
                            { className: 'form_top1' },
                            _react2['default'].createElement(Csignup, { signupnsubmit: this.signupsubmit.bind(this),
                                nameErrors: this.state.formErrors.name,
                                PhoneErrors: this.state.formErrors.phone,
                                EmailErrors: this.state.formErrors.email,
                                PasswordErrors: this.state.formErrors.password,

                                signupValid: this.state.signupValid,
                                validateField: this.validateField.bind(this),
                                responseerror: this.state.responseerror

                            })
                        )
                    )
                )
            );
        }
    }]);

    return Contractorsignup;
})(_react.Component);

exports['default'] = Contractorsignup;
module.exports = exports['default'];
/*<Login loginsubmit={this.loginsubmit}  validateField={this.validateField.bind(this)} />*/

},{"react":undefined,"react-dom":undefined,"react-router-dom":104}],25:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, '__esModule', {
    value: true
});

var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; desc = parent = undefined; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _reactDom = require('react-dom');

var _reactDom2 = _interopRequireDefault(_reactDom);

var _reactRouterDom = require('react-router-dom');

//var mainurl=require('../config.js');

var formleft = {
    paddingLeft: 0
};

var Login = (function (_Component) {
    _inherits(Login, _Component);

    function Login(props) {
        _classCallCheck(this, Login);

        _get(Object.getPrototypeOf(Login.prototype), 'constructor', this).call(this, props);
        // this.state = { email: '', password: '', emailValid: false, passwordValid: false, formErrors: { email: '', password: '' } };

        this.handleChange = this.handleChange.bind(this);
    }

    _createClass(Login, [{
        key: 'handleChange',
        value: function handleChange(event) {

            this.props.validateField(event.target.name, event.target.value);
        }
    }, {
        key: 'loginvalidationverify',
        value: function loginvalidationverify() {
            if (this.state.emailValid && this.state.passwordValid) {}
        }
    }, {
        key: 'render',
        value: function render() {
            return _react2['default'].createElement(
                'form',
                { onSubmit: this.props.loginsubmit.bind(this), id: 'login', className: 'form-horizontal' },
                _react2['default'].createElement(
                    'div',
                    { className: 'alert alert-danger', hidden: this.props.responseerror == "" },
                    this.props.responseerror
                ),
                _react2['default'].createElement(
                    'div',
                    { className: 'form-group' },
                    _react2['default'].createElement('input', { type: 'email', name: 'email', placeholder: 'Email*', className: 'form-control input-bg', onBlur: this.handleChange.bind(this), required: true }),
                    _react2['default'].createElement(
                        'span',
                        { id: 'error' },
                        this.props.EmailErrors
                    )
                ),
                _react2['default'].createElement(
                    'div',
                    { className: 'form-group' },
                    _react2['default'].createElement('input', { type: 'password', placeholder: 'Password*', className: 'form-control input-bg1', name: 'password', onBlur: this.handleChange.bind(this), required: true }),
                    _react2['default'].createElement(
                        'span',
                        { id: 'error' },
                        this.props.PasswordErrors
                    )
                ),
                _react2['default'].createElement(
                    'div',
                    { className: 'form-group' },
                    _react2['default'].createElement(
                        'p',
                        { className: 'text-right' },
                        '  ',
                        _react2['default'].createElement(
                            'a',
                            { href: '/Forgotpassword' },
                            _react2['default'].createElement(
                                'u',
                                null,
                                'Forgot Password ?'
                            ),
                            ' '
                        )
                    )
                ),
                _react2['default'].createElement(
                    'div',
                    { className: 'form-group' },
                    ' ',
                    _react2['default'].createElement(
                        'div',
                        null,
                        ' ',
                        _react2['default'].createElement('input', { type: 'submit', className: 'btn btn-info', id: 'buttonnew', value: 'Login' }),
                        _react2['default'].createElement(
                            _reactRouterDom.Link,
                            { to: '/Register' },
                            _react2['default'].createElement(
                                'button',
                                { className: 'signup-btn' },
                                'signup here ?'
                            )
                        )
                    )
                )
            );
        }
    }]);

    return Login;
})(_react.Component);

var LoginSignup = (function (_Component2) {
    _inherits(LoginSignup, _Component2);

    function LoginSignup(props) {
        _classCallCheck(this, LoginSignup);

        _get(Object.getPrototypeOf(LoginSignup.prototype), 'constructor', this).call(this, props);

        this.state = {
            email: '',
            password: '',
            name: '',
            phone: '',
            emailValid: false,
            passwordValid: false,
            formErrors: { email: '', password: '', name: '', phone: '' },
            phonevalid: false,
            namevalid: false,
            loginValid: false,
            signupValid: false,
            responseerror: ""
        };
    }

    _createClass(LoginSignup, [{
        key: 'loginsubmit',
        value: function loginsubmit(event) {
            event.preventDefault();

            var main = this;

            var payload = {
                email: this.state.email,
                password: this.state.password,
                type: 'USER'
            };

            fetch('users/userLogin', {
                method: "post", headers: {
                    'Content-Type': 'application/x-www-form-urlencoded',
                    "Access-Control-Request-Headers": "*",
                    "Access-Control-Request-Method": "*"
                }, body: 'json=' + JSON.stringify(payload)
            }).then(function (response) {
                return response;
            }).then(function (response) {
                return response.json();
            }).then(function (data) {

                if (data.status == 400) {
                    main.setState({
                        userdata: data.message,
                        responseerror: data.message
                    });
                } else if (data.status == 200) {
                    var userdata;
                    if (data.data.type == "USER") {
                        userdata = { "type": data.data.type,
                            "estdet": data.data.estdet,
                            "updateon": data.data.updateon,
                            "cratedon": data.data.cratedon,
                            "email": data.data.email, "phone": data.data.phone, "name": data.data.name, "token": data.token };
                    } else if (data.data.type == "CONTRACTOR") {
                        userdata = { "type": data.data.type,
                            "organization_number": data.data, organization_number: organization_number,
                            "address": data.data.address,
                            "website": data.data.website,
                            "businessname": data.data.businessname,
                            "updateon": data.data.updateon,
                            "cratedon": data.data.cratedon,
                            "email": data.data.email, "phone": data.data.phone, "name": data.data.name, "token": data.toke };
                    }

                    localStorage.setItem('userdata', JSON.stringify(userdata));
                    localStorage.setItem('token', data.token);
                    main.setState({
                        userdata: data.data,
                        responseerror: ""
                    });

                    location.href = "/";
                }
            });
        }
    }, {
        key: 'signupsubmit',
        value: function signupsubmit(event) {
            event.preventDefault();
            alert("ok");
            this.compleatevalidation();
            // alert('A name was submitted: ' + this.state.email+'password'+this.state.email);
        }
    }, {
        key: 'validateField',
        value: function validateField(fieldName, value) {

            var fieldValidationErrors = this.state.formErrors;
            var passwordValid = this.state.passwordValid;
            var phonevalid = this.state.phonevalid;
            var namevalid = this.state.namevalid;
            var emailValid = this.state.emailValid;

            switch (fieldName) {
                case 'email':

                    //emailValid = value.match(/^([\w.%+-]+)@([\w-]+\.)+([\w]{2,})$/i);
                    emailValid = value.length >= 6;

                    fieldValidationErrors.email = emailValid ? '' : 'Invalid email ';
                    this.setState({ formErrors: fieldValidationErrors, emailValid: emailValid, email: value });

                    break;
                case 'password':
                    passwordValid = value.length >= 6;
                    fieldValidationErrors.password = passwordValid ? '' : 'Password have minimum 6 charecters ';
                    this.setState({ formErrors: fieldValidationErrors, passwordValid: passwordValid, password: value });
                    break;

                default:
                    break;
            }
        }
    }, {
        key: 'render',
        value: function render() {
            return _react2['default'].createElement(
                'div',
                null,
                _react2['default'].createElement(
                    'div',
                    { className: 'container-fluid bg-white' },
                    _react2['default'].createElement(
                        'div',
                        { className: 'shdow_wt' },
                        _react2['default'].createElement(
                            'div',
                            { className: 'row ' },
                            _react2['default'].createElement(
                                'div',
                                { className: 'col-sm-12 text-center login_txt' },
                                _react2['default'].createElement('img', { src: './img/disolar_logo_black.png', alt: 'image' }),
                                _react2['default'].createElement(
                                    'h3',
                                    null,
                                    'Välkommen tillbaka!'
                                ),
                                _react2['default'].createElement(
                                    'h4',
                                    null,
                                    'Logga in för att få tillgång till dinå prisuppskattningar'
                                )
                            )
                        ),
                        _react2['default'].createElement(
                            'div',
                            { className: 'row text-center ' },
                            _react2['default'].createElement(
                                'div',
                                { className: 'col-sm-12' },
                                _react2['default'].createElement(
                                    'div',
                                    { className: 'form_top1' },
                                    _react2['default'].createElement(Login, { loginsubmit: this.loginsubmit.bind(this), validateField: this.validateField.bind(this),
                                        EmailErrors: this.state.formErrors.email,
                                        PasswordErrors: this.state.formErrors.password,
                                        responseerror: this.state.responseerror

                                    })
                                )
                            )
                        )
                    ),
                    _react2['default'].createElement(
                        'div',
                        { className: 'row' },
                        _react2['default'].createElement(
                            'div',
                            { className: 'btmimg' },
                            _react2['default'].createElement('img', { src: './img/bootm-im.jpg', className: 'img-responsive', alt: 'image' })
                        )
                    )
                )
            );
        }
    }]);

    return LoginSignup;
})(_react.Component);

exports['default'] = LoginSignup;
module.exports = exports['default'];
/* <Signup signupnsubmit={this.signupsubmit}
   nameErrors={this.state.formErrors.name}
   PhoneErrors={this.state.formErrors.phone}
   EmailErrors={this.state.formErrors.email}
   PasswordErrors={this.state.formErrors.password}
     signupValid={this.state.signupValid}
   validateField={this.validateField.bind(this)}
   /> */

},{"react":undefined,"react-dom":undefined,"react-router-dom":104}],26:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, '__esModule', {
    value: true
});

var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; desc = parent = undefined; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _reactDom = require('react-dom');

var _reactDom2 = _interopRequireDefault(_reactDom);

var _reactRouterDom = require('react-router-dom');

//var mainurl=require('../config.js');

var formleft = {
    paddingLeft: 0
};

var Login = (function (_Component) {
    _inherits(Login, _Component);

    function Login(props) {
        _classCallCheck(this, Login);

        _get(Object.getPrototypeOf(Login.prototype), 'constructor', this).call(this, props);
        // this.state = { email: '', password: '', emailValid: false, passwordValid: false, formErrors: { email: '', password: '' } };

        this.handleChange = this.handleChange.bind(this);
        //  this.loginsubmit = this.loginsubmit.bind(this);
    }

    _createClass(Login, [{
        key: 'handleChange',
        value: function handleChange(event) {

            this.props.validateField(event.target.name, event.target.value);

            //this.setState({[event.target.name]: event.target.value});
            /* console.log(event.target.name);
                       console.log(event.target.value);
            */
            // console.log(this.props.state);
            //this.setState({ email: event.target.value, name: event.target.name });
            //validateField(event.target.name,event.target.value);
            //this.setState([event.target.name])this.validateField(event.target.name, event.target.value)
            //console.log(:event.target.value,this.state.formErrors);
            //  alert(event.target.name);
        }

        /*
            loginsubmit(event) {
                this.compleatevalidation();
                // alert('A name was submitted: ' + this.state.email+'password'+this.state.email);
                event.preventDefault();
            }
        */
    }, {
        key: 'loginvalidationverify',
        value: function loginvalidationverify() {
            if (this.state.emailValid && this.state.passwordValid) {
                console.log("success");
            }
        }
    }, {
        key: 'render',
        value: function render() {
            return _react2['default'].createElement(
                'form',
                { onSubmit: this.props.loginsubmit.bind(this), id: 'login' },
                _react2['default'].createElement(
                    'h3',
                    null,
                    'Login'
                ),
                _react2['default'].createElement('input', { type: 'email', name: 'email', placeholder: 'Email*', className: 'form-control input-bg', onBlur: this.handleChange.bind(this) }),
                _react2['default'].createElement('input', { type: 'password', placeholder: 'Password*', className: 'form-control input-bg1', name: 'password', onBlur: this.handleChange.bind(this) }),
                _react2['default'].createElement(
                    'p',
                    { className: 'text-right' },
                    '  ',
                    _react2['default'].createElement(
                        'a',
                        { href: '' },
                        _react2['default'].createElement(
                            'u',
                            null,
                            'Forgot Password ?'
                        ),
                        ' '
                    )
                ),
                _react2['default'].createElement(
                    'div',
                    null,
                    ' ',
                    _react2['default'].createElement('input', { type: 'submit', className: 'btn btn-info', id: 'buttonnew', value: 'Login' }),
                    ' (or ) ',
                    _react2['default'].createElement(
                        'a',
                        { href: '' },
                        'signup here ? '
                    )
                )
            );
        }
    }]);

    return Login;
})(_react.Component);

var Signup = (function (_Component2) {
    _inherits(Signup, _Component2);

    function Signup(props) {
        _classCallCheck(this, Signup);

        _get(Object.getPrototypeOf(Signup.prototype), 'constructor', this).call(this, props);

        //  console.log(this.props)
    }

    _createClass(Signup, [{
        key: 'handleChange',
        value: function handleChange(event) {

            this.props.validateField(event.target.name, event.target.value);
        }
    }, {
        key: 'render',
        value: function render() {

            return _react2['default'].createElement(
                'form',
                { onSubmit: this.props.signupnsubmit, id: 'signup', className: 'form-horizontal ' },
                _react2['default'].createElement('input', { type: 'text', name: 'name', className: 'form-control input-namebg', placeholder: 'Name*', onBlur: this.handleChange.bind(this), required: true }),
                _react2['default'].createElement(
                    'span',
                    { id: 'error' },
                    this.props.nameErrors
                ),
                _react2['default'].createElement('input', { type: 'text', name: 'phone', className: 'form-control input-phonebg', placeholder: 'Phone*', onBlur: this.handleChange.bind(this), required: true }),
                _react2['default'].createElement(
                    'span',
                    { id: 'error' },
                    this.props.PhoneErrors
                ),
                _react2['default'].createElement('input', { type: 'email', name: 'email', className: 'form-control input-bg', placeholder: 'Email*', onBlur: this.handleChange.bind(this), required: true }),
                _react2['default'].createElement(
                    'span',
                    { id: 'error' },
                    this.props.EmailErrors
                ),
                _react2['default'].createElement('input', { type: 'password', name: 'password', className: 'form-control input-bg1', placeholder: 'Password*', onBlur: this.handleChange.bind(this), required: true }),
                _react2['default'].createElement(
                    'span',
                    { id: 'error' },
                    this.props.PasswordErrors
                ),
                _react2['default'].createElement(
                    'div',
                    null,
                    ' ',
                    _react2['default'].createElement('input', { type: 'checkbox', required: true }),
                    '   ',
                    _react2['default'].createElement(
                        'label',
                        null,
                        'I Agree to ',
                        _react2['default'].createElement(
                            'a',
                            { href: '' },
                            'Terms & Conditions'
                        )
                    )
                ),
                _react2['default'].createElement('br', null),
                _react2['default'].createElement(
                    'div',
                    null,
                    _react2['default'].createElement('input', { type: 'submit', id: 'buttonnew', className: 'btn btn-info', value: 'Signup', disabled: this.props.nameErrors == "" && this.props.EmailErrors == "" && this.props.PhoneErrors == "" && this.props.PasswordErrors == "" ? false : true }),
                    _react2['default'].createElement(
                        _reactRouterDom.Link,
                        { to: 'login' },
                        _react2['default'].createElement(
                            'button',
                            { type: 'btn', className: 'signup-btn' },
                            'Sign in here'
                        ),
                        ' '
                    )
                ),
                _react2['default'].createElement('br', null)
            );
        }
    }]);

    return Signup;
})(_react.Component);

var Registration = (function (_Component3) {
    _inherits(Registration, _Component3);

    function Registration(props) {
        _classCallCheck(this, Registration);

        _get(Object.getPrototypeOf(Registration.prototype), 'constructor', this).call(this, props);

        this.state = {
            email: '',
            password: '',
            name: '',
            phone: '',
            emailValid: false,
            passwordValid: false,
            formErrors: { email: '', password: '', name: '', phone: '' },
            phonevalid: false,
            namevalid: false,
            loginValid: false,
            signupValid: false,
            responseerror: ""
        };
    }

    _createClass(Registration, [{
        key: 'loginsubmit',
        value: function loginsubmit(event) {
            // this.compleatevalidation();
            // alert('A name was submitted: ' + this.state.email+'password'+this.state.email);
            event.preventDefault();
        }
    }, {
        key: 'signupsubmit',
        value: function signupsubmit(event) {
            var _this = this;

            event.preventDefault();

            if (this.state.formErrors.email == "" && this.state.formErrors.name == "" && this.state.formErrors.phone == "" && this.state.formErrors.password == "") {
                var payload;

                (function () {
                    alert("success");

                    var main = _this;
                    payload = {
                        name: _this.state.name,
                        email: _this.state.email,
                        password: _this.state.password,
                        phone: _this.state.phone,
                        type: 'USER'
                    };

                    fetch('users/registeruser', {
                        method: "post", headers: {
                            'Content-Type': 'application/x-www-form-urlencoded',
                            "Access-Control-Request-Headers": "*",
                            "Access-Control-Request-Method": "*"
                        }, body: 'json=' + JSON.stringify(payload)
                    }).then(function (response) {
                        return response;
                    }).then(function (response) {
                        return response.json();
                    }).then(function (data) {
                        console.log(data);
                        if (data.status == 400) {
                            main.setState({
                                userdata: data.message,
                                responseerror: data.message
                            });
                        } else if (data.status == 200) {

                            main.setState({
                                userdata: data.data,
                                responseerror: ""
                            });
                            localStorage.setItem('userdata', JSON.stringify(data.data));
                            localStorage.setItem('token', data.token);
                            location.href = "/";
                        }
                    });
                })();
            } else {
                alert("Please Fill All Mandatory Fields ");
            }

            //  this.compleatevalidation();
            // alert('A name was submitted: ' + this.state.email+'password'+this.state.email);
        }
    }, {
        key: 'validateField',
        value: function validateField(fieldName, value) {
            console.log(fieldName + "-" + value);
            console.log(this.state.formErrors);

            var fieldValidationErrors = this.state.formErrors;
            var passwordValid = this.state.passwordValid;
            var phonevalid = this.state.phonevalid;
            var namevalid = this.state.namevalid;
            var emailValid = this.state.emailValid;

            switch (fieldName) {
                case 'email':

                    //emailValid = value.match(/^([\w.%+-]+)@([\w-]+\.)+([\w]{2,})$/i);
                    emailValid = value.length >= 6;

                    fieldValidationErrors.email = emailValid ? '' : 'Invalid Email';
                    this.setState({ formErrors: fieldValidationErrors, emailValid: emailValid, email: value });
                    console.log(emailValid);

                    break;
                case 'password':
                    passwordValid = value.length >= 6;
                    fieldValidationErrors.password = passwordValid ? '' : 'Password contain minimum 6 charecters';
                    this.setState({ formErrors: fieldValidationErrors, passwordValid: passwordValid, password: value });
                    console.log(passwordValid);
                    break;
                case 'phone':
                    phonevalid = value.length >= 10;
                    fieldValidationErrors.phone = phonevalid ? '' : ' Phone number contain minimum 10 charecters';
                    this.setState({ formErrors: fieldValidationErrors, phonevalid: phonevalid, phone: value });
                    console.log(phonevalid);
                    break;
                case 'name':
                    namevalid = value.length >= 3;
                    fieldValidationErrors.name = namevalid ? '' : 'Name contain minimum 3 charecters';
                    this.setState({ formErrors: fieldValidationErrors, namevalid: namevalid, name: value });
                    console.log(namevalid);
                    break;
                default:
                    break;
            }
        }
    }, {
        key: 'render',
        value: function render() {
            return _react2['default'].createElement(
                'div',
                null,
                _react2['default'].createElement(
                    'div',
                    { className: 'container-fluid bg-white' },
                    _react2['default'].createElement(
                        'div',
                        { className: 'shdow_wt' },
                        _react2['default'].createElement(
                            'div',
                            { className: 'row ' },
                            _react2['default'].createElement(
                                'div',
                                { className: 'col-sm-12 text-center login_txt' },
                                _react2['default'].createElement('img', { src: './img/disolar_logo_black.png', alt: 'image' }),
                                _react2['default'].createElement(
                                    'h3',
                                    null,
                                    'DIN PRISUPPSKATTNING ÄR FÄRDIG!'
                                ),
                                _react2['default'].createElement(
                                    'h5',
                                    null,
                                    _react2['default'].createElement(
                                        'b',
                                        null,
                                        'VI HAR NU GENERERAT DIN PRISUPPSKATTNING BASERAT PÅ FÖLJANDE UPPGIFTER'
                                    )
                                ),
                                _react2['default'].createElement(
                                    'h4',
                                    null,
                                    _react2['default'].createElement(
                                        'b',
                                        null,
                                        'Logga in eller registrera ett konto för att få tillgång till din prisuppskattning'
                                    )
                                )
                            )
                        ),
                        _react2['default'].createElement(
                            'div',
                            { className: 'row' },
                            _react2['default'].createElement(
                                'div',
                                { className: 'col-sm-12' },
                                _react2['default'].createElement(Signup, { signupnsubmit: this.signupsubmit.bind(this),
                                    nameErrors: this.state.formErrors.name,
                                    PhoneErrors: this.state.formErrors.phone,
                                    EmailErrors: this.state.formErrors.email,
                                    PasswordErrors: this.state.formErrors.password,

                                    signupValid: this.state.signupValid,
                                    validateField: this.validateField.bind(this),
                                    responseerror: this.state.responseerror

                                }),
                                '                       '
                            )
                        )
                    ),
                    _react2['default'].createElement(
                        'div',
                        { className: 'row' },
                        _react2['default'].createElement(
                            'div',
                            { className: 'btmimg' },
                            _react2['default'].createElement('img', { src: './img/bootm-im.jpg', className: 'img-responsive', alt: 'image' })
                        )
                    )
                )
            );
        }
    }]);

    return Registration;
})(_react.Component);

exports['default'] = Registration;
module.exports = exports['default'];
/* <div className="alert alert-danger" hidden={(this.props.responseerror=="")}> 
{this.props.responseerror}
</div>*/ /*<div className="col-sm-12 text-center registrn_add  login_txt">
            <p><span className="addres_txt">Address :</span> dummy text of the printing and t</p>
            <p><span className="addres_txt">Address :</span> dummy text of the printing and t</p>
            <p><span className="addres_txt">Address :</span> dummy text of the printing and t</p>
            <p><span className="addres_txt">Address :</span> dummy text of the printing and t</p>
             <h4>Lorem Ipsum is simply dummy text of the printing and typesetting industry.</h4>
         </div>*/

},{"react":undefined,"react-dom":undefined,"react-router-dom":104}],27:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, '__esModule', {
    value: true
});

var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; desc = parent = undefined; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _os = require('os');

var matstyle = {
    padding: 10,
    margin: 5,
    border: "1px solid #ccc",
    textAlign: "center",
    formmargin: { margin: 10, color: "#fff" },
    signup: {
        color: "#5bc0de",
        cursor: "pointer"
    },
    h2: {
        cursor: "pointer"
    }
};

var Roofprice = 0,
    costofmaterial = 0,
    costoflabour = 0,
    costofcontainer = 0,
    Area = 0;

var LoginEstimate = (function (_Component) {
    _inherits(LoginEstimate, _Component);

    function LoginEstimate(props) {
        _classCallCheck(this, LoginEstimate);

        window.scrollTo(0, 0);
        _get(Object.getPrototypeOf(LoginEstimate.prototype), 'constructor', this).call(this, props);
        this.state = {
            stepIndex: 1,
            finished: false,
            clear: {},
            previous: {},
            next: {},
            haveaccount: false,
            email: '',
            password: '',
            name: '',
            phone: '',
            emailValid: false,
            passwordValid: false,
            formErrors: { email: '', password: '', name: '', phone: '' },
            phonevalid: false,
            namevalid: false,
            loginValid: false,
            signupValid: false,
            rooferrormessage: "",
            responceerror: "",
            responceerrorlogin: "",
            responceerrorsignup: "",
            date: new Date(),
            loaded: false,
            text: 'Estimerar pris...'
        };
        this.changeRoute = this.changeRoute.bind(this);
        costofmaterial = parseFloat(this.props.materialcost) * parseFloat(this.props.area);
        costoflabour = parseFloat(this.props.roofstylecost) * parseFloat(this.props.area);
        //area = parseFloat(this.props.area);
        function degrees_to_radians(degrees) {
            var pi = Math.PI;
            return degrees * (pi / 180);
        }
        var cosangle = Math.cos(degrees_to_radians(25));
        Area = this.props.area / cosangle;
        if (this.props.material === "Papptak") {
            // costofmaterial = 85 * parseFloat(Area);
            costofmaterial = 85 * parseFloat(Area);
            if (Area < 70) {
                costoflabour = 220 * parseFloat(Area);
            } else if (Area > 70 && Area < 1000) {
                costoflabour = 190 * parseFloat(Area);
            } else if (Area > 1000) {
                costoflabour = 100 * parseFloat(Area);
            }
        }
        costofcontainer = 8000;
        Roofprice = parseFloat(costofcontainer) + parseFloat(costoflabour) + parseFloat(costofmaterial);
        // if (this.props.logedin === true) {
        //     if (this.props.area === "" || this.props.style === "" || this.props.material ==="") {
        //         alert("Something Went wrong please try again");
        //     } else {
        //         this.SendEstimation(this);
        //     }
        // }
        var Total_roof_area = sessionStorage.getItem('roofarea');
        var solar_roof_area = JSON.parse(sessionStorage.getItem('roofAreaPkt')).normalRoofArea;
        var normal_roof_area = Total_roof_area - solar_roof_area;
        var cost_of_solar_roof_tiles = solar_roof_area * this.props.panel_cost;
        var cost_of_normal_roof_tiles = normal_roof_area * this.props.panel_cost;
        var Cost_of_material = cost_of_solar_roof_tiles + cost_of_normal_roof_tiles;
        var labor_cost = Total_roof_area * 250;
        var floorPlan = this.props.floors.split("plan")[0].trim();
        var floor = parseInt(floorPlan);
        var skylift = 0;
        if (floor <= 2) {
            skylift = 0;
        } else if (floor >= 3) {
            skylift = 5200;
        }
        var Cost_of_electrician = 6000;
        var Cost_of_cable = 540;
        var Cost_of_transport = 10000;
        var Cost_of_container = 10000;
        var capcity_price = 0;
        var cost_of_invertor = 0;
        if (this.props.pannel_name === 'Midsommar soltak') {

            cost_of_invertor = Total_roof_area * this.props.pannel_capacity;
        } else if (this.props.pannel_name == 'Bendars sunwave palema') {
            cost_of_invertor = Total_roof_area * this.props.pannel_capacity;
        }
        if (cost_of_invertor < 4000) {
            capcity_price = 9560;
        }
        if (cost_of_invertor > 4001 && cost_of_invertor < 5000) {
            capcity_price = 9660;
        }
        if (cost_of_invertor > 5001 && cost_of_invertor < 7000) {
            capcity_price = 11500;
        }
        if (cost_of_invertor > 7001 && cost_of_invertor < 8000) {
            capcity_price = 11830;
        }
        if (cost_of_invertor > 8001 && cost_of_invertor < 10000) {
            capcity_price = 12760;
        }
        if (cost_of_invertor > 10001 && cost_of_invertor < 15000) {
            capcity_price = 11350;
        }
        if (cost_of_invertor > 15001 && cost_of_invertor < 17000) {
            capcity_price = 11620;
        }
        if (cost_of_invertor > 17001 && cost_of_invertor < 25000) {
            capcity_price = 16100;
        }
        if (cost_of_invertor > 25001 && cost_of_invertor < 27600) {
            capcity_price = 16100;
        }
        if (cost_of_invertor > 27600) {
            capcity_price = 20000;
        }

        var Cost_of_solar_roof_installation_before_tax = Cost_of_material + cost_of_invertor + Cost_of_cable + Cost_of_container + Cost_of_transport + Cost_of_electrician + skylift;
        var Digisolar_commission = Cost_of_solar_roof_installation_before_tax * 15 / 100;
        if (Digisolar_commission > 15000) {
            Digisolar_commission = 15000;
        }
        var Cost_of_solar_roof_installatio_with_commission = Cost_of_solar_roof_installation_before_tax + Digisolar_commission;
        var Tax_on_solar_roof_installation = Cost_of_solar_roof_installatio_with_commission * 25 / 100;
        var Cost_of_solar_roof_installation_after_tax = Cost_of_solar_roof_installatio_with_commission + Tax_on_solar_roof_installation;
        var Display_cost_of_solar_roof_installation = Cost_of_solar_roof_installation_after_tax * 93 / 100;
        var Solar_incentives = Display_cost_of_solar_roof_installation * 20 / 100;
        var Battery_cost = 84485;

        var Tax_on_battery = 84485 * 25 / 100;

        var Battery_cost_after_tax = Battery_cost + Tax_on_battery;
        sessionStorage.setItem('battery', Battery_cost_after_tax);
        var Battery_incentives = 50000;
        var Cost_of_solar_roof_installation_after_incentives = Display_cost_of_solar_roof_installation - Solar_incentives;
        sessionStorage.setItem('solarIncentives', Cost_of_solar_roof_installation_after_incentives);
        var Cost_of_battery_after_incentives = Battery_cost_after_tax - Battery_incentives;
        sessionStorage.setItem('batteryIncentives', Cost_of_battery_after_incentives);
        var Final_cost = Cost_of_solar_roof_installation_after_incentives + Cost_of_battery_after_incentives;
        sessionStorage.setItem('final_cost', Final_cost);
    }

    _createClass(LoginEstimate, [{
        key: 'loginsubmit',
        value: function loginsubmit(event) {
            event.preventDefault();
            var main = this;
            var payload = {
                email: this.state.email,
                phone: this.state.phone,
                // password: this.state.password,
                password: '123456',
                type: 'USER'
            };

            console.log(JSON.stringify(payload));
            fetch('http://localhost:80/users/userLogin', {
                method: "post", headers: {
                    'Content-Type': 'application/x-www-form-urlencoded',
                    "Access-Control-Request-Headers": "*",
                    "Access-Control-Request-Method": "*"
                }, body: 'json=' + JSON.stringify(payload)
            }).then(function (response) {
                return response;
            }).then(function (response) {
                console.log(response);
                return response.json();
            }).then(function (data) {
                if (data.status === 400) {
                    main.setState({
                        responceerrorlogin: data.message
                    });
                } else if (data.status === 200) {
                    var userdata;
                    main.setState({
                        responceerrorlogin: ""
                    });

                    if (data.data.type === "USER") {
                        userdata = {
                            "type": data.data.type,
                            "estdet": data.data.estdet,
                            "updateon": data.data.updateon,
                            "cratedon": data.data.cratedon,
                            "email": data.data.email, "phone": data.data.phone, "name": data.data.name, "token": data.token
                        };
                        // var payload = {
                        //     area: main.props.area,
                        //     coordinates: main.props.coordinates,
                        //     slope: main.props.style,
                        //     estimatedamount: Roofprice,
                        //     material: main.props.material,
                        //     slopecost: main.props.roofstylecost,
                        //     materialcost: main.props.materialcost,
                        //     labour: costoflabour,
                        //     address: main.props.address,
                        //     email: data.data.email,
                        //     property_type: main.props.property_type,
                        //     floors: main.props.floors,
                        //     roof_pitch: main.props.roof_pitch,
                        //     power: main.props.power,
                        //     e_consumption: main.props.e_consumption
                        // }
                        // fetch('users/estimation', {
                        //     method: "post",
                        //     crossDomain: true,
                        //     headers: {
                        //         'Content-Type': 'application/x-www-form-urlencoded',
                        //         "Access-Control-Request-Headers": "*",
                        //         "Access-Control-Request-Method": "*",

                        //     }, body: 'json=' + JSON.stringify(payload) + '&token=' + data.token
                        // }).then(function (response) {
                        //     return response;
                        // }).then(function (response) {
                        //     return response.json();
                        // }).then(function (data) {

                        //     if (data.status === 400) {
                        //         main.setState({
                        //             responceerror: data.message
                        //         })
                        //     } else if (data.status === 200) {

                        //         main.setState({
                        //             responceerror: ""
                        //         })
                        //     }
                        // })
                    } else if (data.data.type === "CONTRACTOR") {
                            userdata = {
                                "type": data.data.type,
                                "organization_number": data.data, organization_number: organization_number,
                                "address": data.data.address,
                                "website": data.data.website,
                                "businessname": data.data.businessname,
                                "updateon": data.data.updateon,
                                "cratedon": data.data.cratedon,
                                "email": data.data.email, "phone": data.data.phone, "name": data.data.name, "token": data.token
                            };
                        } //         estimation
                    localStorage.setItem('userdata', JSON.stringify(userdata));
                    localStorage.setItem('token', data.token);
                    main.setState({
                        userdata: data.data
                    });
                    main.props.loginmodefun(true);
                    main.changeRoute(main);
                }
            })['catch'](function (err) {
                console.log(err);
            });
        }
    }, {
        key: 'changeRoute',
        value: function changeRoute() {
            this.props.areaEstimetack(this);
        }
    }, {
        key: 'signupsubmit',
        value: function signupsubmit(event) {
            var _this = this;

            event.preventDefault();
            if (this.state.formErrors.email === "" && this.state.formErrors.name === "" && this.state.formErrors.phone === "" && this.state.formErrors.password === "") {
                var est;
                var payload;

                (function () {

                    var main = _this;
                    est = {
                        area: _this.props.area,
                        coordinates: _this.props.coordinates,
                        slope: _this.props.style,
                        estimatedamount: Roofprice,
                        material: _this.props.material,
                        slopecost: _this.props.roofstylecost,
                        materialcost: _this.props.materialcost,
                        labour: costoflabour,
                        address: _this.props.address
                    };
                    payload = {
                        name: _this.state.name,
                        email: _this.state.email,
                        password: _this.state.password,
                        phone: _this.state.phone,
                        type: 'USER',
                        estdet: est
                    };

                    fetch('users/registeruser', {
                        method: "post", headers: {
                            'Content-Type': 'application/x-www-form-urlencoded',
                            "Access-Control-Request-Headers": "*",
                            "Access-Control-Request-Method": "*"
                        }, body: 'json=' + JSON.stringify(payload)
                    }).then(function (response) {
                        return response;
                    }).then(function (response) {
                        return response.json();
                    }).then(function (data) {
                        if (data.status === 400) {
                            main.setState({
                                responceerrorsignup: data.message
                            });
                        } else if (data.status === 200) {
                            localStorage.setItem('userdata', JSON.stringify(data.data));
                            localStorage.setItem('token', data.data.token);

                            main.setState({
                                userdata: data.data,
                                responceerrorsignup: ""
                            });
                            main.props.loginmodefun(true);
                        }
                    });
                })();
            } else {
                alert("Please Fill All Mandatory Fields ");
            }
        }
    }, {
        key: 'haveaccountfunction',
        value: function haveaccountfunction() {
            this.setState({
                haveaccount: !this.state.haveaccount
            });
        }
    }, {
        key: 'validateField',
        value: function validateField(fieldName, value) {
            var fieldValidationErrors = this.state.formErrors;
            var passwordValid = this.state.passwordValid;
            var phonevalid = this.state.phonevalid;
            var namevalid = this.state.namevalid;
            var emailValid = this.state.emailValid;

            switch (fieldName) {
                case 'email':
                    //emailValid = value.match(/^([\w.%+-]+)@([\w-]+\.)+([\w]{2,})$/i);
                    emailValid = value.length >= 6;
                    fieldValidationErrors.email = emailValid ? '' : ' is invalid';
                    this.setState({ formErrors: fieldValidationErrors, emailValid: emailValid, email: value });
                    break;
                case 'password':
                    passwordValid = value.length >= 6;
                    fieldValidationErrors.password = passwordValid ? '' : ' is too short';
                    this.setState({ formErrors: fieldValidationErrors, passwordValid: passwordValid, password: value });
                    break;
                case 'phone':
                    phonevalid = value.length === 10;
                    fieldValidationErrors.phone = phonevalid ? '' : 'phone number  is too short';
                    this.setState({ formErrors: fieldValidationErrors, phonevalid: phonevalid, phone: value });
                    break;
                case 'name':
                    namevalid = value.length >= 6;
                    fieldValidationErrors.name = namevalid ? '' : ' is too short';
                    this.setState({ formErrors: fieldValidationErrors, namevalid: namevalid, name: value });
                    break;
                default:
                    break;
            }
        }
    }, {
        key: 'render',
        value: function render() {
            return _react2['default'].createElement(
                'div',
                null,
                _react2['default'].createElement(
                    'div',
                    { className: 'container-fluid bg-white' },
                    _react2['default'].createElement(
                        'div',
                        { className: 'shdow_wt' },
                        _react2['default'].createElement(
                            'div',
                            { className: 'row ' },
                            _react2['default'].createElement(
                                'div',
                                { className: 'col-sm-12 text-center login_txt' },
                                _react2['default'].createElement('img', { src: './img/disolar_logo_black.png', alt: 'logo' }),
                                _react2['default'].createElement(
                                    'h3',
                                    null,
                                    'Din prisuppskattning är färdig!'
                                ),
                                _react2['default'].createElement(
                                    'h4',
                                    null,
                                    'Vi har nu genererat din prisuppskattning baserat på följande uppgifter:'
                                )
                            ),
                            _react2['default'].createElement(
                                'div',
                                { className: 'col-sm-12 text-center registrn_add  login_txt' },
                                _react2['default'].createElement(
                                    'p',
                                    null,
                                    _react2['default'].createElement(
                                        'span',
                                        { className: 'addres_txt' },
                                        'Adress :'
                                    ),
                                    ' ',
                                    this.props.address
                                ),
                                _react2['default'].createElement(
                                    'p',
                                    null,
                                    _react2['default'].createElement(
                                        'span',
                                        { className: 'addres_txt' },
                                        'Fastighetstyp :'
                                    ),
                                    ' ',
                                    this.props.property_type
                                ),
                                _react2['default'].createElement(
                                    'p',
                                    null,
                                    _react2['default'].createElement(
                                        'span',
                                        { className: 'addres_txt' },
                                        'Taklutning :'
                                    ),
                                    ' ',
                                    this.props.roof_pitch,
                                    ' °'
                                ),
                                _react2['default'].createElement(
                                    'p',
                                    null,
                                    _react2['default'].createElement(
                                        'span',
                                        { className: 'addres_txt' },
                                        'Takmaterial :'
                                    ),
                                    '  ',
                                    this.props.material
                                ),
                                _react2['default'].createElement(
                                    'p',
                                    null,
                                    _react2['default'].createElement(
                                        'span',
                                        { className: 'addres_txt' },
                                        'Årlig elförbrukning :'
                                    ),
                                    ' ',
                                    this.props.e_consumption
                                ),
                                _react2['default'].createElement(
                                    'p',
                                    null,
                                    _react2['default'].createElement(
                                        'span',
                                        { className: 'addres_txt' },
                                        'Huvudsäkring :'
                                    ),
                                    ' ',
                                    this.props.power
                                ),
                                _react2['default'].createElement(
                                    'h4',
                                    null,
                                    'Vänligen skriv in din e-postadress för att få tillgång till din prisuppskattning'
                                )
                            )
                        ),
                        _react2['default'].createElement(
                            'div',
                            { className: 'row form_bottom1' },
                            _react2['default'].createElement(
                                'div',
                                { className: 'col-sm-12' },
                                _react2['default'].createElement(
                                    'div',
                                    { className: 'form_top2' },
                                    _react2['default'].createElement(
                                        'div',
                                        null,
                                        _react2['default'].createElement(GetDetails, { haveaccountfunction: this.haveaccountfunction.bind(this),
                                            haveaccount: this.state.haveaccount,
                                            loginsubmit: this.loginsubmit.bind(this),
                                            signupnsubmit: this.signupsubmit.bind(this),
                                            responceerror: this.state.responceerror,
                                            responceerrorlogin: this.state.responceerrorlogin,
                                            responceerrorsignup: this.state.responceerrorsignup,
                                            validateField: this.validateField.bind(this)
                                        })
                                    )
                                )
                            )
                        )
                    )
                ),
                _react2['default'].createElement(
                    'div',
                    { className: 'container-fluid' },
                    _react2['default'].createElement(
                        'div',
                        { className: 'row' },
                        _react2['default'].createElement(
                            'div',
                            { className: 'btmimg' },
                            _react2['default'].createElement('img', { src: './img/bootm-im.jpg', alt: 'bottom', className: 'img-responsive' })
                        )
                    )
                )
            );
        }
    }]);

    return LoginEstimate;
})(_react.Component);

var GetDetails = (function (_Component2) {
    _inherits(GetDetails, _Component2);

    function GetDetails() {
        _classCallCheck(this, GetDetails);

        _get(Object.getPrototypeOf(GetDetails.prototype), 'constructor', this).apply(this, arguments);
    }

    _createClass(GetDetails, [{
        key: 'handleChange',
        value: function handleChange(event) {
            this.props.validateField(event.target.name, event.target.value);
        }
    }, {
        key: 'render',
        value: function render() {
            return _react2['default'].createElement(
                'form',
                { onSubmit: this.props.loginsubmit.bind(this), id: 'login', style: matstyle.formmargin },
                _react2['default'].createElement(
                    'div',
                    { className: 'alert alert-danger', hidden: this.props.responceerrorlogin === "" },
                    this.props.responceerrorlogin
                ),
                _react2['default'].createElement('input', { type: 'email', name: 'email', placeholder: 'E-postadress*', className: 'form-control input-bg', onBlur: this.handleChange.bind(this), required: true }),
                _react2['default'].createElement(
                    'span',
                    { id: 'error' },
                    this.props.EmailErrors
                ),
                _react2['default'].createElement('input', { type: 'text', name: 'phone', className: 'form-control input-phonebg', placeholder: 'Telefonnummer*', onBlur: this.handleChange.bind(this), required: true }),
                _react2['default'].createElement(
                    'span',
                    { id: 'error' },
                    this.props.PhoneErrors
                ),
                /*} <input type="password" placeholder="Password*" className="form-control input-bg1" name="password" onBlur={this.handleChange.bind(this)} required />
                <span id="error">{this.props.PasswordErrors}
                </span> 
                {<p className="text-right">  <a href="/Forgotpassword"><u>Forgot Password ?</u> </a></p>}*/_react2['default'].createElement('br', null),
                _react2['default'].createElement(
                    'div',
                    null,
                    ' ',
                    _react2['default'].createElement('input', { type: 'submit', className: 'form-control btn-primary', value: 'Vidare' })
                )
            );
        }
    }]);

    return GetDetails;
})(_react.Component);

exports['default'] = LoginEstimate;
module.exports = exports['default'];

},{"os":44,"react":undefined}],28:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, '__esModule', {
  value: true
});

var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; desc = parent = undefined; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _reactGoogleMapDrawFilter = require('react-google-map-draw-filter');

var _reactGoogleMapDrawFilter2 = _interopRequireDefault(_reactGoogleMapDrawFilter);

var App = (function (_Component) {
  _inherits(App, _Component);

  function App(props) {
    _classCallCheck(this, App);

    _get(Object.getPrototypeOf(App.prototype), 'constructor', this).call(this, props);
    window.scrollTo(0, 0);
    this.state = {
      drawMode: true,
      activeMarkers: []
    };
  }

  _createClass(App, [{
    key: 'onMarkerClick',
    value: function onMarkerClick(marker, e) {
      this.setState({
        activeMarkers: [marker]
      });
    }
  }, {
    key: 'renderMarkerInfo',
    value: function renderMarkerInfo() {
      if (this.state.activeMarkers) {
        return this.state.activeMarkers.map(function (marker, i) {
          return _react2['default'].createElement(
            'div',
            { key: 'marker' + i },
            marker.label,
            marker.info
          );
        });
      }
    }
  }, {
    key: 'handleReturnedMarkers',
    value: function handleReturnedMarkers(markers) {
      this.setState({
        activeMarkers: markers
      });
    }
  }, {
    key: 'toggleDraw',
    value: function toggleDraw() {
      this.setState({
        drawMode: !this.state.drawMode
      });
    }
  }, {
    key: 'render',
    value: function render() {
      var markers = [{
        info: '- Marker1',
        label: 'A',
        title: 'hello',
        latLng: { lng: 2.13815342634916, lat: 41.39485570794 }
      }, {
        label: 'B',
        info: '- Marker2',
        latLng: { lng: 2.1575260162353516, lat: 41.39586980544921 }
      }, {
        label: 'C',
        info: '- Marker 3',
        latLng: { lng: 2.162332534790039, lat: 41.397801375978204 }
      }, {
        label: 'D',
        info: '- Marker 4',
        latLng: { lng: 2.154865264892578, lat: 41.38576031676253 }
      }, {
        label: 'E',
        info: '- Marker 5',
        latLng: { lng: 2.14205645751953, lat: 41.38344199588044 }
      }];

      return _react2['default'].createElement(
        'div',
        null,
        _react2['default'].createElement(
          'div',
          { className: 'container ' },
          _react2['default'].createElement(
            'h3',
            { className: 'roof_subhead' },
            'Markera ut ditt tak'
          )
        ),
        _react2['default'].createElement(
          'div',
          { className: 'App' },
          _react2['default'].createElement(_reactGoogleMapDrawFilter2['default'], {
            drawMode: this.state.drawMode,
            markers: markers,
            handleReturnedMarkers: this.handleReturnedMarkers.bind(this),
            onMarkerClick: this.onMarkerClick.bind(this),
            apiKey: 'AIzaSyB4prJzCvsqdW0YOKo3idjakgvZUXRR_TI',
            area: this.props.area,
            roofaddress: this.props.roofaddress
          })
        ),
        _react2['default'].createElement(
          'h1',
          null,
          this.renderMarkerInfo.bind(this)()
        )
      );
    }
  }]);

  return App;
})(_react.Component);

exports['default'] = App;
module.exports = exports['default'];

},{"react":undefined,"react-google-map-draw-filter":undefined}],29:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, '__esModule', {
    value: true
});

var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; desc = parent = undefined; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _reactModal = require('react-modal');

var _reactModal2 = _interopRequireDefault(_reactModal);

var _componentsSurfaceDirectionDrag = require('./components/SurfaceDirectionDrag');

var _componentsSurfaceDirectionDrag2 = _interopRequireDefault(_componentsSurfaceDirectionDrag);

var matstyle = {
    padding: "30px 20px 20px 20px",
    margin: "5px 5px 50px 5px",
    border: "4px solid #f9f9f9",
    textAlign: "-webkit-center",
    borderRadius: "4px",
    boxShadow: "0 15px 35px rgba(50,50,93,.1), 0 5px 15px rgba(0,0,0,.07)",
    transition: "all 0.3s ease-out",
    WebkitTransform: "all 0.3s ease-out",
    textTransform: 'uppercase',
    color: '#064f70',
    fontSize: '15px'
};

var selectedStyle = {
    padding: "30px 20px 20px 20px",
    margin: "5px 5px 50px 5px",
    textAlign: "-webkit-center",
    borderRadius: "4px",
    boxShadow: "0 15px 35px rgba(50,50,93,.1), 0 5px 15px rgba(0,0,0,.07)",
    transition: "all 0.3s ease-out",
    WebkitTransform: "all 0.3s ease-out",
    border: "4px solid rgb(142, 226, 174)",
    textTransform: 'uppercase',
    color: '#064f70',
    fontWeight: 'bold',
    fontSize: '15px'
};
var customStyles = {
    content: {
        top: '50%',
        left: '50%',
        right: 'auto',
        bottom: 'auto',
        marginRight: '-50%',
        transform: 'translate(-50%, -50%)',
        padding: '10px 15px 23px',
        fontSize: '16px',
        width: '50%'
    }
};

var MaterialComponent = (function (_Component) {
    _inherits(MaterialComponent, _Component);

    function MaterialComponent(props) {
        _classCallCheck(this, MaterialComponent);

        _get(Object.getPrototypeOf(MaterialComponent.prototype), 'constructor', this).call(this, props);
        this.state = {
            stepIndex: 1,
            finished: false,
            clear: {},
            previous: {},
            next: {},
            solar: false,
            modalIsOpen: false,
            material: '',
            validationOne: false,
            validationTwo: false,
            cost: '',
            surfaceDirection: ''

        };
        window.scrollTo(0, 0);
        _reactModal2['default'].setAppElement('body');
        this.openModal = this.openModal.bind(this);
        this.afterOpenModal = this.afterOpenModal.bind(this);
        this.closeModal = this.closeModal.bind(this);
        this.validate = this.validate.bind(this);
        this.direction = this.direction.bind(this);
        this.material = [{
            image: "./img/mat1.png",
            name: "Lertegeltak",
            cost: 220
        }, {
            image: "./img/mat2.png",
            name: "Plåt",
            cost: 170
        }, {
            image: "./img/mat3.png",
            name: "Betongtegeltak",
            cost: 200
        }, {
            image: "./img/mat5.png",
            name: "Falsad plåt / Bandad Plåt",
            cost: 400
        }, {
            image: "./img/pulpettak.jpg",
            name: "Papptak",
            cost: 85
        }];
    }

    _createClass(MaterialComponent, [{
        key: 'openModal',
        value: function openModal() {}
    }, {
        key: 'afterOpenModal',
        value: function afterOpenModal() {}
    }, {
        key: 'closeModal',
        value: function closeModal() {
            this.setState({ modalIsOpen: false });
        }
    }, {
        key: 'materialchoose',
        value: function materialchoose(name) {
            alert(name);
        }
    }, {
        key: 'solarPanel',
        value: function solarPanel(name, value, e) {
            this.setState({
                solar: true,
                modalIsOpen: true
            });
        }
    }, {
        key: 'selected',
        value: function selected(material, cost) {
            this.setState({
                material: material,
                cost: cost,
                validationOne: false
            });
        }
    }, {
        key: 'validate',
        value: function validate() {
            if (this.state.material === '') {
                this.setState({ validationOne: true });
            } else if (this.state.surfaceDirection === '') {
                this.setState({ validationTwo: true });
            }
        }
    }, {
        key: 'direction',
        value: function direction(_direction) {
            this.setState({ surfaceDirection: _direction, validationTwo: false });
        }
    }, {
        key: 'makeHref',
        value: function makeHref() {
            return 'https://www.digitak.se/';
        }
    }, {
        key: 'render',
        value: function render() {
            var _this = this;

            var link = _react2['default'].createElement(
                'a',
                { href: this.makeHref('login'), target: '_blank' },
                'här'
            );
            return _react2['default'].createElement(
                'div',
                null,
                _react2['default'].createElement(
                    'div',
                    { className: 'container ' },
                    _react2['default'].createElement(
                        'h3',
                        { className: 'roof_subhead' },
                        'Takinformation'
                    )
                ),
                _react2['default'].createElement(
                    'div',
                    { className: 'col-md-12' },
                    _react2['default'].createElement(
                        'div',
                        { className: 'heading_text font-quicksand bold' },
                        'Vilket takmaterial har du idag'
                    ),
                    _react2['default'].createElement(
                        'div',
                        { className: 'container' },
                        _react2['default'].createElement(
                            'div',
                            { className: 'col-sm-12' },
                            this.material.map(function (data, index) {
                                if (data.name === 'Solpaneler') {
                                    return _react2['default'].createElement(
                                        'div',
                                        { id: 'Solpaneler', className: 'col-sm-6 col-md-3  panding_no', key: index, onClick: _this.solarPanel.bind(_this, data.name, data.cost) },
                                        _react2['default'].createElement(
                                            'div',
                                            { className: 'onfocs_brdr1', style: matstyle },
                                            _react2['default'].createElement('img', { src: data.image, alt: data.name, className: 'img-responsive' }),
                                            _react2['default'].createElement('br', null),
                                            _react2['default'].createElement(
                                                'p',
                                                null,
                                                data.name,
                                                ' ',
                                                _this.state.solar
                                            ),
                                            _this.state.solar ? _react2['default'].createElement(
                                                'div',
                                                null,
                                                _react2['default'].createElement(
                                                    _reactModal2['default'],
                                                    {
                                                        isOpen: _this.state.modalIsOpen,
                                                        onAfterOpen: _this.afterOpenModal,
                                                        onRequestClose: _this.closeModal,
                                                        style: customStyles,
                                                        contentLabel: 'Example Modal' },
                                                    _react2['default'].createElement(
                                                        'div',
                                                        null,
                                                        _react2['default'].createElement(
                                                            'button',
                                                            { style: { float: 'right', color: '#fff', backgroundColor: '#0A539C', border: 'none' }, onClick: _this.closeModal },
                                                            'X'
                                                        )
                                                    ),
                                                    _react2['default'].createElement(
                                                        'div',
                                                        { style: { width: '100%', padding: '40px 0 0' } },
                                                        'Digitak estimerar endast priser för ',
                                                        _react2['default'].createElement(
                                                            'b',
                                                            null,
                                                            'takomläggningar'
                                                        ),
                                                        '. Vårt solcellsbolag Digisolar kan ge dig pris för solcellsinstallation. För att komma till Digisolar klicka ',
                                                        link
                                                    )
                                                )
                                            ) : null
                                        )
                                    );
                                } else {
                                    return _react2['default'].createElement(
                                        'div',
                                        { className: 'col-sm-6 col-md-3  panding_no', key: index, onClick: _this.selected.bind(_this, data.name, data.cost) },
                                        _react2['default'].createElement(
                                            'div',
                                            { className: 'onfocs_brdr1', style: data.name == _this.state.material ? selectedStyle : matstyle },
                                            _react2['default'].createElement('img', { src: data.image, alt: data.name, className: 'img-responsive' }),
                                            _react2['default'].createElement('br', null),
                                            _react2['default'].createElement(
                                                'p',
                                                null,
                                                data.name
                                            )
                                        )
                                    );
                                }
                            })
                        )
                    ),
                    _react2['default'].createElement(
                        'div',
                        { className: 'col-md-12 material', style: { textAlign: 'center', padding: '30px' } },
                        this.state.validationOne ? _react2['default'].createElement(
                            'div',
                            { className: 'validation' },
                            _react2['default'].createElement(
                                'span',
                                null,
                                'Please select the material'
                            )
                        ) : null
                    )
                ),
                _react2['default'].createElement('hr', { className: 'material-seperation' }),
                _react2['default'].createElement(
                    'div',
                    { className: 'container' },
                    _react2['default'].createElement(
                        'div',
                        { className: 'col-md-12 heading_text font-quicksand bold' },
                        'VÄDERSTRECK'
                    ),
                    _react2['default'].createElement(_componentsSurfaceDirectionDrag2['default'], { direction: this.direction }),
                    _react2['default'].createElement(
                        'div',
                        { className: 'col-md-12 material', style: { textAlign: 'center', padding: '30px' } },
                        this.state.validationTwo ? _react2['default'].createElement(
                            'div',
                            { className: 'validation' },
                            _react2['default'].createElement(
                                'span',
                                null,
                                'Please select the roof direction'
                            )
                        ) : null
                    )
                ),
                _react2['default'].createElement(
                    'div',
                    { className: 'col-sm-12 col-md-12 estimate', style: { textAlign: 'center', padding: '30px' } },
                    this.state.material && this.state.surfaceDirection != '' ? _react2['default'].createElement(
                        'div',
                        { className: 'flex justifyCenter' },
                        _react2['default'].createElement(
                            'div',
                            { className: 'padding1' },
                            _react2['default'].createElement(
                                'button',
                                { onClick: this.props.back.bind(this, 2), className: 'submit' },
                                'Föregående'
                            )
                        ),
                        _react2['default'].createElement(
                            'div',
                            { className: 'padding1' },
                            _react2['default'].createElement(
                                'button',
                                { onClick: this.props.matval.bind(this, this.state.material, this.state.cost, this.state.surfaceDirection), className: 'submit' },
                                'Nästa'
                            )
                        )
                    ) : _react2['default'].createElement(
                        'div',
                        { className: 'flex justifyCenter' },
                        _react2['default'].createElement(
                            'div',
                            { className: 'padding1' },
                            _react2['default'].createElement(
                                'button',
                                { onClick: this.props.back.bind(this, 2), className: 'submit' },
                                'Föregående'
                            )
                        ),
                        _react2['default'].createElement(
                            'div',
                            { className: 'padding1' },
                            _react2['default'].createElement(
                                'button',
                                { onClick: this.validate, className: 'submit' },
                                'Nästa'
                            )
                        )
                    )
                )
            );
        }
    }]);

    return MaterialComponent;
})(_react.Component);

exports['default'] = MaterialComponent;
module.exports = exports['default'];

},{"./components/SurfaceDirectionDrag":14,"react":undefined,"react-modal":88}],30:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, '__esModule', {
    value: true
});

var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; desc = parent = undefined; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _componentsElectricityMaterialDarggable = require('./components/ElectricityMaterialDarggable');

var _componentsElectricityMaterialDarggable2 = _interopRequireDefault(_componentsElectricityMaterialDarggable);

var _reactModal = require('react-modal');

var _reactModal2 = _interopRequireDefault(_reactModal);

var customStyles = {
    content: {
        top: '50%',
        left: '50%',
        right: 'auto',
        bottom: 'auto',
        marginRight: '-50%',
        transform: 'translate(-50%, -50%)',
        padding: '20px 15px',
        fontSize: '16px',
        width: '50%',
        borderRadius: '20px',
        border: '2px solid rgb(142, 226, 174)',
        position: 'absolute'
    }
};
var ColoredLine = function ColoredLine(_ref) {
    var color = _ref.color;
    return _react2['default'].createElement('hr', {
        style: {
            color: "#aaa",
            backgroundColor: "#aaa",
            height: 1,
            width: '100%'
        }
    });
};
var highletstyle = {
    fontSize: '15px'
};

var MaterialQuestions = (function (_Component) {
    _inherits(MaterialQuestions, _Component);

    function MaterialQuestions(props) {
        _classCallCheck(this, MaterialQuestions);

        _get(Object.getPrototypeOf(MaterialQuestions.prototype), 'constructor', this).call(this, props);
        window.scrollTo(0, 0);
        _reactModal2['default'].setAppElement('body');
        this.openModal = this.openModal.bind(this);
        this.afterOpenModal = this.afterOpenModal.bind(this);
        this.closeModal = this.closeModal.bind(this);
        this.matquestionval = props.matquestionval.bind(this);
        this.dataSet = [{
            question: "Hur stor är din årliga elförbrukning? <para> - 	Ange din totala elförbrukning i kWh genom att justera reglaget. Om du inte vet din årliga elförbrukning kan du använda våra fördefinierade värden.",
            answers: ['7,000 kWh -  Normalt radhus/villa med fjärrvärme', '13,000 kWh - Normal villa med värmepump', '25,000 kWh - Normal villa med direktverkande el']
        }, {
            question: "Hur stor är din huvudsäkring? <para>	- Storleken på din huvudsäkring hittar du i ditt proppskåp på huvudströmbrytaren, automatströmbrytaren eller på din elräkning. Dom flesta radhus och villor har en huvudsäkring på 16-25 Amp.",
            answers: [' 16A', ' 20A', ' 25A', ' 35A', ' 50A', ' 63A', 'Vet ej']
        }];

        this.state = { popupTwo: false, popup: false, modalIsOneOpen: false, modalIsTwoOpen: false, stepIndex: 1, selectedValue: '', selectedValueTwo: '', angle: '1000', left: '135px', validationOne: false, validation: false };
        this.handleClick = this.handleClick.bind(this);
        this.handleClickTwo = this.handleClickTwo.bind(this);
        this.validate = this.validate.bind(this);
        this.scrollable = this.scrollable.bind(this);
        this.electricy = this.electricy.bind(this);
        this.selectedAnswers = [];
    }

    _createClass(MaterialQuestions, [{
        key: 'handleClick',
        value: function handleClick(value, index, id) {
            var selectedValue = value;
            highletstyle = {
                fontWeight: 'bold',
                color: 'black',
                fontSize: '16px'
            };
            this.selectedAnswers.push(value);
            this.setState({ selectedValue: selectedValue, validationOne: false });
        }
    }, {
        key: 'handleClickTwo',
        value: function handleClickTwo(value2, index, id) {
            var selectedValue = value2;
            this.selectedAnswers.push(value2);
            this.setState({ selectedValueTwo: selectedValue, validation: false });
        }
    }, {
        key: 'validate',
        value: function validate() {
            if (!this.state.selectedValue) {
                this.setState({ validationOne: true });
            } else if (!this.state.selectedValueTwo) {
                this.setState({ validation: true });
            }
        }
    }, {
        key: 'scrollable',
        value: function scrollable(e) {
            if (e.nativeEvent.offsetX > 270) {
                this.setState({ left: '270px' });
                this.setState({ angle: 90 });
            } else {
                this.setState({ left: e.nativeEvent.offsetX });
                var val = Math.floor(e.nativeEvent.offsetX / 3);
                this.setState({ angle: Math.ceil(val / 5) * 5 });
            }
        }
    }, {
        key: 'electricy',
        value: function electricy(angle) {
            this.setState({ angle: angle, selectedValue: angle + ' kWh', validationOne: false });
        }
    }, {
        key: 'openPopup',
        value: function openPopup(popup) {
            if (popup === 'one') {
                this.setState({ popup: true, modalIsOneOpen: true });
            } else if (popup === 'two') {
                this.setState({ popupTwo: true, modalIsTwoOpen: true });
            }
        }
    }, {
        key: 'openModal',
        value: function openModal() {}
    }, {
        key: 'afterOpenModal',
        value: function afterOpenModal() {}
    }, {
        key: 'closeModal',
        value: function closeModal() {
            this.setState({ modalIsOneOpen: false, modalIsTwoOpen: false });
        }
    }, {
        key: 'render',
        value: function render() {
            var style = {
                color: '#064f70',
                fontSize: '20px',
                fontFamily: 'quicksand',
                textTransform: 'uppercase',
                fontWeight: 'bold'
            };
            return _react2['default'].createElement(
                'div',
                null,
                _react2['default'].createElement(
                    'div',
                    { className: 'container ' },
                    _react2['default'].createElement(
                        'h3',
                        { className: 'roof_subhead' },
                        'Elförbrukning och säkring '
                    )
                ),
                _react2['default'].createElement(
                    'div',
                    { className: 'container panding_no material_questions_page' },
                    _react2['default'].createElement('div', { className: 'col-md-2' }),
                    _react2['default'].createElement(
                        'div',
                        { className: 'col-md-8 panding_no', id: 'padding-b' },
                        _react2['default'].createElement(
                            'div',
                            { className: 'panding_no' },
                            _react2['default'].createElement(
                                'div',
                                null,
                                _react2['default'].createElement(
                                    'div',
                                    { style: { alignItems: 'center', paddingBottom: '15px' } },
                                    _react2['default'].createElement(
                                        'div',
                                        { className: 'col-md-12 panding_no align-text-center' },
                                        _react2['default'].createElement(
                                            'h1',
                                            { style: style },
                                            this.dataSet[0].question.split('<para>')[0]
                                        )
                                    ),
                                    _react2['default'].createElement(
                                        'div',
                                        { className: 'col-md-12 align-text-center padding1' },
                                        _react2['default'].createElement(
                                            'button',
                                            { style: { border: 'none', backgroundColor: '#0A539C', 'borderRadius': '5px', color: '#fff', padding: '8px 25px 8px 25px' } },
                                            this.state.angle,
                                            ' kWh'
                                        )
                                    )
                                ),
                                _react2['default'].createElement(
                                    'div',
                                    null,
                                    _react2['default'].createElement(
                                        'div',
                                        { id: 'electriciy_draggable', className: 'col-md-12', style: { pad: '1em' } },
                                        _react2['default'].createElement(_componentsElectricityMaterialDarggable2['default'], { electricy: this.electricy })
                                    ),
                                    _react2['default'].createElement(
                                        'div',
                                        { className: 'col-md-12 col-sm-12 align-text-center slots-centering' },
                                        _react2['default'].createElement(
                                            'a',
                                            { className: 'hiperLink', style: { textDecoration: 'underline', fontFamily: 'Quicksand' }, onClick: this.openPopup.bind(this, 'one') },
                                            'Läs mer om elförbrukning'
                                        )
                                    ),
                                    this.state.popup ? _react2['default'].createElement(
                                        'div',
                                        null,
                                        _react2['default'].createElement(
                                            _reactModal2['default'],
                                            {
                                                isOpen: this.state.modalIsOneOpen,
                                                onAfterOpen: this.afterOpenModal,
                                                onRequestClose: this.closeModal,
                                                style: customStyles,
                                                contentLabel: 'Example Modal' },
                                            _react2['default'].createElement(
                                                'div',
                                                { className: 'col-md-12 panding_no' },
                                                _react2['default'].createElement(
                                                    'div',
                                                    { className: 'boka-heading' },
                                                    'ELFÖRBRUKNING'
                                                ),
                                                _react2['default'].createElement(
                                                    'div',
                                                    { className: 'f-right' },
                                                    _react2['default'].createElement(
                                                        'button',
                                                        { className: 'close-button ', onClick: this.closeModal },
                                                        'X'
                                                    )
                                                )
                                            ),
                                            _react2['default'].createElement(
                                                'div',
                                                { className: 'footer-popup questionsPage' },
                                                'Ange din totala elförbrukning i kWh genom att justera reglaget. Om du inte vet din årliga elförbrukning kan du använda våra fördefinierade värden.'
                                            ),
                                            _react2['default'].createElement(
                                                'div',
                                                { className: 'questionsPage pt-none' },
                                                _react2['default'].createElement(
                                                    'ul',
                                                    null,
                                                    _react2['default'].createElement(
                                                        'li',
                                                        null,
                                                        '6000 kWh – Normal villa med fjärrvärme'
                                                    ),
                                                    _react2['default'].createElement(
                                                        'li',
                                                        null,
                                                        '13.000 kWh – Normal villa med värmepump'
                                                    ),
                                                    _react2['default'].createElement(
                                                        'li',
                                                        null,
                                                        '25.000 kWh – Normal villa med direktverkande el'
                                                    )
                                                )
                                            ),
                                            _react2['default'].createElement(
                                                'div',
                                                { className: 'estimate ' },
                                                _react2['default'].createElement(
                                                    'button',
                                                    { className: 'submit', onClick: this.closeModal },
                                                    'stäng'
                                                )
                                            )
                                        )
                                    ) : null,
                                    _react2['default'].createElement(
                                        'div',
                                        { className: 'col-md-12 material', style: { textAlign: 'center', padding: '30px' } },
                                        this.state.validationOne ? _react2['default'].createElement(
                                            'div',
                                            { className: 'validation' },
                                            _react2['default'].createElement(
                                                'span',
                                                null,
                                                'Please select Electricity cosumption'
                                            )
                                        ) : null
                                    )
                                )
                            )
                        )
                    ),
                    _react2['default'].createElement('div', { className: 'col-sm-2' }),
                    _react2['default'].createElement(ColoredLine, { color: 'black' }),
                    _react2['default'].createElement(
                        'div',
                        { className: 'col-sm-12' },
                        _react2['default'].createElement('div', { className: 'col-sm-1' }),
                        _react2['default'].createElement(
                            'div',
                            { className: 'col-sm-10 panding_no', id: 'padding-b' },
                            _react2['default'].createElement(
                                'div',
                                { className: 'panding_no' },
                                _react2['default'].createElement(QuizAreaTwo, { handleClick: this.handleClickTwo, validation: this.state.validation, dataSet: this.dataSet[1], selected: this.state.selectedValueTwo, style: highletstyle }),
                                _react2['default'].createElement(
                                    'div',
                                    { className: 'col-md-12 col-sm-12 align-text-center' },
                                    _react2['default'].createElement(
                                        'a',
                                        { className: 'hiperLink', style: { textDecoration: 'underline', fontFamily: 'Quicksand' }, onClick: this.openPopup.bind(this, 'two') },
                                        'Läs mer om huvudsäkring'
                                    )
                                ),
                                this.state.popupTwo ? _react2['default'].createElement(
                                    'div',
                                    null,
                                    _react2['default'].createElement(
                                        _reactModal2['default'],
                                        {
                                            isOpen: this.state.modalIsTwoOpen,
                                            onAfterOpen: this.afterOpenModal,
                                            onRequestClose: this.closeModal,
                                            style: customStyles,
                                            contentLabel: 'Example Modal' },
                                        _react2['default'].createElement(
                                            'div',
                                            { className: 'col-md-12 panding_no' },
                                            _react2['default'].createElement(
                                                'div',
                                                { className: 'boka-heading' },
                                                'HUVUDSÄKRING'
                                            ),
                                            _react2['default'].createElement(
                                                'div',
                                                { className: 'f-right' },
                                                _react2['default'].createElement(
                                                    'button',
                                                    { className: 'close-button ', onClick: this.closeModal },
                                                    'X'
                                                )
                                            )
                                        ),
                                        _react2['default'].createElement(
                                            'div',
                                            { className: 'footer-popup questionsPage' },
                                            'Storleken på din huvudsäkring hittar du i ditt proppskåp på huvudströmbrytaren, automatströmbrytaren eller på din elräkning. Dom flesta radhus och villor har en huvudsäkring på 16-25 Amp.'
                                        ),
                                        _react2['default'].createElement(
                                            'div',
                                            { className: 'estimate ' },
                                            _react2['default'].createElement(
                                                'button',
                                                { className: 'submit', onClick: this.closeModal },
                                                'stäng'
                                            )
                                        )
                                    )
                                ) : null
                            )
                        ),
                        _react2['default'].createElement('div', { className: 'col-sm-1' })
                    )
                ),
                _react2['default'].createElement(
                    'div',
                    { className: 'col-md-12 estimate', style: { textAlign: 'center' } },
                    this.state.selectedValue && this.state.selectedValueTwo ? _react2['default'].createElement(
                        'div',
                        { className: 'flex justifyCenter' },
                        _react2['default'].createElement(
                            'div',
                            { className: 'padding1' },
                            _react2['default'].createElement(
                                'button',
                                { onClick: this.props.back.bind(this, 3), className: 'submit' },
                                'Föregående'
                            )
                        ),
                        _react2['default'].createElement(
                            'div',
                            { className: 'padding1' },
                            _react2['default'].createElement(
                                'button',
                                { onClick: this.props.matquestionval.bind(this, this.state.selectedValue, this.state.selectedValueTwo), className: 'submit' },
                                'Nästa'
                            )
                        )
                    ) : _react2['default'].createElement(
                        'div',
                        { className: 'flex justifyCenter' },
                        _react2['default'].createElement(
                            'div',
                            { className: 'padding1' },
                            _react2['default'].createElement(
                                'button',
                                { onClick: this.props.back.bind(this, 3), className: 'submit' },
                                'Föregående'
                            )
                        ),
                        _react2['default'].createElement(
                            'div',
                            { className: 'padding1' },
                            _react2['default'].createElement(
                                'button',
                                { onClick: this.validate, className: 'submit' },
                                'Nästa'
                            )
                        )
                    )
                )
            );
        }
    }]);

    return MaterialQuestions;
})(_react.Component);

function QuestionTwo(props) {
    var style = {
        color: '#064f70',
        fontSize: '20px',
        textTransform: 'uppercase',
        fontWeight: 'bold'
    };
    return _react2['default'].createElement(
        'div',
        null,
        _react2['default'].createElement(
            'div',
            { style: { display: 'flex', alignItems: 'center', paddingBottom: '15px', paddingTop: '2em', justifyContent: 'center' } },
            _react2['default'].createElement(
                'div',
                { className: 'col-md-12 panding_no align-text-center' },
                _react2['default'].createElement(
                    'h1',
                    { className: 'font-quicksand', style: style },
                    props.dataSet.question.split('<para>')[0]
                )
            )
        ),
        _react2['default'].createElement(
            'div',
            { className: 'col-md-12 material', style: { textAlign: 'center', padding: '30px' } },
            props.validation ? _react2['default'].createElement(
                'div',
                { className: 'validation' },
                _react2['default'].createElement(
                    'span',
                    null,
                    'Please select the Power consumption'
                )
            ) : null
        )
    );
}

function AnswerTwo(props) {
    var colors = ['#C4C4C4', '#3585C1', '#F9D155', 'rgb(158, 241, 168)', 'rgb(234, 163, 163)', '#000000', '#FFFFFF'];
    var colorCode = {
        border: '4px solid #8ee2ae',
        color: '#064f70',
        fontWeight: 'bold',
        padding: "30px 10px 30px",
        margin: "5px 5px 50px 5px",
        textAlign: "-webkit-center",
        borderRadius: "4px",
        boxShadow: "0 15px 35px rgba(50,50,93,.1), 0 5px 15px rgba(0,0,0,.07)",
        transition: "all 0.3s ease-out",
        WebkitTransform: "all 0.3s ease-out",
        minHeight: "90px",
        color: '#585858',
        background: colors[props.choice],
        textTransform: 'uppercase'
    };

    var stylestyle = {
        padding: "30px 0",
        margin: "5px 5px 50px 5px",
        border: "2px solid #f9f9f9",
        textAlign: "-webkit-center",
        borderRadius: "4px",
        boxShadow: "0 15px 35px rgba(50,50,93,.1), 0 5px 15px rgba(0,0,0,.07)",
        transition: "all 0.3s ease-out",
        WebkitTransform: "all 0.3s ease-out",
        minHeight: "90px",
        color: '#585858',
        background: colors[props.choice],
        textTransform: 'uppercase'
    };
    var appliedstyle = props.answer === props.selected ? colorCode : stylestyle;
    return _react2['default'].createElement(
        'div',
        { className: 'col-sm-4 col-md-2 panding_no', key: props.choice, onClick: props.handleClick.bind(this, props.answer) },
        props.answer === props.selected ? _react2['default'].createElement(
            'div',
            { className: 'onfocs_brdr', style: appliedstyle },
            _react2['default'].createElement(
                'h3',
                { className: 'bold' },
                props.answer
            )
        ) : _react2['default'].createElement(
            'div',
            { className: 'onfocs_brdr', style: appliedstyle },
            _react2['default'].createElement(
                'h3',
                null,
                props.answer
            )
        ),
        _react2['default'].createElement('br', null)
    );
}

function AnswerListTwo(props) {
    var answers = [];
    for (var i = 0; i < props.dataSet.answers.length; i++) {
        answers.push(_react2['default'].createElement(AnswerTwo, { key: i, choice: i, style: props.style, handleClick: props.handleClick, selected: props.selected, answer: props.dataSet.answers[i] }));
    }
    return _react2['default'].createElement(
        'div',
        { className: 'col-sm-12 col-md-12 panding_no' },
        _react2['default'].createElement(
            'div',
            { className: 'col-md-12 col-sm-12 color_cards', style: { justifyContent: 'center' } },
            answers
        )
    );
}

function QuizAreaTwo(props) {
    return _react2['default'].createElement(
        'div',
        { className: 'col-sm-12 col-md-12 panding_no' },
        _react2['default'].createElement(QuestionTwo, { dataSet: props.dataSet, validation: props.validation }),
        _react2['default'].createElement(AnswerListTwo, { dataSet: props.dataSet, style: props.style, handleClick: props.handleClick, selected: props.selected })
    );
}

exports['default'] = MaterialQuestions;
module.exports = exports['default'];

},{"./components/ElectricityMaterialDarggable":12,"react":undefined,"react-modal":88}],31:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, '__esModule', {
    value: true
});

var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; desc = parent = undefined; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _reactModal = require('react-modal');

var _reactModal2 = _interopRequireDefault(_reactModal);

var matstyle = {
    padding: "20px",
    margin: "5px 5px 50px 5px",
    border: "4px solid #f9f9f9",
    textAlign: "-webkit-center",
    borderRadius: "4px",
    boxShadow: "0 15px 35px rgba(50,50,93,.1), 0 5px 15px rgba(0,0,0,.07)",
    transition: "all 0.3s ease-out",
    WebkitTransform: "all 0.3s ease-out",
    textTransform: "uppercase",
    color: '#064f70',
    fontSize: '16px',
    minHeight: '240px'
};

var selectedStyle = {
    padding: "20px",
    margin: "5px 5px 50px 5px",
    textAlign: "-webkit-center",
    borderRadius: "4px",
    boxShadow: "0 15px 35px rgba(50,50,93,.1), 0 5px 15px rgba(0,0,0,.07)",
    transition: "all 0.3s ease-out",
    WebkitTransform: "all 0.3s ease-out",
    border: "4px solid rgb(142, 226, 174)",
    textTransform: "uppercase",
    color: '#064f70',
    fontWeight: 'bold',
    fontSize: '16px',
    minHeight: '240px'
};

var customStyles = {
    content: {
        top: '50%',
        left: '50%',
        position: ' absolute',
        right: 'auto',
        bottom: 'auto',
        marginRight: '-50%',
        transform: 'translate(-50%, -50%)',
        padding: '10px 15px 23px',
        fontSize: '16px',
        border: "4px solid rgb(142, 226, 174)",
        borderRadius: '20px',
        width: '50%',
        background: '#ffffff'
    }
};
var _annualOutput = undefined,
    installedPower = undefined,
    solarRadiation = 0.9,
    powerLoss = 0.9,
    reducedPower = 0.9,
    Standardpacket = undefined,
    maxPacket = undefined,
    minPacket = undefined,
    capacity = undefined,
    totalInstalledPowerInkw = undefined;

var PanelComponent = (function (_Component) {
    _inherits(PanelComponent, _Component);

    function PanelComponent(props) {
        _classCallCheck(this, PanelComponent);

        _get(Object.getPrototypeOf(PanelComponent.prototype), 'constructor', this).call(this, props);
        this.state = {
            panel: '',
            validationOne: false,
            panel_cost: '',
            battery_cost: '',
            battery: '',
            value: 12,
            message: null,
            panelCount: [],
            packetName: '',
            packetsCount: 0,
            validationThree: false,
            popup: false,
            modalIsOpen: false,
            customPacket: "Ange antal paneler",
            selectedPacket: 'Custom paket',
            panelarrayUpdate: false,
            modalForPanelIsOpen: false,
            panelPopup: false,
            batteryPopup: false,
            annualOutput: 0,
            maximumPackets: 0,
            panelCountValidation: false,
            minimumPackets: 0,
            soltakPanels: [],
            soltakCustomPaket: 'Specify the area of soloar roof'
        };
        window.scrollTo(0, 0);
        this.modalpopup = this.modalpopup.bind(this);
        _reactModal2['default'].setAppElement('body');
        this.openModal = this.openModal.bind(this);
        this.afterOpenModal = this.afterOpenModal.bind(this);
        this.closeModal = this.closeModal.bind(this);
        this.validate = this.validate.bind(this);
        this.selectedCount = this.selectedCount.bind(this);
        this.panelTypesChange = this.panelTypesChange.bind(this);
        this.countOfpanels = this.countOfpanels.bind(this);
        this.increment = this.increment.bind(this);
        this.decrement = this.decrement.bind(this);
        this.closePanelModal = this.closePanelModal.bind(this);
        this.openPanelPopup = this.openPanelPopup.bind(this);
        this.closeBatteryModal = this.closeBatteryModal.bind(this);
        this.openBatteryPopup = this.openBatteryPopup.bind(this);
        this.closePacketModal = this.closePacketModal.bind(this);
        this.openPacketPopup = this.openPacketPopup.bind(this);
        this.annualOutput = this.annualOutput.bind(this);
        this.calculateRoofArea = this.calculateRoofArea.bind(this);

        this.panels = [{
            image: "./img/premium_panel2.jpg",
            name: "Premium",
            cost: 1180
        }, {
            image: "./img/Standard_Panel2.jpg",
            name: "Standard",
            cost: 1400
        }];
        this.soltakPanels = [{
            image: "./img/Standard_Panel2.jpg",
            name: "Midsommar soltak",
            cost: 1600
        }, {
            image: "./img/Standard_Panel2.jpg",
            name: "Bendars sunwave palema",
            cost: 1800
        }];
        this.batteries = [{
            image: "./img/premium-battery.png",
            name: "Premium",
            cost: 300
        }, {
            image: "./img/no_battery.png",
            name: "Inga",
            cost: 220
        }];
        function degrees_to_radians(degrees) {
            var pi = Math.PI;
            return degrees * (pi / 180);
        }
        var roofArea = parseInt(this.props.roofarea) / Math.cos(degrees_to_radians(parseInt(this.props.roof_pitch)));
        this.soltakPanelsArray = [{ packet: 'Small paket', count: 25 }, { packet: 'Standard paket', count: 50 }, { packet: 'Max paket', count: 99 }, { packet: 'Custom paket', count: 'Specify the area of solar roof' }];
        if (roofArea > 400) {
            this.panelsArray = [];
            Standardpacket = 100;
            minPacket = 12;
            this.panelsArray = [{ packet: 'Small paket', count: parseInt(minPacket) }, { packet: 'Standard paket', count: parseInt(Standardpacket) }, { packet: this.state.selectedPacket, count: this.state.customPacket }];
            this.state.maximumPackets = parseInt(Standardpacket);
            this.state.minimumPackets = parseInt(minPacket);
        } else if (roofArea < 400 && roofArea > 200) {
            this.panelsArray = [];
            maxPacket = 100;
            Standardpacket = parseInt(roofArea / 4);
            minPacket = 12;
            this.panelsArray = [{ packet: 'Small paket', count: parseInt(minPacket) }, { packet: 'Standard paket', count: parseInt(Standardpacket) }, { packet: 'Max paket', count: parseInt(maxPacket) }, { packet: this.state.selectedPacket, count: this.state.customPacket }];
            this.state.maximumPackets = parseInt(maxPacket);
            this.state.minimumPackets = parseInt(minPacket);
        } else if (roofArea < 200 && roofArea > 36) {
            this.panelsArray = [];
            maxPacket = parseInt(roofArea / 2);
            Standardpacket = 1 / 2 * maxPacket;
            minPacket = 12;
            this.panelsArray = [{ packet: 'Small paket', count: parseInt(minPacket) }, { packet: 'Standard paket', count: parseInt(Standardpacket) }, { packet: 'Max paket', count: parseInt(maxPacket) }, { packet: this.state.selectedPacket, count: this.state.customPacket }];
            this.state.maximumPackets = parseInt(maxPacket);
            this.state.minimumPackets = parseInt(minPacket);
        } else if (roofArea < 36 && roofArea > 26) {
            this.panelsArray = [];
            Standardpacket = parseInt(roofArea / 2);
            minPacket = 12;
            this.panelsArray = [{ packet: 'Small paket', count: parseInt(minPacket) }, { packet: 'Standard paket', count: parseInt(Standardpacket) }, { packet: this.state.selectedPacket, count: this.state.customPacket }];
            this.state.maximumPackets = parseInt(Standardpacket);
            this.state.minimumPackets = parseInt(minPacket);
        } else if (roofArea < 26) {
            this.panelsArray = [];
            Standardpacket = 12;
            this.panelsArray = [{ packet: 'Standard paket', count: parseInt(Standardpacket) }, { packet: this.state.selectedPacket, count: this.state.customPacket }];
            this.state.maximumPackets = parseInt(Standardpacket);
            this.state.minimumPackets = parseInt(Standardpacket);
        }
    }

    _createClass(PanelComponent, [{
        key: 'componentDidMount',
        value: function componentDidMount() {}
    }, {
        key: 'annualOutput',
        value: function annualOutput(watts, packet, countOfPanels) {
            var primarySideAnualOutput,
                secondarySideAnnualOutput,
                installedPowerOnPrimarySide,
                installedPowerOnSecondarySide,
                primarySideRadiation,
                secondarySideRadiation,
                primarySidePanels = 0,
                secondarySidePanels = 0;
            if (this.props.surfaceDirection == 'VÄST 1' || this.props.surfaceDirection == 'OST 2') {
                //west east
                primarySideRadiation = 0.84;
                secondarySideRadiation = 0.76;
            } else if (this.props.surfaceDirection == 'VÄST 2' || this.props.surfaceDirection == 'OST 1') {
                //west east
                primarySideRadiation = 0.88;
                secondarySideRadiation = 0.72;
            } else if (this.props.surfaceDirection == 'SYDVÄST 1') {
                //southwest
                primarySideRadiation = 0.92;
                secondarySideRadiation = 0.68;
            } else if (this.props.surfaceDirection == 'SYDVÄST') {
                //southwest
                primarySideRadiation = 0.96;
                secondarySideRadiation = 0.64;
            } else if (this.props.surfaceDirection == 'SYD 1' || this.props.surfaceDirection == 'SYD 2') {
                //south
                primarySideRadiation = 1;
                secondarySideRadiation = 0.60;
            } else if (this.props.surfaceDirection == 'SYDOST 1') {
                //southeast
                primarySideRadiation = 0.92;
                secondarySideRadiation = 0.64;
            } else if (this.props.surfaceDirection == 'SYDOST 2') {
                //southeast
                primarySideRadiation = 0.92;
                secondarySideRadiation = 0.68;
            } else if (this.props.surfaceDirection == 'OST 1') {
                //east
                primarySideRadiation = 0.84;
                secondarySideRadiation = 0.72;
            }
            if (this.props.location.includes('Stockholm')) {
                solarRadiation = 1000;
            } else if (this.props.location.includes('Västerbotten')) {
                solarRadiation = 825;
            } else if (this.props.location.includes('Norrbotten')) {
                solarRadiation = 775;
            } else if (this.props.location.includes('Uppsala')) {
                solarRadiation = 95;
            } else if (this.props.location.includes('Södermanland')) {
                solarRadiation = 85;
            } else if (this.props.location.includes('Östergötland')) {
                solarRadiation = 975;
            } else if (this.props.location.includes('Jönköping')) {
                solarRadiation = 925;
            } else if (this.props.location.includes('Kronoberg')) {
                solarRadiation = 925;
            } else if (this.props.location.includes('Kalmar')) {
                solarRadiation = 950;
            } else if (this.props.location.includes('Gotland')) {
                solarRadiation = 1025;
            } else if (this.props.location.includes('Blekinge')) {
                solarRadiation = 975;
            } else if (this.props.location.includes('Skåne')) {
                solarRadiation = 1000;
            } else if (this.props.location.includes('Halland')) {
                solarRadiation = 1000;
            } else if (this.props.location.includes('Västra Götaland')) {
                solarRadiation = 950;
            } else if (this.props.location.includes('Värmland')) {
                solarRadiation = 950;
            } else if (this.props.location.includes('Örebro')) {
                solarRadiation = 950;
            } else if (this.props.location.includes('Västmanland')) {
                solarRadiation = 975;
            } else if (this.props.location.includes('Dalarna')) {
                solarRadiation = 950;
            } else if (this.props.location.includes('Gävleborgd')) {
                solarRadiation = 950;
            } else if (this.props.location.includes('Västernorrland')) {
                solarRadiation = 900;
            } else if (this.props.location.includes('Jämtland')) {
                solarRadiation = 900;
            } else {
                solarRadiation = 900;
            }
            if (packet) {
                if (this.state.panelName == 'soltak') {
                    var packetValuesObject = this.soltakPanelsArray.filter(function (packetObj) {
                        return packetObj.packet === packet;
                    });
                } else if (this.state.panelName == 'solpanel') {
                    var packetValuesObject = this.panelsArray.filter(function (packetObj) {
                        return packetObj.packet === packet;
                    });
                }
                sessionStorage.setItem('selected_panel', this.state.panelName);
                totalInstalledPowerInkw = countOfPanels * watts / 1000;
                if (packetValuesObject[0].packet == 'Small paket' || packetValuesObject[0].packet == 'Standard paket') {
                    primarySidePanels = countOfPanels;
                } else if (packetValuesObject[0].packet == 'Max paket') {
                    primarySidePanels = countOfPanels / 2;
                    secondarySidePanels = countOfPanels / 2;
                } else if (packetValuesObject[0].packet == 'Custom paket') {
                    if (countOfPanels > this.panelsArray[1].count) {
                        primarySidePanels = this.panelsArray[1].count;
                        secondarySidePanels = countOfPanels - this.panelsArray[1].count;
                    } else if (countOfPanels == this.panelsArray[1].count || countOfPanels < this.panelsArray[1].count) {
                        primarySidePanels = countOfPanels;
                    }
                }
                installedPowerOnPrimarySide = primarySidePanels * watts;
                installedPowerOnSecondarySide = secondarySidePanels * watts;
                primarySideAnualOutput = installedPowerOnPrimarySide * primarySideRadiation * solarRadiation * powerLoss * reducedPower;
                secondarySideAnnualOutput = installedPowerOnSecondarySide * secondarySideRadiation * solarRadiation * powerLoss * reducedPower;
                _annualOutput = (primarySideAnualOutput + secondarySideAnnualOutput) / 1000;
                this.setState({
                    annualOutput: _annualOutput
                });
            } else {
                this.setState({
                    annualOutput: 0
                });
            }
        }
    }, {
        key: 'openModal',
        value: function openModal() {}
    }, {
        key: 'afterOpenModal',
        value: function afterOpenModal() {}
    }, {
        key: 'closeModal',
        value: function closeModal() {
            this.setState({ modalIsOpen: false });
        }
    }, {
        key: 'modalpopup',
        value: function modalpopup() {
            this.setState({ popup: true, modalIsOpen: true });
        }
    }, {
        key: 'selectedPanel',
        value: function selectedPanel(panel, cost, panelName) {

            if (panel === 'Standard') {
                capacity = 270;
            } else if (panel === 'Premium') {
                capacity = 320;
            } else if (panel === 'Midsommar soltak') {
                capacity = 110;
            } else if (panel === 'Bendars sunwave palema') {
                capacity = 105;
            }
            this.setState({
                panel: panel,
                panel_cost: cost,
                validationOne: false,
                panelName: panelName
            });
            //panelCount: panelsArray
            sessionStorage.setItem('panel_cost', cost);
            sessionStorage.setItem('pannel_name', panel);
            sessionStorage.setItem('pannel_capacity', capacity);
            sessionStorage.setItem('pannelName', panelName);
            this.annualOutput(capacity, this.state.packetName, this.state.packetsCount);
        }
    }, {
        key: 'selectedBattery',
        value: function selectedBattery(battery, cost) {
            this.setState({
                battery: battery,
                battery_cost: cost,
                validationTwo: false
            });
        }
    }, {
        key: 'selectedCount',
        value: function selectedCount(name, count) {
            if (name == 'Custom paket' || name == 'Selected Paket') {
                this.setState({ popup: true, modalIsOpen: true, packetName: name });
            } else if (name == 'Specify the area of solar roof') {
                this.setState({ popup: true, modalIsOpen: true, packetName: name });
            } else if (name === '') {
                this.setState({
                    packetName: 'Custom paket',
                    selectedPacket: 'Custom paket',
                    packetsCount: count,
                    validationThree: false,
                    value: count,
                    customPacket: parseInt(this.state.value),
                    panelarrayUpdate: true,
                    modalIsOpen: false,
                    packetPopup: true,
                    value: this.state.value
                });
                this.annualOutput(capacity, 'Custom paket', count);
            } else {
                this.setState({
                    packetName: name,
                    packetsCount: count,
                    validationThree: false,
                    panelarrayUpdate: true,
                    customPacket: "Ange antal paneler",
                    packetPopup: true,
                    soltakCustomPaket: 'Specify the area of solar roof'
                });
                this.annualOutput(capacity, name, count);
            }
            this.calculateRoofArea(name, this.roofArea);
        }
    }, {
        key: 'calculateRoofArea',
        value: function calculateRoofArea(name, roofArea) {
            var smallRoofArea = 0;
            var normalRoofArea = 0;
            function degrees_to_radians(degrees) {
                var pi = Math.PI;
                return degrees * (pi / 180);
            }
            if (name === 'Small paket') {
                var roofArea = parseInt(this.props.roofarea) / Math.cos(degrees_to_radians(parseInt(this.props.roof_pitch)));
                smallRoofArea = roofArea * 25 / 100;
                normalRoofArea = roofArea * 75 / 100;
            }
            if (name === 'Standard paket') {
                var roofArea = parseInt(this.props.roofarea) / Math.cos(degrees_to_radians(parseInt(this.props.roof_pitch)));
                smallRoofArea = roofArea * 50 / 100;
                normalRoofArea = roofArea * 50 / 100;
            }
            if (name === 'Max paket') {
                var roofArea = parseInt(this.props.roofarea) / Math.cos(degrees_to_radians(parseInt(this.props.roof_pitch)));
                smallRoofArea = roofArea * 100 / 100;
                normalRoofArea = roofArea;
            }

            sessionStorage.setItem('roofAreaPkt', JSON.stringify({
                smallRoofArea: smallRoofArea,
                normalRoofArea: normalRoofArea
            }));
        }
    }, {
        key: 'componentWillUpdate',
        value: function componentWillUpdate(state, prop) {
            var _self = this;
            setTimeout(changeUpdate(prop), 2000);
            function changeUpdate(props) {
                if (props.panelarrayUpdate) {
                    var degrees_to_radians = function degrees_to_radians(degrees) {
                        var pi = Math.PI;
                        return degrees * (pi / 180);
                    };

                    _self.setState({ panelarrayUpdate: false });

                    var roofArea = parseInt(_self.props.roofarea) / Math.cos(degrees_to_radians(parseInt(_self.props.roof_pitch)));
                    if (roofArea > 400) {
                        _self.panelsArray = [];
                        Standardpacket = 100;
                        minPacket = 12;
                        _self.panelsArray = [{ packet: 'Small paket', count: parseInt(minPacket) }, { packet: 'Standard paket', count: parseInt(Standardpacket) }, { packet: props.selectedPacket, count: props.customPacket }];
                        _self.setState({ maximumPackets: Standardpacket, minimumPackets: minPacket });
                    } else if (roofArea < 400 && roofArea > 200) {
                        _self.panelsArray = [];
                        Standardpacket = parseInt(roofArea / 4);
                        minPacket = 12;
                        maxPacket = 100;
                        _self.panelsArray = [{ packet: 'Small paket', count: parseInt(minPacket) }, { packet: 'Standard paket', count: parseInt(Standardpacket) }, { packet: 'Max paket', count: parseInt(maxPacket) }, { packet: props.selectedPacket, count: props.customPacket }];
                        _self.setState({ maximumPackets: maxPacket, minimumPackets: minPacket });
                    } else if (roofArea < 200 && roofArea > 36) {
                        _self.panelsArray = [];
                        maxPacket = parseInt(roofArea / 2);
                        Standardpacket = 1 / 2 * maxPacket;
                        minPacket = 12;
                        _self.panelsArray = [{ packet: 'Small paket', count: parseInt(minPacket) }, { packet: 'Standard paket', count: parseInt(Standardpacket) }, { packet: 'Max paket', count: parseInt(maxPacket) }, { packet: props.selectedPacket, count: props.customPacket }];
                        _self.setState({ maximumPackets: maxPacket, minimumPackets: minPacket });
                    } else if (roofArea < 36 && roofArea > 26) {
                        _self.panelsArray = [];
                        Standardpacket = parseInt(roofArea / 2);
                        minPacket = 12;
                        _self.panelsArray = [{ packet: 'Small paket', count: parseInt(minPacket) }, { packet: 'Standard paket', count: parseInt(Standardpacket) }, { packet: props.selectedPacket, count: props.customPacket }];
                        _self.setState({ maximumPackets: Standardpacket, minimumPackets: minPacket });
                    } else if (roofArea < 26) {
                        _self.panelsArray = [];
                        Standardpacket = 12;
                        _self.panelsArray = [{ packet: 'Standard paket', count: parseInt(Standardpacket) }, { packet: props.selectedPacket, count: props.customPacket }];
                        _self.setState({ maximumPackets: Standardpacket, minimumPackets: 12 });
                    }
                }
                sessionStorage.setItem('panel_max_pkt', _self.state.maximumPackets);
            }
        }
    }, {
        key: 'validate',
        value: function validate() {
            if (this.state.panel === '') {
                this.setState({ validationOne: true });
            } else if (this.state.battery === '') {
                this.setState({ validationTwo: true });
            } else if (this.state.packetsCount === '') {
                this.setState({ validationThree: true });
            }
        }
    }, {
        key: 'panelTypesChange',
        value: function panelTypesChange(panel, battery, value) {
            sessionStorage.removeItem('panel');
            sessionStorage.removeItem('battery');
            sessionStorage.removeItem('panelsCount');
            sessionStorage.setItem('panel', panel);
            sessionStorage.setItem('battery', battery);
            sessionStorage.setItem('panelsCount', value);
        }
    }, {
        key: 'countOfpanels',
        value: function countOfpanels(e) {
            if (this.state.minimumPackets <= e.target.value && e.target.value <= this.state.maximumPackets) {
                this.setState({
                    value: e.target.value,
                    selectedPacket: 'Custom paket',
                    packetName: 'Custom paket',
                    panelCountValidation: false
                });
            } else {
                this.setState({
                    value: e.target.value,
                    panelCountValidation: true
                });
            }
        }
    }, {
        key: 'increment',
        value: function increment() {
            if (this.state.value <= this.state.maximumPackets - 1) {
                this.setState({
                    value: parseInt(this.state.value) + 1,
                    panelCountValidation: false
                });
            } else {
                this.setState({ panelCountValidation: true });
            }
        }
    }, {
        key: 'decrement',
        value: function decrement() {
            if (this.state.value >= this.state.minimumPackets + 1) {
                this.setState({
                    value: parseInt(this.state.value) - 1,
                    panelCountValidation: false
                });
            } else {
                this.setState({ panelCountValidation: true });
            }
        }
    }, {
        key: 'openPanelPopup',
        value: function openPanelPopup() {
            this.setState({ modalForPanelIsOpen: true, panelPopup: true });
        }
    }, {
        key: 'closePanelModal',
        value: function closePanelModal() {
            this.setState({ modalForPanelIsOpen: false, panelPopup: false });
        }
    }, {
        key: 'openBatteryPopup',
        value: function openBatteryPopup() {
            this.setState({ modalForBatteryIsOpen: true, batteryPopup: true });
        }
    }, {
        key: 'closeBatteryModal',
        value: function closeBatteryModal() {
            this.setState({ modalForBatteryIsOpen: false, batteryPopup: false });
        }
    }, {
        key: 'closePacketModal',
        value: function closePacketModal() {
            this.setState({ modalForPacketIsOpen: false, packetPopup: false });
        }
    }, {
        key: 'openPacketPopup',
        value: function openPacketPopup() {
            this.setState({ modalForPacketIsOpen: true, packetPopup: true });
        }
    }, {
        key: 'render',
        value: function render() {
            var _this = this;

            return _react2['default'].createElement(
                'div',
                null,
                _react2['default'].createElement(
                    'div',
                    { className: '' },
                    _react2['default'].createElement(
                        'h3',
                        { className: 'roof_subhead' },
                        'Välj produkt'
                    )
                ),
                _react2['default'].createElement(
                    'div',
                    { className: '' },
                    _react2['default'].createElement(
                        'div',
                        { className: 'seperation-line' },
                        _react2['default'].createElement(
                            'div',
                            { className: 'container' },
                            _react2['default'].createElement(
                                'div',
                                { className: 'col-md-12 heading_text font-quicksand bold' },
                                'Välj Solpaneler'
                            ),
                            _react2['default'].createElement(
                                'div',
                                { className: 'col-sm-12 col-sm-offset-3 material', style: { textAlign: 'center', padding: '30px', margin: '0px auto' } },
                                this.state.validationOne ? _react2['default'].createElement(
                                    'div',
                                    { className: 'validation', style: { margin: '0px auto' } },
                                    _react2['default'].createElement(
                                        'span',
                                        null,
                                        'Please select the Panel type'
                                    )
                                ) : null
                            ),
                            _react2['default'].createElement('div', { className: 'col-md-1' }),
                            _react2['default'].createElement(
                                'div',
                                { className: 'col-md-12 col-sm-12 align-text-center' },
                                _react2['default'].createElement(
                                    'div',
                                    { className: 'col-sm-6 col-md-6', id: 'panel-types' },
                                    this.panels.map(function (data, index) {
                                        return _react2['default'].createElement(
                                            'div',
                                            { className: 'col-sm-6 col-md-6', key: index, onClick: _this.selectedPanel.bind(_this, data.name, data.cost, 'solpanel') },
                                            _react2['default'].createElement(
                                                'div',
                                                { className: 'onfocs_brdr b-white', style: data.name == _this.state.panel ? selectedStyle : matstyle },
                                                _react2['default'].createElement('img', { src: data.image, alt: data.name, className: 'img-responsive' }),
                                                _react2['default'].createElement('br', null),
                                                _react2['default'].createElement(
                                                    'p',
                                                    { className: 'm-top9 panel-font' },
                                                    data.name,
                                                    ' panel'
                                                )
                                            )
                                        );
                                    })
                                ),
                                _react2['default'].createElement(
                                    'div',
                                    { className: 'col-sm-6 col-md-6', id: 'panel-types' },
                                    this.soltakPanels.map(function (data, index) {
                                        return _react2['default'].createElement(
                                            'div',
                                            { className: 'col-sm-6 col-md-6', key: index, onClick: _this.selectedPanel.bind(_this, data.name, data.cost, 'soltak') },
                                            _react2['default'].createElement(
                                                'div',
                                                { className: 'onfocs_brdr b-white', style: data.name == _this.state.panel ? selectedStyle : matstyle },
                                                _react2['default'].createElement('img', { src: data.image, alt: data.name, className: 'img-responsive' }),
                                                _react2['default'].createElement('br', null),
                                                _react2['default'].createElement(
                                                    'p',
                                                    { className: 'm-top9 panel-font' },
                                                    data.name,
                                                    ' panel'
                                                )
                                            )
                                        );
                                    })
                                )
                            ),
                            _react2['default'].createElement(
                                'div',
                                { className: 'col-md-12 col-sm-12 align-text-center' },
                                _react2['default'].createElement(
                                    'a',
                                    { className: 'hiperLink', onClick: this.openPanelPopup.bind(this) },
                                    'Läs mer om solpanel'
                                ),
                                this.state.panelPopup ? _react2['default'].createElement(
                                    'div',
                                    null,
                                    _react2['default'].createElement(
                                        _reactModal2['default'],
                                        {
                                            isOpen: this.state.modalForPanelIsOpen,
                                            onAfterOpen: this.afterOpenModal,
                                            onRequestClose: this.closePanelModal,
                                            style: customStyles,
                                            className: 'panel-modal',
                                            contentLabel: 'Example Modal' },
                                        _react2['default'].createElement(
                                            'div',
                                            { className: 'col-md-12 panding_no' },
                                            _react2['default'].createElement(
                                                'div',
                                                { className: 'boka-heading' },
                                                'Solpaneler'
                                            ),
                                            _react2['default'].createElement(
                                                'div',
                                                { className: 'f-right' },
                                                _react2['default'].createElement(
                                                    'button',
                                                    { className: 'close-button ', onClick: this.closePanelModal },
                                                    'X'
                                                )
                                            )
                                        ),
                                        _react2['default'].createElement(
                                            'div',
                                            { className: 'col-md-12 questionsPage padding-bottom-none' },
                                            _react2['default'].createElement(
                                                'div',
                                                { className: 'heading list-head' },
                                                'STANDARD SOLPANEL'
                                            ),
                                            _react2['default'].createElement(
                                                'div',
                                                { className: 'p-10' },
                                                _react2['default'].createElement(
                                                    'ul',
                                                    { className: 'panels-list' },
                                                    _react2['default'].createElement(
                                                        'li',
                                                        null,
                                                        ' - 275 kWh '
                                                    ),
                                                    _react2['default'].createElement(
                                                        'li',
                                                        null,
                                                        ' - Panel ipolykristallin'
                                                    ),
                                                    _react2['default'].createElement(
                                                        'li',
                                                        null,
                                                        ' - Passarbästförstorainstallationerpåexempelvisföretag, solcellsparkerochmarkanläggningar'
                                                    )
                                                )
                                            )
                                        ),
                                        _react2['default'].createElement(
                                            'div',
                                            { className: 'col-md-12 questionsPage padding-top-none' },
                                            _react2['default'].createElement(
                                                'div',
                                                { className: 'heading list-head' },
                                                'PREMIUM SOLPANEL'
                                            ),
                                            _react2['default'].createElement(
                                                'div',
                                                { className: 'p-10' },
                                                _react2['default'].createElement(
                                                    'ul',
                                                    { className: 'panels-list' },
                                                    _react2['default'].createElement(
                                                        'li',
                                                        null,
                                                        ' - 320 kWh '
                                                    ),
                                                    _react2['default'].createElement(
                                                        'li',
                                                        null,
                                                        ' - Panel imonokristallin'
                                                    ),
                                                    _react2['default'].createElement(
                                                        'li',
                                                        null,
                                                        ' - Passarbästförvillordå den svartskimrandefärgenoftastärmeruppskattadänstandardpanelen'
                                                    ),
                                                    _react2['default'].createElement(
                                                        'li',
                                                        null,
                                                        ' - Högreeffekt per panel görpanelenlämpligförmindretak'
                                                    )
                                                )
                                            )
                                        ),
                                        _react2['default'].createElement(
                                            'div',
                                            { className: 'estimate col-md-12 align-text-center' },
                                            _react2['default'].createElement(
                                                'button',
                                                { className: 'submit float-none', onClick: this.closePanelModal },
                                                'stäng'
                                            )
                                        )
                                    )
                                ) : null
                            )
                        )
                    ),
                    _react2['default'].createElement(
                        'div',
                        { className: 'col-sm-12 ' },
                        _react2['default'].createElement(
                            'div',
                            { className: 'container' },
                            _react2['default'].createElement(
                                'div',
                                { className: 'col-md-12 heading_text font-quicksand bold' },
                                'välj antal solpaneler'
                            ),
                            _react2['default'].createElement(
                                'div',
                                { className: '' },
                                _react2['default'].createElement(
                                    'div',
                                    { className: 'col-sm-12 material', style: { textAlign: 'center', padding: '30px', margin: '0px auto' } },
                                    this.state.validationThree ? _react2['default'].createElement(
                                        'div',
                                        { className: 'validation', style: { margin: '0px auto' } },
                                        _react2['default'].createElement(
                                            'span',
                                            null,
                                            'Please select the packet type'
                                        )
                                    ) : null
                                ),
                                _react2['default'].createElement('div', { className: 'col-md-1' }),
                                _react2['default'].createElement(
                                    'div',
                                    { className: 'col-sm-12 col-md-10', id: 'panels-count' },
                                    this.state.popup ? _react2['default'].createElement(
                                        'div',
                                        null,
                                        _react2['default'].createElement(
                                            _reactModal2['default'],
                                            {
                                                isOpen: this.state.modalIsOpen,
                                                onAfterOpen: this.afterOpenModal,
                                                onRequestClose: this.closeModal,
                                                style: customStyles,
                                                className: 'panel-modal',
                                                contentLabel: 'Specify packet' },
                                            _react2['default'].createElement(
                                                'div',
                                                { className: 'col-md-12 panding_no' },
                                                _react2['default'].createElement(
                                                    'div',
                                                    { className: 'boka-heading' },
                                                    'Ange antal paneler'
                                                ),
                                                _react2['default'].createElement(
                                                    'div',
                                                    { className: 'f-right' },
                                                    _react2['default'].createElement(
                                                        'button',
                                                        { className: 'close-button', onClick: this.closeModal },
                                                        'X'
                                                    )
                                                )
                                            ),
                                            _react2['default'].createElement(
                                                'form',
                                                null,
                                                this.state.panelCountValidation ? _react2['default'].createElement(
                                                    'div',
                                                    { className: 'col-md-12 panels-valid-head' },
                                                    _react2['default'].createElement(
                                                        'div',
                                                        { className: 'panels-count-validation' },
                                                        'Panels range is ',
                                                        this.state.maximumPackets,
                                                        ' - ',
                                                        this.state.minimumPackets
                                                    )
                                                ) : null,
                                                _react2['default'].createElement(
                                                    'div',
                                                    { className: 'col-md-12 align-text-center slots-centering ' },
                                                    _react2['default'].createElement(
                                                        'div',
                                                        { className: 'move-left' },
                                                        _react2['default'].createElement(
                                                            'div',
                                                            { onClick: this.increment.bind(this) },
                                                            _react2['default'].createElement('img', { src: './img/caret-symbol.png', alt: 'increment' })
                                                        )
                                                    ),
                                                    _react2['default'].createElement(
                                                        'div',
                                                        null,
                                                        _react2['default'].createElement('input', { id: 'counter', value: this.state.value, onChange: this.countOfpanels })
                                                    ),
                                                    _react2['default'].createElement(
                                                        'div',
                                                        { className: 'move-left' },
                                                        _react2['default'].createElement(
                                                            'div',
                                                            { onClick: this.decrement.bind(this) },
                                                            _react2['default'].createElement('img', { src: './img/down-arrow.png', alt: 'decrement' }),
                                                            ' '
                                                        )
                                                    )
                                                ),
                                                _react2['default'].createElement(
                                                    'div',
                                                    { className: 'col-md-12 booking-buttons align-text-center' },
                                                    _react2['default'].createElement(
                                                        'button',
                                                        { className: 'submit', onClick: this.closeModal },
                                                        'Avbryt'
                                                    ),
                                                    _react2['default'].createElement(
                                                        'button',
                                                        { className: 'submit', disabled: this.state.panelCountValidation, onClick: this.selectedCount.bind(this, '', this.state.value) },
                                                        'Ok'
                                                    )
                                                )
                                            )
                                        )
                                    ) : null,
                                    this.state.panelName === 'solpanel' || this.state.panelName == undefined ? this.panelsArray.map(function (data, index) {
                                        return _react2['default'].createElement(
                                            'div',
                                            { className: 'col-sm-6 col-md-3 panding_no', key: index, onClick: _this.selectedCount.bind(_this, data.packet, data.count) },
                                            _react2['default'].createElement(
                                                'div',
                                                { className: 'onfocs_brdr1 b-white solar-panel', style: data.packet == _this.state.packetName ? selectedStyle : matstyle },
                                                data.packet === "Custom paket" && _this.state.customPacket == "Ange antal paneler" ? _react2['default'].createElement(
                                                    'div',
                                                    { className: 'f21 text-capital specify-card' },
                                                    data.count
                                                ) : _react2['default'].createElement(
                                                    'div',
                                                    { className: 'packets-font' },
                                                    data.count
                                                ),
                                                _react2['default'].createElement('br', null),
                                                _react2['default'].createElement('br', null),
                                                _react2['default'].createElement(
                                                    'p',
                                                    { className: 'm-top9' },
                                                    data.packet
                                                )
                                            )
                                        );
                                    }) : null,
                                    this.state.panelName === 'soltak' && this.state.panelName !== undefined ? this.soltakPanelsArray.map(function (data, index) {
                                        return _react2['default'].createElement(
                                            'div',
                                            { className: 'col-sm-6 col-md-3 panding_no', key: index, onClick: _this.selectedCount.bind(_this, data.packet, data.count, "Specify the area of solar roof") },
                                            _react2['default'].createElement(
                                                'div',
                                                { className: 'onfocs_brdr1 b-white solar-panel', style: data.packet == _this.state.packetName ? selectedStyle : matstyle },
                                                data.packet === "Custom paket" && _this.state.soltakCustomPaket == "Specify the area of solar roof" ? _react2['default'].createElement(
                                                    'div',
                                                    { className: 'f21 text-capital specify-card' },
                                                    data.count
                                                ) : _react2['default'].createElement(
                                                    'div',
                                                    { className: 'packets-font' },
                                                    data.count
                                                ),
                                                _react2['default'].createElement('br', null),
                                                _react2['default'].createElement('br', null),
                                                _react2['default'].createElement(
                                                    'p',
                                                    { className: 'm-top9' },
                                                    data.packet
                                                )
                                            )
                                        );
                                    }) : null
                                ),
                                _react2['default'].createElement(
                                    'div',
                                    { className: 'col-md-12 col-sm-12 align-text-center' },
                                    this.state.packetPopup && this.state.panel && this.state.panelName == 'solpanel' ? _react2['default'].createElement(
                                        'div',
                                        null,
                                        _react2['default'].createElement('div', { className: 'col-md-1' }),
                                        _react2['default'].createElement(
                                            'div',
                                            { className: 'col-md-10 col-sm-12 panding_no panel-count-info-border' },
                                            _react2['default'].createElement(
                                                'div',
                                                { className: 'col-sm-6 col-md-4 panding_no' },
                                                _react2['default'].createElement(
                                                    'div',
                                                    { className: 'list-head' },
                                                    _react2['default'].createElement(
                                                        'p',
                                                        { className: 'panel-count-info' },
                                                        'MAX ANTAL SOLARPANELER',
                                                        _react2['default'].createElement('br', null),
                                                        '(Takyta har plats for)'
                                                    ),
                                                    _react2['default'].createElement(
                                                        'div',
                                                        { className: 'panel-values-info' },
                                                        this.state.maximumPackets
                                                    )
                                                )
                                            ),
                                            _react2['default'].createElement(
                                                'div',
                                                { className: 'col-sm-6 col-md-4 panding_no' },
                                                _react2['default'].createElement(
                                                    'div',
                                                    { className: 'list-head' },
                                                    _react2['default'].createElement(
                                                        'p',
                                                        { className: 'panel-count-info' },
                                                        'VALT ANTAL SOLARPANELER'
                                                    ),
                                                    _react2['default'].createElement('br', null),
                                                    _react2['default'].createElement(
                                                        'div',
                                                        { className: 'panel-values-info' },
                                                        this.state.packetsCount
                                                    )
                                                )
                                            ),
                                            _react2['default'].createElement(
                                                'div',
                                                { className: 'col-sm-6 col-md-4 panding_no' },
                                                _react2['default'].createElement(
                                                    'div',
                                                    { className: 'list-head' },
                                                    _react2['default'].createElement(
                                                        'p',
                                                        { className: 'panel-count-info' },
                                                        'EFFEKT'
                                                    ),
                                                    _react2['default'].createElement('br', null),
                                                    _react2['default'].createElement(
                                                        'div',
                                                        { className: 'panel-values-info no-border' },
                                                        totalInstalledPowerInkw,
                                                        _react2['default'].createElement(
                                                            'span',
                                                            null,
                                                            ' kWh'
                                                        )
                                                    )
                                                )
                                            )
                                        )
                                    ) : null,
                                    this.state.packetPopup && this.state.panel && this.state.panelName == 'soltak' ? _react2['default'].createElement(
                                        'div',
                                        null,
                                        _react2['default'].createElement('div', { className: 'col-md-1' }),
                                        _react2['default'].createElement(
                                            'div',
                                            { className: 'col-md-10 col-sm-12 panding_no panel-count-info-border' },
                                            _react2['default'].createElement(
                                                'div',
                                                { className: 'col-sm-6 col-md-4 panding_no' },
                                                _react2['default'].createElement(
                                                    'div',
                                                    { className: 'list-head' },
                                                    _react2['default'].createElement(
                                                        'p',
                                                        { className: 'panel-count-info' },
                                                        'Tak YTA'
                                                    ),
                                                    _react2['default'].createElement(
                                                        'div',
                                                        { className: 'panel-values-info no-border' },
                                                        this.state.maximumPackets,
                                                        _react2['default'].createElement(
                                                            'span',
                                                            null,
                                                            ' kvm'
                                                        )
                                                    )
                                                )
                                            ),
                                            _react2['default'].createElement(
                                                'div',
                                                { className: 'col-sm-6 col-md-4 panding_no' },
                                                _react2['default'].createElement(
                                                    'div',
                                                    { className: 'list-head' },
                                                    _react2['default'].createElement(
                                                        'p',
                                                        { className: 'panel-count-info' },
                                                        'VALT SOLTAK YTA'
                                                    ),
                                                    _react2['default'].createElement('br', null),
                                                    _react2['default'].createElement(
                                                        'div',
                                                        { className: 'panel-values-info' },
                                                        this.state.packetsCount
                                                    )
                                                )
                                            ),
                                            _react2['default'].createElement(
                                                'div',
                                                { className: 'col-sm-6 col-md-4 panding_no' },
                                                _react2['default'].createElement(
                                                    'div',
                                                    { className: 'list-head' },
                                                    _react2['default'].createElement(
                                                        'p',
                                                        { className: 'panel-count-info' },
                                                        'EFFEKT'
                                                    ),
                                                    _react2['default'].createElement('br', null),
                                                    _react2['default'].createElement(
                                                        'div',
                                                        { className: 'panel-values-info no-border' },
                                                        totalInstalledPowerInkw,
                                                        _react2['default'].createElement(
                                                            'span',
                                                            null,
                                                            ' kWh'
                                                        )
                                                    )
                                                )
                                            )
                                        )
                                    ) : null
                                )
                            )
                        )
                    ),
                    _react2['default'].createElement(
                        'div',
                        { className: 'col-sm-12 center-line-seperation' },
                        _react2['default'].createElement(
                            'div',
                            { className: 'container' },
                            _react2['default'].createElement(
                                'div',
                                { className: 'col-md-12 heading_text font-quicksand bold' },
                                'välj Batteri'
                            ),
                            _react2['default'].createElement(
                                'div',
                                { className: 'col-sm-12 material', style: { textAlign: 'center', padding: '30px', margin: '0px auto' } },
                                this.state.validationTwo ? _react2['default'].createElement(
                                    'div',
                                    { className: 'validation', style: { margin: '0px auto' } },
                                    _react2['default'].createElement(
                                        'span',
                                        null,
                                        'Please select the Battery type'
                                    )
                                ) : null
                            ),
                            _react2['default'].createElement('div', { className: 'col-md-1' }),
                            _react2['default'].createElement(
                                'div',
                                { className: 'col-sm-12 col-md-10', id: 'battery-types' },
                                this.batteries.map(function (data, index) {
                                    return _react2['default'].createElement(
                                        'div',
                                        { className: 'col-sm-6 col-md-4', key: index, onClick: _this.selectedBattery.bind(_this, data.name, data.cost) },
                                        _react2['default'].createElement(
                                            'div',
                                            { className: 'onfocs_brdr b-white', style: data.name == _this.state.battery ? selectedStyle : matstyle },
                                            _react2['default'].createElement('img', { src: data.image, alt: data.name, className: 'img-responsive' }),
                                            _react2['default'].createElement('br', null),
                                            _react2['default'].createElement(
                                                'p',
                                                { className: 'm-top9' },
                                                data.name,
                                                ' batteri'
                                            )
                                        )
                                    );
                                })
                            ),
                            _react2['default'].createElement(
                                'div',
                                { className: 'col-md-12 col-sm-12 align-text-center' },
                                _react2['default'].createElement(
                                    'a',
                                    { className: 'hiperLink', onClick: this.openBatteryPopup.bind(this) },
                                    'Läs mer om batteri'
                                ),
                                this.state.batteryPopup ? _react2['default'].createElement(
                                    'div',
                                    null,
                                    _react2['default'].createElement(
                                        _reactModal2['default'],
                                        {
                                            isOpen: this.state.modalForBatteryIsOpen,
                                            onAfterOpen: this.afterOpenModal,
                                            onRequestClose: this.closeBatteryModal,
                                            style: customStyles,
                                            className: 'panel-modal',
                                            contentLabel: 'Example Modal' },
                                        _react2['default'].createElement(
                                            'div',
                                            { className: 'col-md-12 panding_no' },
                                            _react2['default'].createElement(
                                                'div',
                                                { className: 'boka-heading' },
                                                'BATTERI'
                                            ),
                                            _react2['default'].createElement(
                                                'div',
                                                { className: 'f-right' },
                                                _react2['default'].createElement(
                                                    'button',
                                                    { className: 'close-button ', onClick: this.closeBatteryModal },
                                                    'X'
                                                )
                                            )
                                        ),
                                        _react2['default'].createElement(
                                            'div',
                                            { className: 'questionsPage padding-bottom-none' },
                                            _react2['default'].createElement(
                                                'div',
                                                { className: 'heading list-head' },
                                                'PREMIUM BATTERI'
                                            ),
                                            _react2['default'].createElement(
                                                'div',
                                                { className: 'p-10' },
                                                _react2['default'].createElement(
                                                    'ul',
                                                    { className: 'panels-list' },
                                                    _react2['default'].createElement(
                                                        'li',
                                                        null,
                                                        ' - 11,4 kWh effekt '
                                                    ),
                                                    _react2['default'].createElement(
                                                        'li',
                                                        null,
                                                        ' - Strömäven vid strömavbrott'
                                                    ),
                                                    _react2['default'].createElement(
                                                        'li',
                                                        null,
                                                        ' - VäxelriktareochbatterigenomBatterX.'
                                                    ),
                                                    _react2['default'].createElement(
                                                        'li',
                                                        null,
                                                        ' - Möjlighet till strömlagringfrånsolpaneler'
                                                    )
                                                )
                                            )
                                        ),
                                        _react2['default'].createElement(
                                            'div',
                                            { className: 'questionsPage padding-top-none' },
                                            _react2['default'].createElement(
                                                'div',
                                                { className: 'heading list-head' },
                                                'UTAN BATTERI'
                                            ),
                                            _react2['default'].createElement(
                                                'div',
                                                { className: 'p-10' },
                                                _react2['default'].createElement(
                                                    'ul',
                                                    { className: 'panels-list' },
                                                    _react2['default'].createElement(
                                                        'li',
                                                        null,
                                                        ' - Sälj din överskottseldirekt till elbolaget'
                                                    ),
                                                    _react2['default'].createElement(
                                                        'li',
                                                        null,
                                                        ' - Panel imonokristallin'
                                                    ),
                                                    _react2['default'].createElement(
                                                        'li',
                                                        null,
                                                        ' - Passarbästförvillordå den svartskimrandefärgenoftastärmeruppskattadänstandardpanelen'
                                                    ),
                                                    _react2['default'].createElement(
                                                        'li',
                                                        null,
                                                        ' - Högreeffekt per panel görpanelenlämpligförmindretak'
                                                    )
                                                )
                                            )
                                        ),
                                        _react2['default'].createElement(
                                            'div',
                                            { className: 'estimate align-text-center' },
                                            _react2['default'].createElement(
                                                'button',
                                                { className: 'submit float-none', onClick: this.closeBatteryModal },
                                                'stäng'
                                            )
                                        )
                                    )
                                ) : null
                            )
                        )
                    )
                ),
                _react2['default'].createElement(
                    'div',
                    { className: 'col-sm-12 estimate', style: { textAlign: 'center', padding: '30px' } },
                    this.state.panel && this.state.battery ? _react2['default'].createElement(
                        'div',
                        { className: 'flex justifyCenter' },
                        _react2['default'].createElement(
                            'div',
                            { className: 'padding1' },
                            _react2['default'].createElement(
                                'button',
                                { onClick: this.props.back.bind(this, 4), className: 'submit' },
                                'Föregående'
                            )
                        ),
                        _react2['default'].createElement(
                            'div',
                            { className: 'padding1' },
                            _react2['default'].createElement(
                                'button',
                                { onClick: this.props.panelTypes.bind(this, this.state.panel, this.state.battery, parseInt(this.state.packetsCount), this.state.packetName, parseInt(this.state.annualOutput)), className: 'submit' },
                                'Slutför'
                            )
                        )
                    ) : _react2['default'].createElement(
                        'div',
                        { className: 'flex justifyCenter' },
                        _react2['default'].createElement(
                            'div',
                            { className: 'padding1' },
                            _react2['default'].createElement(
                                'button',
                                { onClick: this.props.back.bind(this, 4), className: 'submit' },
                                'Föregående'
                            )
                        ),
                        _react2['default'].createElement(
                            'div',
                            { className: 'padding1' },
                            _react2['default'].createElement(
                                'button',
                                { onClick: this.validate, className: 'submit' },
                                'Slutför'
                            )
                        )
                    )
                )
            );
        }
    }]);

    return PanelComponent;
})(_react.Component);

exports['default'] = PanelComponent;
module.exports = exports['default'];
/* <div className="col-sm-6 col-md-3 panding_no">
   <div className="list-head">
       <p className="panel-count-info">ÅRSPRODUKTION</p>
       <br />
       <div className='panel-values-info'>{parseInt(this.state.annualOutput)}
           <span> KWh</span>
       </div>
   </div>
</div> */ /* <div className="col-sm-6 col-md-3 panding_no">
             <div className="list-head">
                 <p className="panel-count-info">ÅRSPRODUKTION</p>
                 <br />
                 <div className='panel-values-info'>{parseInt(this.state.annualOutput)}
                     <span> KWh</span>
                 </div>
             </div>
          </div> */

},{"react":undefined,"react-modal":88}],32:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; desc = parent = undefined; continue _function; } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var Profile = (function (_Component) {
    _inherits(Profile, _Component);

    function Profile(props) {
        _classCallCheck(this, Profile);

        _get(Object.getPrototypeOf(Profile.prototype), "constructor", this).call(this, props);
        var userdata = "";
        var name = "";
        var Phone = "";
        var Email = "";
        if (localStorage.getItem("userdata") == "undefined" || localStorage.getItem("userdata") == undefined) {
            this.userdata = "";
        } else {
            this.userdata = JSON.parse(localStorage.getItem("userdata"));
            this.name = this.userdata.name;
            this.Phone = this.userdata.email;
            this.Email = this.userdata.phone;
        }
    }

    _createClass(Profile, [{
        key: "render",
        value: function render() {
            return _react2["default"].createElement(
                "div",
                { id: "profile" },
                _react2["default"].createElement(
                    "div",
                    { className: "container" },
                    _react2["default"].createElement(
                        "div",
                        { className: "col-sm-12" },
                        _react2["default"].createElement(
                            "div",
                            { id: "", hidden: true },
                            _react2["default"].createElement(
                                "table",
                                { className: "table" },
                                _react2["default"].createElement(
                                    "tbody",
                                    null,
                                    _react2["default"].createElement(
                                        "tr",
                                        null,
                                        _react2["default"].createElement(
                                            "td",
                                            null,
                                            "Name"
                                        ),
                                        _react2["default"].createElement(
                                            "td",
                                            null,
                                            " ",
                                            _react2["default"].createElement("input", { type: "text", className: "form-control", value: this.name, readOnly: true }),
                                            " "
                                        ),
                                        _react2["default"].createElement(
                                            "td",
                                            null,
                                            "Email"
                                        ),
                                        _react2["default"].createElement(
                                            "td",
                                            null,
                                            _react2["default"].createElement("input", { type: "text", className: "form-control", value: this.Email, readOnly: true })
                                        )
                                    ),
                                    _react2["default"].createElement(
                                        "tr",
                                        null,
                                        _react2["default"].createElement(
                                            "td",
                                            null,
                                            "Phone"
                                        ),
                                        _react2["default"].createElement(
                                            "td",
                                            null,
                                            " ",
                                            _react2["default"].createElement("input", { type: "text", value: this.Phone, className: "form-control", readOnly: true }),
                                            " "
                                        ),
                                        _react2["default"].createElement("td", null),
                                        _react2["default"].createElement(
                                            "td",
                                            null,
                                            " ",
                                            _react2["default"].createElement(
                                                "button",
                                                { className: "btn btn-primary" },
                                                "Submit"
                                            )
                                        )
                                    )
                                )
                            )
                        )
                    ),
                    _react2["default"].createElement(
                        "div",
                        { className: "col-sm-12" },
                        _react2["default"].createElement(
                            "div",
                            { id: "" },
                            _react2["default"].createElement(
                                "h2",
                                null,
                                _react2["default"].createElement(
                                    "b",
                                    null,
                                    this.props.address
                                )
                            ),
                            _react2["default"].createElement(
                                "h3",
                                { className: "text-center" },
                                _react2["default"].createElement(
                                    "b",
                                    null,
                                    "Your Roofing Estimation"
                                )
                            ),
                            _react2["default"].createElement(
                                "table",
                                { className: "table" },
                                _react2["default"].createElement(
                                    "thead",
                                    null,
                                    _react2["default"].createElement(
                                        "tr",
                                        null,
                                        _react2["default"].createElement(
                                            "th",
                                            null,
                                            "S.No"
                                        ),
                                        _react2["default"].createElement(
                                            "th",
                                            null,
                                            "Style"
                                        ),
                                        _react2["default"].createElement(
                                            "th",
                                            null,
                                            "Material"
                                        ),
                                        _react2["default"].createElement(
                                            "th",
                                            null,
                                            "Area"
                                        ),
                                        _react2["default"].createElement(
                                            "th",
                                            null,
                                            "Estimated Price"
                                        )
                                    )
                                ),
                                _react2["default"].createElement(Estimation, { data: this.userdata.estdet })
                            )
                        )
                    ),
                    _react2["default"].createElement("div", { className: "col-sm-12" })
                )
            );
        }
    }]);

    return Profile;
})(_react.Component);

var Estimation = (function (_Component2) {
    _inherits(Estimation, _Component2);

    function Estimation(props) {
        _classCallCheck(this, Estimation);

        _get(Object.getPrototypeOf(Estimation.prototype), "constructor", this).call(this, props);
        var resdata = props.data;
    }

    _createClass(Estimation, [{
        key: "render",
        value: function render() {
            return _react2["default"].createElement(
                "tbody",
                null,
                this.props.data.map(function (value, key) {
                    return _react2["default"].createElement(
                        "tr",
                        { key: key },
                        _react2["default"].createElement(
                            "td",
                            null,
                            key + 1
                        ),
                        _react2["default"].createElement(
                            "td",
                            { key: key },
                            value.slope
                        ),
                        _react2["default"].createElement(
                            "td",
                            null,
                            value.material
                        ),
                        _react2["default"].createElement(
                            "td",
                            null,
                            value.area
                        ),
                        _react2["default"].createElement(
                            "td",
                            null,
                            value.estimatedamount
                        )
                    );
                })
            );
        }
    }]);

    return Estimation;
})(_react.Component);

exports["default"] = Profile;
module.exports = exports["default"];

},{"react":undefined}],33:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, '__esModule', {
  value: true
});

var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; desc = parent = undefined; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _componentsDragabbleComponent = require('./components/DragabbleComponent');

var _componentsDragabbleComponent2 = _interopRequireDefault(_componentsDragabbleComponent);

var _componentsContext = require('./components/Context');

var _componentsContext2 = _interopRequireDefault(_componentsContext);

var _reactModal = require('react-modal');

var _reactModal2 = _interopRequireDefault(_reactModal);

var customStyles = {
  content: {
    top: '50%',
    left: '50%',
    right: 'auto',
    bottom: 'auto',
    marginRight: '-50%',
    transform: 'translate(-50%, -50%)',
    padding: '10px 15px 23px',
    fontSize: '16px',
    borderRadius: '85px',
    zIndex: '90'
  }
};
var highletstyle = {
  fontSize: '15'
};
var highletstyle2 = {
  fontSize: '15'
};

var RoofQuestions = (function (_Component) {
  _inherits(RoofQuestions, _Component);

  function RoofQuestions(props) {
    _classCallCheck(this, RoofQuestions);

    _get(Object.getPrototypeOf(RoofQuestions.prototype), 'constructor', this).call(this, props);
    window.scrollTo(0, 0);
    this.dataSet = [{
      question: "Vilken typ av fastighet bor du i?",
      answers: [{
        image: "./img/Digitak_Radhus.png",
        name: "Radhus"
      }, {
        image: "./img/Digitak_Villa.png",
        name: "Villa"
      }, {
        image: "./img/Digitak_Fritidshus.png",
        name: "Fritidshus"
      }, {
        image: "./img/Digitak_Bostadsra_Level.png",
        name: "Bostadsrätt"
      }, {
        image: "./img/Digitak_Lantbruk.png",
        name: "Lantbruk"
      }]
    }, {
      question: "Hur många våningar är fastigheten?",
      answers: [{
        image: "./img/Digitak_1_Level.png",
        name: "1 plan"
      }, {
        image: "./img/Digitak_2_Level.png",
        name: "2 plan"
      }, {
        image: "./img/Digitak_3_Level.png",
        name: "3 plan"
      }, {
        image: "./img/Digitak_3+_Level.png",
        name: "3+ plan"
      }]
    }];
    this.state = { modalIsOpen: false, stepIndex: 1, selectedValue: '', selectedValueTwo: '', angle: 45, left: '135px', validationOne: false, validation: false, popup: false };
    this.handleClick = this.handleClick.bind(this);
    this.roofangle = this.roofangle.bind(this);
    this.handleClickTwo = this.handleClickTwo.bind(this);
    this.validate = this.validate.bind(this);
    this.scrollable = this.scrollable.bind(this);
    this.selectedAnswers = [];
    this.openPopup = this.openPopup.bind(this);
    _reactModal2['default'].setAppElement('body');
    this.openModal = this.openModal.bind(this);
    this.afterOpenModal = this.afterOpenModal.bind(this);
    this.closeModal = this.closeModal.bind(this);
  }

  _createClass(RoofQuestions, [{
    key: 'handleClick',
    value: function handleClick(value) {
      var selectedValue = value;
      highletstyle = {
        fontWeight: 'bold',
        color: 'black',
        fontSize: '16px'
      };
      this.selectedAnswers.push(value);
      this.setState({ selectedValue: selectedValue, validationOne: false });
    }
  }, {
    key: 'handleClickTwo',
    value: function handleClickTwo(value2) {
      var selectedValue = value2;
      highletstyle2 = {
        fontWeight: 'bold',
        color: 'black',
        fontSize: '16px'
      };
      this.selectedAnswers.push(value2);
      this.setState({ selectedValueTwo: selectedValue, validation: false });
    }
  }, {
    key: 'validate',
    value: function validate() {
      if (!this.state.selectedValue) {
        this.setState({ validationOne: true });
      } else if (!this.state.selectedValueTwo) {
        this.setState({ validation: true });
      }
    }
  }, {
    key: 'scrollable',
    value: function scrollable(e) {
      if (e.nativeEvent.offsetX > 270) {
        this.setState({ left: '270px' });
        this.setState({ angle: 90 });
      } else {
        this.setState({ left: e.nativeEvent.offsetX });
        var val = Math.floor(e.nativeEvent.offsetX / 3);
        this.setState({ angle: Math.ceil(val / 5) * 5 });
      }
    }
  }, {
    key: 'roofangle',
    value: function roofangle(roofAngle) {
      this.setState({ angle: roofAngle });
    }
  }, {
    key: 'openPopup',
    value: function openPopup() {
      this.setState({ popup: true, modalIsOpen: true });
    }
  }, {
    key: 'openModal',
    value: function openModal() {}
  }, {
    key: 'afterOpenModal',
    value: function afterOpenModal() {}
  }, {
    key: 'closeModal',
    value: function closeModal() {
      this.setState({ modalIsOpen: false });
    }
  }, {
    key: 'render',
    value: function render() {
      var _this = this;

      return _react2['default'].createElement(
        _componentsContext2['default'].Consumer,
        null,
        function (value) {
          var _value$actions = value.actions;
          var queval = _value$actions.qusetionsval;
          var back = _value$actions.stepval;

          return _react2['default'].createElement(
            'div',
            null,
            _react2['default'].createElement(
              'div',
              { className: 'container ' },
              _react2['default'].createElement(
                'h3',
                { className: 'roof_subhead' },
                'Fastighetsinformation'
              )
            ),
            _react2['default'].createElement(
              'div',
              { className: 'container roofing_type col-sm-12 panding_no' },
              _react2['default'].createElement(
                'div',
                { className: 'col-sm-12 col-md-12', style: {
                    padding: '2em 0',
                    borderBottom: '1px solid #8888886e'
                  } },
                _react2['default'].createElement('div', { className: 'col-md-2' }),
                _react2['default'].createElement(
                  'div',
                  { className: 'col-md-8 panding_no', id: 'navbar2' },
                  _react2['default'].createElement(
                    'div',
                    { className: 'col-sm-12 col-md-12 panding_no uppercase text-blue align-text-center' },
                    _react2['default'].createElement(
                      'div',
                      { style: { padding: '20px 0px 20px 0' } },
                      _react2['default'].createElement(
                        'div',
                        { className: 'bold font-quicksand' },
                        'Vilken är fastighetens ungefärliga taklutning ?'
                      )
                    )
                  ),
                  _react2['default'].createElement(_componentsDragabbleComponent2['default'], { roofAngle: _this.roofangle }),
                  _react2['default'].createElement(
                    'div',
                    { className: 'col-md-12 col-sm-12 align-text-center slots-centering' },
                    _react2['default'].createElement(
                      'div',
                      { className: 'hiperLink', style: { textDecoration: 'underline' }, onClick: _this.openPopup },
                      'Läs mer om taklutning'
                    )
                  )
                )
              ),
              _this.state.popup ? _react2['default'].createElement(
                'div',
                null,
                _react2['default'].createElement(
                  _reactModal2['default'],
                  {
                    isOpen: _this.state.modalIsOpen,
                    onAfterOpen: _this.afterOpenModal,
                    onRequestClose: _this.closeModal,
                    style: customStyles,
                    contentLabel: 'Example Modal' },
                  _react2['default'].createElement(
                    'div',
                    null,
                    _react2['default'].createElement(
                      'button',
                      { style: { float: 'right', color: '#8ee2ae', backgroundColor: '#fff', border: 'none', margin: '0 75px', fontSize: '20px' }, onClick: _this.closeModal },
                      'X'
                    )
                  ),
                  _react2['default'].createElement(
                    'div',
                    { className: 'heading' },
                    'TAKLUTNING'
                  ),
                  _react2['default'].createElement(
                    'div',
                    { className: 'footer-popup questionsPage' },
                    'Dra i reglaget för att ändra takets ungefärliga taklutning.'
                  ),
                  _react2['default'].createElement(
                    'div',
                    { className: 'estimate ' },
                    _react2['default'].createElement(
                      'button',
                      { className: 'submit', onClick: _this.closeModal },
                      'stäng'
                    )
                  )
                )
              ) : null,
              _react2['default'].createElement(
                'div',
                { className: 'col-sm-12 panding_no', style: {
                    backgroundColor: '#eee', padding: '2em 0px 4em', boxShadow: '0 -3px 5px -3px rgba(0,0,0,.15)',
                    borderBottom: '1px solid #8888886e'
                  } },
                _react2['default'].createElement('div', { className: 'col-sm-1' }),
                _react2['default'].createElement(
                  'div',
                  { className: 'col-sm-10 panding_no', id: 'padding-b' },
                  _react2['default'].createElement(QuizArea, { handleClick: _this.handleClick, validation: _this.state.validationOne, dataSet: _this.dataSet[0], selected: _this.state.selectedValue, style: highletstyle })
                )
              ),
              _react2['default'].createElement(
                'div',
                { className: 'col-sm-12', style: { padding: '4em 0 0 0' } },
                _react2['default'].createElement('div', { className: 'col-sm-1' }),
                _react2['default'].createElement(
                  'div',
                  { className: 'col-sm-10 panding_no', id: 'padding-b' },
                  _react2['default'].createElement(QuizArea, { handleClick: _this.handleClickTwo, validation: _this.state.validation, dataSet: _this.dataSet[1], selected: _this.state.selectedValueTwo, style: highletstyle2 })
                )
              ),
              _react2['default'].createElement(
                'div',
                { className: 'col-sm-12 estimate', style: { textAlign: 'center', padding: '30px' } },
                _this.state.selectedValue && _this.state.selectedValueTwo ? _react2['default'].createElement(
                  'div',
                  { className: 'flex justifyCenter' },
                  _react2['default'].createElement(
                    'div',
                    { className: 'padding1' },
                    _react2['default'].createElement(
                      'button',
                      { onClick: back.bind(_this, 1), className: 'submit' },
                      'Föregående'
                    )
                  ),
                  _react2['default'].createElement(
                    'div',
                    { className: 'padding1' },
                    _react2['default'].createElement(
                      'button',
                      { onClick: queval.bind(_this, _this.state.selectedValue, _this.state.selectedValueTwo, _this.state.angle), className: 'submit' },
                      'Nästa'
                    )
                  )
                ) : _react2['default'].createElement(
                  'div',
                  { className: 'flex justifyCenter' },
                  _react2['default'].createElement(
                    'div',
                    { className: 'padding1' },
                    _react2['default'].createElement(
                      'button',
                      { onClick: back.bind(_this, 1), className: 'submit' },
                      'Föregående'
                    )
                  ),
                  _react2['default'].createElement(
                    'div',
                    { className: 'padding1' },
                    _react2['default'].createElement(
                      'button',
                      { onClick: _this.validate, className: 'submit' },
                      'Nästa'
                    )
                  )
                )
              )
            )
          );
        }
      );
    }
  }]);

  return RoofQuestions;
})(_react.Component);

function Question(props) {
  return _react2['default'].createElement(
    'div',
    null,
    _react2['default'].createElement(
      'div',
      { className: 'roof-question font-quicksand' },
      props.dataSet.question
    ),
    props.validation ? _react2['default'].createElement(
      'div',
      { className: 'col-md-6 col-md-offset-3' },
      _react2['default'].createElement(
        'div',
        { className: 'validation' },
        _react2['default'].createElement(
          'span',
          null,
          'Please select One'
        )
      )
    ) : null
  );
}

function Answer(props) {
  var colorCode = {
    border: '4px solid #8ee2ae',
    color: '#064f70',
    fontWeight: 'bold',
    padding: "10px 0 10px",
    margin: "5px 5px 50px 5px",
    textAlign: "-webkit-center",
    borderRadius: "4px",
    boxShadow: "0 15px 35px rgba(50,50,93,.1), 0 5px 15px rgba(0,0,0,.07)",
    transition: "all 0.3s ease-out",
    WebkitTransform: "all 0.3s ease-out",
    minHeight: "190px",
    textTransform: 'uppercase',
    fontSize: '15px'
  };
  var stylestyle = {
    padding: "10px 0 10px",
    margin: "5px 5px 50px 5px",
    border: "4px solid #f9f9f9",
    textAlign: "-webkit-center",
    borderRadius: "4px",
    boxShadow: "0 15px 35px rgba(50,50,93,.1), 0 5px 15px rgba(0,0,0,.07)",
    transition: "all 0.3s ease-out",
    WebkitTransform: "all 0.3s ease-out",
    minHeight: "190px",
    textTransform: 'uppercase',
    color: 'rgb(6, 79, 112)',
    fontSize: '15px'
  };
  var appliedstyle = props.answer.name === props.selected ? colorCode : stylestyle;
  return _react2['default'].createElement(
    'div',
    { className: 'col-sm-6 col-md-4 col-lg-2', key: props.choice, onClick: props.handleClick.bind(this, props.answer.name) },
    _react2['default'].createElement(
      'div',
      { className: 'onfocs_brdr b-white', style: appliedstyle },
      _react2['default'].createElement('img', { className: 'img-responsive', src: props.answer.image, alt: props.answer.name }),
      _react2['default'].createElement(
        'p',
        null,
        props.answer.name
      )
    )
  );
}

function AnswerList(props) {
  var answers = [];
  for (var i = 0; i < props.dataSet.answers.length; i++) {
    answers.push(_react2['default'].createElement(Answer, { key: i, choice: i, style: props.style, handleClick: props.handleClick, selected: props.selected, answer: props.dataSet.answers[i] }));
  }
  return _react2['default'].createElement(
    'div',
    { className: 'col-md-12 justifyCenter align-text-center padd-top-bot' },
    props.dataSet.answers.length == 4 ? _react2['default'].createElement(
      'div',
      null,
      _react2['default'].createElement('div', { className: 'col-lg-2' }),
      answers,
      _react2['default'].createElement('div', { className: 'col-lg-2' })
    ) : _react2['default'].createElement(
      'div',
      null,
      _react2['default'].createElement('div', { className: 'col-lg-1' }),
      answers,
      _react2['default'].createElement('div', { className: 'col-lg-1' })
    )
  );
}

function QuizArea(props) {
  return _react2['default'].createElement(
    'div',
    null,
    _react2['default'].createElement(Question, { dataSet: props.dataSet, validation: props.validation }),
    _react2['default'].createElement(AnswerList, { dataSet: props.dataSet, style: props.style, handleClick: props.handleClick, selected: props.selected })
  );
}

exports['default'] = RoofQuestions;
module.exports = exports['default'];

},{"./components/Context":7,"./components/DragabbleComponent":10,"react":undefined,"react-modal":88}],34:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, '__esModule', {
    value: true
});

var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; desc = parent = undefined; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _reactDom = require('react-dom');

var _reactDom2 = _interopRequireDefault(_reactDom);

var _reactRouterDom = require('react-router-dom');

var mainurl = require('./config.json');

var Textc = (function (_Component) {
    _inherits(Textc, _Component);

    function Textc(props) {
        _classCallCheck(this, Textc);

        _get(Object.getPrototypeOf(Textc.prototype), 'constructor', this).call(this, props);
        this.state = {
            userdata: ""
        };
        fetch('./config.json').then(function (response) {});
    }

    _createClass(Textc, [{
        key: 'componentDidMount',
        value: function componentDidMount() {
            var main = this;
            var payload = {
                name: 'mahesh',
                email: 'maheshs.versatilemobitech111111@gmail.com',
                password: '123456',
                phone: '7386949079',
                type: 'USER'
            };
            fetch(mainurl.url + 'users/registeruser', {
                method: "post", headers: {
                    'Content-Type': 'application/x-www-form-urlencoded',
                    "Access-Control-Request-Headers": "*",
                    "Access-Control-Request-Method": "*"
                }, body: 'json=' + JSON.stringify(payload)
            }).then(function (response) {
                return response;
            }).then(function (response) {
                return response.json();
            }).then(function (data) {
                if (data.status == 400) {
                    main.setState({
                        userdata: data.message
                    });
                } else {
                    main.setState({
                        userdata: data.data
                    });
                }
            });
            /*
                method: 'POST',
              url: 'http://localhost:8080/users/',
             ,
              form: 
               { name: 'mahesh',
                 email: 'maheshs.versatilemobitech1@gmail.com',
                 password: '123456',
                 phone: '7386949079',
                 type: 'USER' }*/
            /*
                  fetch(`/users/`,{method:"post"},)
               .then( function(response) {
                 return response;
               })
               .then( function(response) {
               return response.json();
            
            
               }).then( function(data) {
            
               console.log(data);
               	
             })
               */
        }
    }, {
        key: 'render',
        value: function render() {
            return _react2['default'].createElement(
                'div',
                null,
                this.state.userdata
            );
        }
    }]);

    return Textc;
})(_react.Component);

exports['default'] = Textc;
module.exports = exports['default'];

},{"./config.json":15,"react":undefined,"react-dom":undefined,"react-router-dom":104}],35:[function(require,module,exports){
!function(a,n){"function"==typeof define&&define.amd?define(n):"object"==typeof exports?module.exports=n(require,exports,module):a.CountUp=n()}(this,function(a,n,t){var e=function(a,n,t,e,i,r){function o(a){var n,t,e,i,r,o,s=a<0;if(a=Math.abs(a).toFixed(l.decimals),a+="",n=a.split("."),t=n[0],e=n.length>1?l.options.decimal+n[1]:"",l.options.useGrouping){for(i="",r=0,o=t.length;r<o;++r)0!==r&&r%3===0&&(i=l.options.separator+i),i=t[o-r-1]+i;t=i}return l.options.numerals.length&&(t=t.replace(/[0-9]/g,function(a){return l.options.numerals[+a]}),e=e.replace(/[0-9]/g,function(a){return l.options.numerals[+a]})),(s?"-":"")+l.options.prefix+t+e+l.options.suffix}function s(a,n,t,e){return t*(-Math.pow(2,-10*a/e)+1)*1024/1023+n}function u(a){return"number"==typeof a&&!isNaN(a)}var l=this;if(l.version=function(){return"1.9.3"},l.options={useEasing:!0,useGrouping:!0,separator:",",decimal:".",easingFn:s,formattingFn:o,prefix:"",suffix:"",numerals:[]},r&&"object"==typeof r)for(var m in l.options)r.hasOwnProperty(m)&&null!==r[m]&&(l.options[m]=r[m]);""===l.options.separator?l.options.useGrouping=!1:l.options.separator=""+l.options.separator;for(var d=0,c=["webkit","moz","ms","o"],f=0;f<c.length&&!window.requestAnimationFrame;++f)window.requestAnimationFrame=window[c[f]+"RequestAnimationFrame"],window.cancelAnimationFrame=window[c[f]+"CancelAnimationFrame"]||window[c[f]+"CancelRequestAnimationFrame"];window.requestAnimationFrame||(window.requestAnimationFrame=function(a,n){var t=(new Date).getTime(),e=Math.max(0,16-(t-d)),i=window.setTimeout(function(){a(t+e)},e);return d=t+e,i}),window.cancelAnimationFrame||(window.cancelAnimationFrame=function(a){clearTimeout(a)}),l.initialize=function(){return!!l.initialized||(l.error="",l.d="string"==typeof a?document.getElementById(a):a,l.d?(l.startVal=Number(n),l.endVal=Number(t),u(l.startVal)&&u(l.endVal)?(l.decimals=Math.max(0,e||0),l.dec=Math.pow(10,l.decimals),l.duration=1e3*Number(i)||2e3,l.countDown=l.startVal>l.endVal,l.frameVal=l.startVal,l.initialized=!0,!0):(l.error="[CountUp] startVal ("+n+") or endVal ("+t+") is not a number",!1)):(l.error="[CountUp] target is null or undefined",!1))},l.printValue=function(a){var n=l.options.formattingFn(a);"INPUT"===l.d.tagName?this.d.value=n:"text"===l.d.tagName||"tspan"===l.d.tagName?this.d.textContent=n:this.d.innerHTML=n},l.count=function(a){l.startTime||(l.startTime=a),l.timestamp=a;var n=a-l.startTime;l.remaining=l.duration-n,l.options.useEasing?l.countDown?l.frameVal=l.startVal-l.options.easingFn(n,0,l.startVal-l.endVal,l.duration):l.frameVal=l.options.easingFn(n,l.startVal,l.endVal-l.startVal,l.duration):l.countDown?l.frameVal=l.startVal-(l.startVal-l.endVal)*(n/l.duration):l.frameVal=l.startVal+(l.endVal-l.startVal)*(n/l.duration),l.countDown?l.frameVal=l.frameVal<l.endVal?l.endVal:l.frameVal:l.frameVal=l.frameVal>l.endVal?l.endVal:l.frameVal,l.frameVal=Math.round(l.frameVal*l.dec)/l.dec,l.printValue(l.frameVal),n<l.duration?l.rAF=requestAnimationFrame(l.count):l.callback&&l.callback()},l.start=function(a){l.initialize()&&(l.callback=a,l.rAF=requestAnimationFrame(l.count))},l.pauseResume=function(){l.paused?(l.paused=!1,delete l.startTime,l.duration=l.remaining,l.startVal=l.frameVal,requestAnimationFrame(l.count)):(l.paused=!0,cancelAnimationFrame(l.rAF))},l.reset=function(){l.paused=!1,delete l.startTime,l.initialized=!1,l.initialize()&&(cancelAnimationFrame(l.rAF),l.printValue(l.startVal))},l.update=function(a){if(l.initialize()){if(a=Number(a),!u(a))return void(l.error="[CountUp] update() - new endVal is not a number: "+a);l.error="",a!==l.frameVal&&(cancelAnimationFrame(l.rAF),l.paused=!1,delete l.startTime,l.startVal=l.frameVal,l.endVal=a,l.countDown=l.startVal>l.endVal,l.rAF=requestAnimationFrame(l.count))}},l.initialize()&&l.printValue(l.startVal)};return e});
},{}],36:[function(require,module,exports){
/*!
  Copyright (c) 2015 Jed Watson.
  Based on code that is Copyright 2013-2015, Facebook, Inc.
  All rights reserved.
*/
/* global define */

(function () {
	'use strict';

	var canUseDOM = !!(
		typeof window !== 'undefined' &&
		window.document &&
		window.document.createElement
	);

	var ExecutionEnvironment = {

		canUseDOM: canUseDOM,

		canUseWorkers: typeof Worker !== 'undefined',

		canUseEventListeners:
			canUseDOM && !!(window.addEventListener || window.attachEvent),

		canUseViewport: canUseDOM && !!window.screen

	};

	if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {
		define(function () {
			return ExecutionEnvironment;
		});
	} else if (typeof module !== 'undefined' && module.exports) {
		module.exports = ExecutionEnvironment;
	} else {
		window.ExecutionEnvironment = ExecutionEnvironment;
	}

}());

},{}],37:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

function _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }

var resolvePathname = _interopDefault(require('resolve-pathname'));
var valueEqual = _interopDefault(require('value-equal'));
var warning = _interopDefault(require('tiny-warning'));
var invariant = _interopDefault(require('tiny-invariant'));

function _extends() {
  _extends = Object.assign || function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];

      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }

    return target;
  };

  return _extends.apply(this, arguments);
}

function addLeadingSlash(path) {
  return path.charAt(0) === '/' ? path : '/' + path;
}
function stripLeadingSlash(path) {
  return path.charAt(0) === '/' ? path.substr(1) : path;
}
function hasBasename(path, prefix) {
  return new RegExp('^' + prefix + '(\\/|\\?|#|$)', 'i').test(path);
}
function stripBasename(path, prefix) {
  return hasBasename(path, prefix) ? path.substr(prefix.length) : path;
}
function stripTrailingSlash(path) {
  return path.charAt(path.length - 1) === '/' ? path.slice(0, -1) : path;
}
function parsePath(path) {
  var pathname = path || '/';
  var search = '';
  var hash = '';
  var hashIndex = pathname.indexOf('#');

  if (hashIndex !== -1) {
    hash = pathname.substr(hashIndex);
    pathname = pathname.substr(0, hashIndex);
  }

  var searchIndex = pathname.indexOf('?');

  if (searchIndex !== -1) {
    search = pathname.substr(searchIndex);
    pathname = pathname.substr(0, searchIndex);
  }

  return {
    pathname: pathname,
    search: search === '?' ? '' : search,
    hash: hash === '#' ? '' : hash
  };
}
function createPath(location) {
  var pathname = location.pathname,
      search = location.search,
      hash = location.hash;
  var path = pathname || '/';
  if (search && search !== '?') path += search.charAt(0) === '?' ? search : "?" + search;
  if (hash && hash !== '#') path += hash.charAt(0) === '#' ? hash : "#" + hash;
  return path;
}

function createLocation(path, state, key, currentLocation) {
  var location;

  if (typeof path === 'string') {
    // Two-arg form: push(path, state)
    location = parsePath(path);
    location.state = state;
  } else {
    // One-arg form: push(location)
    location = _extends({}, path);
    if (location.pathname === undefined) location.pathname = '';

    if (location.search) {
      if (location.search.charAt(0) !== '?') location.search = '?' + location.search;
    } else {
      location.search = '';
    }

    if (location.hash) {
      if (location.hash.charAt(0) !== '#') location.hash = '#' + location.hash;
    } else {
      location.hash = '';
    }

    if (state !== undefined && location.state === undefined) location.state = state;
  }

  try {
    location.pathname = decodeURI(location.pathname);
  } catch (e) {
    if (e instanceof URIError) {
      throw new URIError('Pathname "' + location.pathname + '" could not be decoded. ' + 'This is likely caused by an invalid percent-encoding.');
    } else {
      throw e;
    }
  }

  if (key) location.key = key;

  if (currentLocation) {
    // Resolve incomplete/relative pathname relative to current location.
    if (!location.pathname) {
      location.pathname = currentLocation.pathname;
    } else if (location.pathname.charAt(0) !== '/') {
      location.pathname = resolvePathname(location.pathname, currentLocation.pathname);
    }
  } else {
    // When there is no prior location and pathname is empty, set it to /
    if (!location.pathname) {
      location.pathname = '/';
    }
  }

  return location;
}
function locationsAreEqual(a, b) {
  return a.pathname === b.pathname && a.search === b.search && a.hash === b.hash && a.key === b.key && valueEqual(a.state, b.state);
}

function createTransitionManager() {
  var prompt = null;

  function setPrompt(nextPrompt) {
    warning(prompt == null, 'A history supports only one prompt at a time');
    prompt = nextPrompt;
    return function () {
      if (prompt === nextPrompt) prompt = null;
    };
  }

  function confirmTransitionTo(location, action, getUserConfirmation, callback) {
    // TODO: If another transition starts while we're still confirming
    // the previous one, we may end up in a weird state. Figure out the
    // best way to handle this.
    if (prompt != null) {
      var result = typeof prompt === 'function' ? prompt(location, action) : prompt;

      if (typeof result === 'string') {
        if (typeof getUserConfirmation === 'function') {
          getUserConfirmation(result, callback);
        } else {
          warning(false, 'A history needs a getUserConfirmation function in order to use a prompt message');
          callback(true);
        }
      } else {
        // Return false from a transition hook to cancel the transition.
        callback(result !== false);
      }
    } else {
      callback(true);
    }
  }

  var listeners = [];

  function appendListener(fn) {
    var isActive = true;

    function listener() {
      if (isActive) fn.apply(void 0, arguments);
    }

    listeners.push(listener);
    return function () {
      isActive = false;
      listeners = listeners.filter(function (item) {
        return item !== listener;
      });
    };
  }

  function notifyListeners() {
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    listeners.forEach(function (listener) {
      return listener.apply(void 0, args);
    });
  }

  return {
    setPrompt: setPrompt,
    confirmTransitionTo: confirmTransitionTo,
    appendListener: appendListener,
    notifyListeners: notifyListeners
  };
}

var canUseDOM = !!(typeof window !== 'undefined' && window.document && window.document.createElement);
function getConfirmation(message, callback) {
  callback(window.confirm(message)); // eslint-disable-line no-alert
}
/**
 * Returns true if the HTML5 history API is supported. Taken from Modernizr.
 *
 * https://github.com/Modernizr/Modernizr/blob/master/LICENSE
 * https://github.com/Modernizr/Modernizr/blob/master/feature-detects/history.js
 * changed to avoid false negatives for Windows Phones: https://github.com/reactjs/react-router/issues/586
 */

function supportsHistory() {
  var ua = window.navigator.userAgent;
  if ((ua.indexOf('Android 2.') !== -1 || ua.indexOf('Android 4.0') !== -1) && ua.indexOf('Mobile Safari') !== -1 && ua.indexOf('Chrome') === -1 && ua.indexOf('Windows Phone') === -1) return false;
  return window.history && 'pushState' in window.history;
}
/**
 * Returns true if browser fires popstate on hash change.
 * IE10 and IE11 do not.
 */

function supportsPopStateOnHashChange() {
  return window.navigator.userAgent.indexOf('Trident') === -1;
}
/**
 * Returns false if using go(n) with hash history causes a full page reload.
 */

function supportsGoWithoutReloadUsingHash() {
  return window.navigator.userAgent.indexOf('Firefox') === -1;
}
/**
 * Returns true if a given popstate event is an extraneous WebKit event.
 * Accounts for the fact that Chrome on iOS fires real popstate events
 * containing undefined state when pressing the back button.
 */

function isExtraneousPopstateEvent(event) {
  event.state === undefined && navigator.userAgent.indexOf('CriOS') === -1;
}

var PopStateEvent = 'popstate';
var HashChangeEvent = 'hashchange';

function getHistoryState() {
  try {
    return window.history.state || {};
  } catch (e) {
    // IE 11 sometimes throws when accessing window.history.state
    // See https://github.com/ReactTraining/history/pull/289
    return {};
  }
}
/**
 * Creates a history object that uses the HTML5 history API including
 * pushState, replaceState, and the popstate event.
 */


function createBrowserHistory(props) {
  if (props === void 0) {
    props = {};
  }

  !canUseDOM ? invariant(false, 'Browser history needs a DOM') : void 0;
  var globalHistory = window.history;
  var canUseHistory = supportsHistory();
  var needsHashChangeListener = !supportsPopStateOnHashChange();
  var _props = props,
      _props$forceRefresh = _props.forceRefresh,
      forceRefresh = _props$forceRefresh === void 0 ? false : _props$forceRefresh,
      _props$getUserConfirm = _props.getUserConfirmation,
      getUserConfirmation = _props$getUserConfirm === void 0 ? getConfirmation : _props$getUserConfirm,
      _props$keyLength = _props.keyLength,
      keyLength = _props$keyLength === void 0 ? 6 : _props$keyLength;
  var basename = props.basename ? stripTrailingSlash(addLeadingSlash(props.basename)) : '';

  function getDOMLocation(historyState) {
    var _ref = historyState || {},
        key = _ref.key,
        state = _ref.state;

    var _window$location = window.location,
        pathname = _window$location.pathname,
        search = _window$location.search,
        hash = _window$location.hash;
    var path = pathname + search + hash;
    warning(!basename || hasBasename(path, basename), 'You are attempting to use a basename on a page whose URL path does not begin ' + 'with the basename. Expected path "' + path + '" to begin with "' + basename + '".');
    if (basename) path = stripBasename(path, basename);
    return createLocation(path, state, key);
  }

  function createKey() {
    return Math.random().toString(36).substr(2, keyLength);
  }

  var transitionManager = createTransitionManager();

  function setState(nextState) {
    _extends(history, nextState);

    history.length = globalHistory.length;
    transitionManager.notifyListeners(history.location, history.action);
  }

  function handlePopState(event) {
    // Ignore extraneous popstate events in WebKit.
    if (isExtraneousPopstateEvent(event)) return;
    handlePop(getDOMLocation(event.state));
  }

  function handleHashChange() {
    handlePop(getDOMLocation(getHistoryState()));
  }

  var forceNextPop = false;

  function handlePop(location) {
    if (forceNextPop) {
      forceNextPop = false;
      setState();
    } else {
      var action = 'POP';
      transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {
        if (ok) {
          setState({
            action: action,
            location: location
          });
        } else {
          revertPop(location);
        }
      });
    }
  }

  function revertPop(fromLocation) {
    var toLocation = history.location; // TODO: We could probably make this more reliable by
    // keeping a list of keys we've seen in sessionStorage.
    // Instead, we just default to 0 for keys we don't know.

    var toIndex = allKeys.indexOf(toLocation.key);
    if (toIndex === -1) toIndex = 0;
    var fromIndex = allKeys.indexOf(fromLocation.key);
    if (fromIndex === -1) fromIndex = 0;
    var delta = toIndex - fromIndex;

    if (delta) {
      forceNextPop = true;
      go(delta);
    }
  }

  var initialLocation = getDOMLocation(getHistoryState());
  var allKeys = [initialLocation.key]; // Public interface

  function createHref(location) {
    return basename + createPath(location);
  }

  function push(path, state) {
    warning(!(typeof path === 'object' && path.state !== undefined && state !== undefined), 'You should avoid providing a 2nd state argument to push when the 1st ' + 'argument is a location-like object that already has state; it is ignored');
    var action = 'PUSH';
    var location = createLocation(path, state, createKey(), history.location);
    transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {
      if (!ok) return;
      var href = createHref(location);
      var key = location.key,
          state = location.state;

      if (canUseHistory) {
        globalHistory.pushState({
          key: key,
          state: state
        }, null, href);

        if (forceRefresh) {
          window.location.href = href;
        } else {
          var prevIndex = allKeys.indexOf(history.location.key);
          var nextKeys = allKeys.slice(0, prevIndex === -1 ? 0 : prevIndex + 1);
          nextKeys.push(location.key);
          allKeys = nextKeys;
          setState({
            action: action,
            location: location
          });
        }
      } else {
        warning(state === undefined, 'Browser history cannot push state in browsers that do not support HTML5 history');
        window.location.href = href;
      }
    });
  }

  function replace(path, state) {
    warning(!(typeof path === 'object' && path.state !== undefined && state !== undefined), 'You should avoid providing a 2nd state argument to replace when the 1st ' + 'argument is a location-like object that already has state; it is ignored');
    var action = 'REPLACE';
    var location = createLocation(path, state, createKey(), history.location);
    transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {
      if (!ok) return;
      var href = createHref(location);
      var key = location.key,
          state = location.state;

      if (canUseHistory) {
        globalHistory.replaceState({
          key: key,
          state: state
        }, null, href);

        if (forceRefresh) {
          window.location.replace(href);
        } else {
          var prevIndex = allKeys.indexOf(history.location.key);
          if (prevIndex !== -1) allKeys[prevIndex] = location.key;
          setState({
            action: action,
            location: location
          });
        }
      } else {
        warning(state === undefined, 'Browser history cannot replace state in browsers that do not support HTML5 history');
        window.location.replace(href);
      }
    });
  }

  function go(n) {
    globalHistory.go(n);
  }

  function goBack() {
    go(-1);
  }

  function goForward() {
    go(1);
  }

  var listenerCount = 0;

  function checkDOMListeners(delta) {
    listenerCount += delta;

    if (listenerCount === 1 && delta === 1) {
      window.addEventListener(PopStateEvent, handlePopState);
      if (needsHashChangeListener) window.addEventListener(HashChangeEvent, handleHashChange);
    } else if (listenerCount === 0) {
      window.removeEventListener(PopStateEvent, handlePopState);
      if (needsHashChangeListener) window.removeEventListener(HashChangeEvent, handleHashChange);
    }
  }

  var isBlocked = false;

  function block(prompt) {
    if (prompt === void 0) {
      prompt = false;
    }

    var unblock = transitionManager.setPrompt(prompt);

    if (!isBlocked) {
      checkDOMListeners(1);
      isBlocked = true;
    }

    return function () {
      if (isBlocked) {
        isBlocked = false;
        checkDOMListeners(-1);
      }

      return unblock();
    };
  }

  function listen(listener) {
    var unlisten = transitionManager.appendListener(listener);
    checkDOMListeners(1);
    return function () {
      checkDOMListeners(-1);
      unlisten();
    };
  }

  var history = {
    length: globalHistory.length,
    action: 'POP',
    location: initialLocation,
    createHref: createHref,
    push: push,
    replace: replace,
    go: go,
    goBack: goBack,
    goForward: goForward,
    block: block,
    listen: listen
  };
  return history;
}

var HashChangeEvent$1 = 'hashchange';
var HashPathCoders = {
  hashbang: {
    encodePath: function encodePath(path) {
      return path.charAt(0) === '!' ? path : '!/' + stripLeadingSlash(path);
    },
    decodePath: function decodePath(path) {
      return path.charAt(0) === '!' ? path.substr(1) : path;
    }
  },
  noslash: {
    encodePath: stripLeadingSlash,
    decodePath: addLeadingSlash
  },
  slash: {
    encodePath: addLeadingSlash,
    decodePath: addLeadingSlash
  }
};

function getHashPath() {
  // We can't use window.location.hash here because it's not
  // consistent across browsers - Firefox will pre-decode it!
  var href = window.location.href;
  var hashIndex = href.indexOf('#');
  return hashIndex === -1 ? '' : href.substring(hashIndex + 1);
}

function pushHashPath(path) {
  window.location.hash = path;
}

function replaceHashPath(path) {
  var hashIndex = window.location.href.indexOf('#');
  window.location.replace(window.location.href.slice(0, hashIndex >= 0 ? hashIndex : 0) + '#' + path);
}

function createHashHistory(props) {
  if (props === void 0) {
    props = {};
  }

  !canUseDOM ? invariant(false, 'Hash history needs a DOM') : void 0;
  var globalHistory = window.history;
  var canGoWithoutReload = supportsGoWithoutReloadUsingHash();
  var _props = props,
      _props$getUserConfirm = _props.getUserConfirmation,
      getUserConfirmation = _props$getUserConfirm === void 0 ? getConfirmation : _props$getUserConfirm,
      _props$hashType = _props.hashType,
      hashType = _props$hashType === void 0 ? 'slash' : _props$hashType;
  var basename = props.basename ? stripTrailingSlash(addLeadingSlash(props.basename)) : '';
  var _HashPathCoders$hashT = HashPathCoders[hashType],
      encodePath = _HashPathCoders$hashT.encodePath,
      decodePath = _HashPathCoders$hashT.decodePath;

  function getDOMLocation() {
    var path = decodePath(getHashPath());
    warning(!basename || hasBasename(path, basename), 'You are attempting to use a basename on a page whose URL path does not begin ' + 'with the basename. Expected path "' + path + '" to begin with "' + basename + '".');
    if (basename) path = stripBasename(path, basename);
    return createLocation(path);
  }

  var transitionManager = createTransitionManager();

  function setState(nextState) {
    _extends(history, nextState);

    history.length = globalHistory.length;
    transitionManager.notifyListeners(history.location, history.action);
  }

  var forceNextPop = false;
  var ignorePath = null;

  function handleHashChange() {
    var path = getHashPath();
    var encodedPath = encodePath(path);

    if (path !== encodedPath) {
      // Ensure we always have a properly-encoded hash.
      replaceHashPath(encodedPath);
    } else {
      var location = getDOMLocation();
      var prevLocation = history.location;
      if (!forceNextPop && locationsAreEqual(prevLocation, location)) return; // A hashchange doesn't always == location change.

      if (ignorePath === createPath(location)) return; // Ignore this change; we already setState in push/replace.

      ignorePath = null;
      handlePop(location);
    }
  }

  function handlePop(location) {
    if (forceNextPop) {
      forceNextPop = false;
      setState();
    } else {
      var action = 'POP';
      transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {
        if (ok) {
          setState({
            action: action,
            location: location
          });
        } else {
          revertPop(location);
        }
      });
    }
  }

  function revertPop(fromLocation) {
    var toLocation = history.location; // TODO: We could probably make this more reliable by
    // keeping a list of paths we've seen in sessionStorage.
    // Instead, we just default to 0 for paths we don't know.

    var toIndex = allPaths.lastIndexOf(createPath(toLocation));
    if (toIndex === -1) toIndex = 0;
    var fromIndex = allPaths.lastIndexOf(createPath(fromLocation));
    if (fromIndex === -1) fromIndex = 0;
    var delta = toIndex - fromIndex;

    if (delta) {
      forceNextPop = true;
      go(delta);
    }
  } // Ensure the hash is encoded properly before doing anything else.


  var path = getHashPath();
  var encodedPath = encodePath(path);
  if (path !== encodedPath) replaceHashPath(encodedPath);
  var initialLocation = getDOMLocation();
  var allPaths = [createPath(initialLocation)]; // Public interface

  function createHref(location) {
    return '#' + encodePath(basename + createPath(location));
  }

  function push(path, state) {
    warning(state === undefined, 'Hash history cannot push state; it is ignored');
    var action = 'PUSH';
    var location = createLocation(path, undefined, undefined, history.location);
    transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {
      if (!ok) return;
      var path = createPath(location);
      var encodedPath = encodePath(basename + path);
      var hashChanged = getHashPath() !== encodedPath;

      if (hashChanged) {
        // We cannot tell if a hashchange was caused by a PUSH, so we'd
        // rather setState here and ignore the hashchange. The caveat here
        // is that other hash histories in the page will consider it a POP.
        ignorePath = path;
        pushHashPath(encodedPath);
        var prevIndex = allPaths.lastIndexOf(createPath(history.location));
        var nextPaths = allPaths.slice(0, prevIndex === -1 ? 0 : prevIndex + 1);
        nextPaths.push(path);
        allPaths = nextPaths;
        setState({
          action: action,
          location: location
        });
      } else {
        warning(false, 'Hash history cannot PUSH the same path; a new entry will not be added to the history stack');
        setState();
      }
    });
  }

  function replace(path, state) {
    warning(state === undefined, 'Hash history cannot replace state; it is ignored');
    var action = 'REPLACE';
    var location = createLocation(path, undefined, undefined, history.location);
    transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {
      if (!ok) return;
      var path = createPath(location);
      var encodedPath = encodePath(basename + path);
      var hashChanged = getHashPath() !== encodedPath;

      if (hashChanged) {
        // We cannot tell if a hashchange was caused by a REPLACE, so we'd
        // rather setState here and ignore the hashchange. The caveat here
        // is that other hash histories in the page will consider it a POP.
        ignorePath = path;
        replaceHashPath(encodedPath);
      }

      var prevIndex = allPaths.indexOf(createPath(history.location));
      if (prevIndex !== -1) allPaths[prevIndex] = path;
      setState({
        action: action,
        location: location
      });
    });
  }

  function go(n) {
    warning(canGoWithoutReload, 'Hash history go(n) causes a full page reload in this browser');
    globalHistory.go(n);
  }

  function goBack() {
    go(-1);
  }

  function goForward() {
    go(1);
  }

  var listenerCount = 0;

  function checkDOMListeners(delta) {
    listenerCount += delta;

    if (listenerCount === 1 && delta === 1) {
      window.addEventListener(HashChangeEvent$1, handleHashChange);
    } else if (listenerCount === 0) {
      window.removeEventListener(HashChangeEvent$1, handleHashChange);
    }
  }

  var isBlocked = false;

  function block(prompt) {
    if (prompt === void 0) {
      prompt = false;
    }

    var unblock = transitionManager.setPrompt(prompt);

    if (!isBlocked) {
      checkDOMListeners(1);
      isBlocked = true;
    }

    return function () {
      if (isBlocked) {
        isBlocked = false;
        checkDOMListeners(-1);
      }

      return unblock();
    };
  }

  function listen(listener) {
    var unlisten = transitionManager.appendListener(listener);
    checkDOMListeners(1);
    return function () {
      checkDOMListeners(-1);
      unlisten();
    };
  }

  var history = {
    length: globalHistory.length,
    action: 'POP',
    location: initialLocation,
    createHref: createHref,
    push: push,
    replace: replace,
    go: go,
    goBack: goBack,
    goForward: goForward,
    block: block,
    listen: listen
  };
  return history;
}

function clamp(n, lowerBound, upperBound) {
  return Math.min(Math.max(n, lowerBound), upperBound);
}
/**
 * Creates a history object that stores locations in memory.
 */


function createMemoryHistory(props) {
  if (props === void 0) {
    props = {};
  }

  var _props = props,
      getUserConfirmation = _props.getUserConfirmation,
      _props$initialEntries = _props.initialEntries,
      initialEntries = _props$initialEntries === void 0 ? ['/'] : _props$initialEntries,
      _props$initialIndex = _props.initialIndex,
      initialIndex = _props$initialIndex === void 0 ? 0 : _props$initialIndex,
      _props$keyLength = _props.keyLength,
      keyLength = _props$keyLength === void 0 ? 6 : _props$keyLength;
  var transitionManager = createTransitionManager();

  function setState(nextState) {
    _extends(history, nextState);

    history.length = history.entries.length;
    transitionManager.notifyListeners(history.location, history.action);
  }

  function createKey() {
    return Math.random().toString(36).substr(2, keyLength);
  }

  var index = clamp(initialIndex, 0, initialEntries.length - 1);
  var entries = initialEntries.map(function (entry) {
    return typeof entry === 'string' ? createLocation(entry, undefined, createKey()) : createLocation(entry, undefined, entry.key || createKey());
  }); // Public interface

  var createHref = createPath;

  function push(path, state) {
    warning(!(typeof path === 'object' && path.state !== undefined && state !== undefined), 'You should avoid providing a 2nd state argument to push when the 1st ' + 'argument is a location-like object that already has state; it is ignored');
    var action = 'PUSH';
    var location = createLocation(path, state, createKey(), history.location);
    transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {
      if (!ok) return;
      var prevIndex = history.index;
      var nextIndex = prevIndex + 1;
      var nextEntries = history.entries.slice(0);

      if (nextEntries.length > nextIndex) {
        nextEntries.splice(nextIndex, nextEntries.length - nextIndex, location);
      } else {
        nextEntries.push(location);
      }

      setState({
        action: action,
        location: location,
        index: nextIndex,
        entries: nextEntries
      });
    });
  }

  function replace(path, state) {
    warning(!(typeof path === 'object' && path.state !== undefined && state !== undefined), 'You should avoid providing a 2nd state argument to replace when the 1st ' + 'argument is a location-like object that already has state; it is ignored');
    var action = 'REPLACE';
    var location = createLocation(path, state, createKey(), history.location);
    transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {
      if (!ok) return;
      history.entries[history.index] = location;
      setState({
        action: action,
        location: location
      });
    });
  }

  function go(n) {
    var nextIndex = clamp(history.index + n, 0, history.entries.length - 1);
    var action = 'POP';
    var location = history.entries[nextIndex];
    transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {
      if (ok) {
        setState({
          action: action,
          location: location,
          index: nextIndex
        });
      } else {
        // Mimic the behavior of DOM histories by
        // causing a render after a cancelled POP.
        setState();
      }
    });
  }

  function goBack() {
    go(-1);
  }

  function goForward() {
    go(1);
  }

  function canGo(n) {
    var nextIndex = history.index + n;
    return nextIndex >= 0 && nextIndex < history.entries.length;
  }

  function block(prompt) {
    if (prompt === void 0) {
      prompt = false;
    }

    return transitionManager.setPrompt(prompt);
  }

  function listen(listener) {
    return transitionManager.appendListener(listener);
  }

  var history = {
    length: entries.length,
    action: 'POP',
    location: entries[index],
    index: index,
    entries: entries,
    createHref: createHref,
    push: push,
    replace: replace,
    go: go,
    goBack: goBack,
    goForward: goForward,
    canGo: canGo,
    block: block,
    listen: listen
  };
  return history;
}

exports.createBrowserHistory = createBrowserHistory;
exports.createHashHistory = createHashHistory;
exports.createMemoryHistory = createMemoryHistory;
exports.createLocation = createLocation;
exports.locationsAreEqual = locationsAreEqual;
exports.parsePath = parsePath;
exports.createPath = createPath;

},{"resolve-pathname":123,"tiny-invariant":124,"tiny-warning":125,"value-equal":126}],38:[function(require,module,exports){
"use strict";function _interopDefault(n){return n&&"object"==typeof n&&"default"in n?n.default:n}Object.defineProperty(exports,"__esModule",{value:!0});var resolvePathname=_interopDefault(require("resolve-pathname")),valueEqual=_interopDefault(require("value-equal"));require("tiny-warning");var invariant=_interopDefault(require("tiny-invariant"));function _extends(){return(_extends=Object.assign||function(n){for(var t=1;t<arguments.length;t++){var e=arguments[t];for(var a in e)Object.prototype.hasOwnProperty.call(e,a)&&(n[a]=e[a])}return n}).apply(this,arguments)}function addLeadingSlash(n){return"/"===n.charAt(0)?n:"/"+n}function stripLeadingSlash(n){return"/"===n.charAt(0)?n.substr(1):n}function hasBasename(n,t){return new RegExp("^"+t+"(\\/|\\?|#|$)","i").test(n)}function stripBasename(n,t){return hasBasename(n,t)?n.substr(t.length):n}function stripTrailingSlash(n){return"/"===n.charAt(n.length-1)?n.slice(0,-1):n}function parsePath(n){var t=n||"/",e="",a="",o=t.indexOf("#");-1!==o&&(a=t.substr(o),t=t.substr(0,o));var r=t.indexOf("?");return-1!==r&&(e=t.substr(r),t=t.substr(0,r)),{pathname:t,search:"?"===e?"":e,hash:"#"===a?"":a}}function createPath(n){var t=n.pathname,e=n.search,a=n.hash,o=t||"/";return e&&"?"!==e&&(o+="?"===e.charAt(0)?e:"?"+e),a&&"#"!==a&&(o+="#"===a.charAt(0)?a:"#"+a),o}function createLocation(n,t,e,a){var o;"string"==typeof n?(o=parsePath(n)).state=t:(void 0===(o=_extends({},n)).pathname&&(o.pathname=""),o.search?"?"!==o.search.charAt(0)&&(o.search="?"+o.search):o.search="",o.hash?"#"!==o.hash.charAt(0)&&(o.hash="#"+o.hash):o.hash="",void 0!==t&&void 0===o.state&&(o.state=t));try{o.pathname=decodeURI(o.pathname)}catch(n){throw n instanceof URIError?new URIError('Pathname "'+o.pathname+'" could not be decoded. This is likely caused by an invalid percent-encoding.'):n}return e&&(o.key=e),a?o.pathname?"/"!==o.pathname.charAt(0)&&(o.pathname=resolvePathname(o.pathname,a.pathname)):o.pathname=a.pathname:o.pathname||(o.pathname="/"),o}function locationsAreEqual(n,t){return n.pathname===t.pathname&&n.search===t.search&&n.hash===t.hash&&n.key===t.key&&valueEqual(n.state,t.state)}function createTransitionManager(){var r=null;var a=[];return{setPrompt:function(n){return r=n,function(){r===n&&(r=null)}},confirmTransitionTo:function(n,t,e,a){if(null!=r){var o="function"==typeof r?r(n,t):r;"string"==typeof o?"function"==typeof e?e(o,a):a(!0):a(!1!==o)}else a(!0)},appendListener:function(n){var t=!0;function e(){t&&n.apply(void 0,arguments)}return a.push(e),function(){t=!1,a=a.filter(function(n){return n!==e})}},notifyListeners:function(){for(var n=arguments.length,t=new Array(n),e=0;e<n;e++)t[e]=arguments[e];a.forEach(function(n){return n.apply(void 0,t)})}}}var canUseDOM=!("undefined"==typeof window||!window.document||!window.document.createElement);function getConfirmation(n,t){t(window.confirm(n))}function supportsHistory(){var n=window.navigator.userAgent;return(-1===n.indexOf("Android 2.")&&-1===n.indexOf("Android 4.0")||-1===n.indexOf("Mobile Safari")||-1!==n.indexOf("Chrome")||-1!==n.indexOf("Windows Phone"))&&(window.history&&"pushState"in window.history)}function supportsPopStateOnHashChange(){return-1===window.navigator.userAgent.indexOf("Trident")}function supportsGoWithoutReloadUsingHash(){return-1===window.navigator.userAgent.indexOf("Firefox")}function isExtraneousPopstateEvent(n){void 0===n.state&&navigator.userAgent.indexOf("CriOS")}var PopStateEvent="popstate",HashChangeEvent="hashchange";function getHistoryState(){try{return window.history.state||{}}catch(n){return{}}}function createBrowserHistory(n){void 0===n&&(n={}),canUseDOM||invariant(!1);var c=window.history,s=supportsHistory(),t=!supportsPopStateOnHashChange(),e=n,a=e.forceRefresh,h=void 0!==a&&a,o=e.getUserConfirmation,u=void 0===o?getConfirmation:o,r=e.keyLength,i=void 0===r?6:r,f=n.basename?stripTrailingSlash(addLeadingSlash(n.basename)):"";function l(n){var t=n||{},e=t.key,a=t.state,o=window.location,r=o.pathname+o.search+o.hash;return f&&(r=stripBasename(r,f)),createLocation(r,a,e)}function d(){return Math.random().toString(36).substr(2,i)}var v=createTransitionManager();function p(n){_extends(T,n),T.length=c.length,v.notifyListeners(T.location,T.action)}function g(n){isExtraneousPopstateEvent(n)||w(l(n.state))}function P(){w(l(getHistoryState()))}var m=!1;function w(t){if(m)m=!1,p();else{v.confirmTransitionTo(t,"POP",u,function(n){n?p({action:"POP",location:t}):function(n){var t=T.location,e=H.indexOf(t.key);-1===e&&(e=0);var a=H.indexOf(n.key);-1===a&&(a=0);var o=e-a;o&&(m=!0,L(o))}(t)})}}var y=l(getHistoryState()),H=[y.key];function x(n){return f+createPath(n)}function L(n){c.go(n)}var O=0;function E(n){1===(O+=n)&&1===n?(window.addEventListener(PopStateEvent,g),t&&window.addEventListener(HashChangeEvent,P)):0===O&&(window.removeEventListener(PopStateEvent,g),t&&window.removeEventListener(HashChangeEvent,P))}var S=!1;var T={length:c.length,action:"POP",location:y,createHref:x,push:function(n,t){var i=createLocation(n,t,d(),T.location);v.confirmTransitionTo(i,"PUSH",u,function(n){if(n){var t=x(i),e=i.key,a=i.state;if(s)if(c.pushState({key:e,state:a},null,t),h)window.location.href=t;else{var o=H.indexOf(T.location.key),r=H.slice(0,-1===o?0:o+1);r.push(i.key),H=r,p({action:"PUSH",location:i})}else window.location.href=t}})},replace:function(n,t){var r="REPLACE",i=createLocation(n,t,d(),T.location);v.confirmTransitionTo(i,r,u,function(n){if(n){var t=x(i),e=i.key,a=i.state;if(s)if(c.replaceState({key:e,state:a},null,t),h)window.location.replace(t);else{var o=H.indexOf(T.location.key);-1!==o&&(H[o]=i.key),p({action:r,location:i})}else window.location.replace(t)}})},go:L,goBack:function(){L(-1)},goForward:function(){L(1)},block:function(n){void 0===n&&(n=!1);var t=v.setPrompt(n);return S||(E(1),S=!0),function(){return S&&(S=!1,E(-1)),t()}},listen:function(n){var t=v.appendListener(n);return E(1),function(){E(-1),t()}}};return T}var HashChangeEvent$1="hashchange",HashPathCoders={hashbang:{encodePath:function(n){return"!"===n.charAt(0)?n:"!/"+stripLeadingSlash(n)},decodePath:function(n){return"!"===n.charAt(0)?n.substr(1):n}},noslash:{encodePath:stripLeadingSlash,decodePath:addLeadingSlash},slash:{encodePath:addLeadingSlash,decodePath:addLeadingSlash}};function getHashPath(){var n=window.location.href,t=n.indexOf("#");return-1===t?"":n.substring(t+1)}function pushHashPath(n){window.location.hash=n}function replaceHashPath(n){var t=window.location.href.indexOf("#");window.location.replace(window.location.href.slice(0,0<=t?t:0)+"#"+n)}function createHashHistory(n){void 0===n&&(n={}),canUseDOM||invariant(!1);var t=window.history,e=(supportsGoWithoutReloadUsingHash(),n),a=e.getUserConfirmation,i=void 0===a?getConfirmation:a,o=e.hashType,r=void 0===o?"slash":o,c=n.basename?stripTrailingSlash(addLeadingSlash(n.basename)):"",s=HashPathCoders[r],h=s.encodePath,u=s.decodePath;function f(){var n=u(getHashPath());return c&&(n=stripBasename(n,c)),createLocation(n)}var l=createTransitionManager();function d(n){_extends(E,n),E.length=t.length,l.notifyListeners(E.location,E.action)}var v=!1,p=null;function g(){var n=getHashPath(),t=h(n);if(n!==t)replaceHashPath(t);else{var e=f(),a=E.location;if(!v&&locationsAreEqual(a,e))return;if(p===createPath(e))return;p=null,function(t){if(v)v=!1,d();else{l.confirmTransitionTo(t,"POP",i,function(n){n?d({action:"POP",location:t}):function(n){var t=E.location,e=y.lastIndexOf(createPath(t));-1===e&&(e=0);var a=y.lastIndexOf(createPath(n));-1===a&&(a=0);var o=e-a;o&&(v=!0,H(o))}(t)})}}(e)}}var P=getHashPath(),m=h(P);P!==m&&replaceHashPath(m);var w=f(),y=[createPath(w)];function H(n){t.go(n)}var x=0;function L(n){1===(x+=n)&&1===n?window.addEventListener(HashChangeEvent$1,g):0===x&&window.removeEventListener(HashChangeEvent$1,g)}var O=!1;var E={length:t.length,action:"POP",location:w,createHref:function(n){return"#"+h(c+createPath(n))},push:function(n,t){var r=createLocation(n,void 0,void 0,E.location);l.confirmTransitionTo(r,"PUSH",i,function(n){if(n){var t=createPath(r),e=h(c+t);if(getHashPath()!==e){p=t,pushHashPath(e);var a=y.lastIndexOf(createPath(E.location)),o=y.slice(0,-1===a?0:a+1);o.push(t),y=o,d({action:"PUSH",location:r})}else d()}})},replace:function(n,t){var o="REPLACE",r=createLocation(n,void 0,void 0,E.location);l.confirmTransitionTo(r,o,i,function(n){if(n){var t=createPath(r),e=h(c+t);getHashPath()!==e&&(p=t,replaceHashPath(e));var a=y.indexOf(createPath(E.location));-1!==a&&(y[a]=t),d({action:o,location:r})}})},go:H,goBack:function(){H(-1)},goForward:function(){H(1)},block:function(n){void 0===n&&(n=!1);var t=l.setPrompt(n);return O||(L(1),O=!0),function(){return O&&(O=!1,L(-1)),t()}},listen:function(n){var t=l.appendListener(n);return L(1),function(){L(-1),t()}}};return E}function clamp(n,t,e){return Math.min(Math.max(n,t),e)}function createMemoryHistory(n){void 0===n&&(n={});var t=n,o=t.getUserConfirmation,e=t.initialEntries,a=void 0===e?["/"]:e,r=t.initialIndex,i=void 0===r?0:r,c=t.keyLength,s=void 0===c?6:c,h=createTransitionManager();function u(n){_extends(g,n),g.length=g.entries.length,h.notifyListeners(g.location,g.action)}function f(){return Math.random().toString(36).substr(2,s)}var l=clamp(i,0,a.length-1),d=a.map(function(n){return createLocation(n,void 0,"string"==typeof n?f():n.key||f())}),v=createPath;function p(n){var t=clamp(g.index+n,0,g.entries.length-1),e=g.entries[t];h.confirmTransitionTo(e,"POP",o,function(n){n?u({action:"POP",location:e,index:t}):u()})}var g={length:d.length,action:"POP",location:d[l],index:l,entries:d,createHref:v,push:function(n,t){var a=createLocation(n,t,f(),g.location);h.confirmTransitionTo(a,"PUSH",o,function(n){if(n){var t=g.index+1,e=g.entries.slice(0);e.length>t?e.splice(t,e.length-t,a):e.push(a),u({action:"PUSH",location:a,index:t,entries:e})}})},replace:function(n,t){var e="REPLACE",a=createLocation(n,t,f(),g.location);h.confirmTransitionTo(a,e,o,function(n){n&&(g.entries[g.index]=a,u({action:e,location:a}))})},go:p,goBack:function(){p(-1)},goForward:function(){p(1)},canGo:function(n){var t=g.index+n;return 0<=t&&t<g.entries.length},block:function(n){return void 0===n&&(n=!1),h.setPrompt(n)},listen:function(n){return h.appendListener(n)}};return g}exports.createBrowserHistory=createBrowserHistory,exports.createHashHistory=createHashHistory,exports.createMemoryHistory=createMemoryHistory,exports.createLocation=createLocation,exports.locationsAreEqual=locationsAreEqual,exports.parsePath=parsePath,exports.createPath=createPath;

},{"resolve-pathname":123,"tiny-invariant":124,"tiny-warning":125,"value-equal":126}],39:[function(require,module,exports){
(function (process){
'use strict';

if (process.env.NODE_ENV === 'production') {
  module.exports = require('./cjs/history.min.js');
} else {
  module.exports = require('./cjs/history.js');
}

}).call(this,require('_process'))

},{"./cjs/history.js":37,"./cjs/history.min.js":38,"_process":46}],40:[function(require,module,exports){
'use strict';

/**
 * Copyright 2015, Yahoo! Inc.
 * Copyrights licensed under the New BSD License. See the accompanying LICENSE file for terms.
 */
var REACT_STATICS = {
    childContextTypes: true,
    contextTypes: true,
    defaultProps: true,
    displayName: true,
    getDefaultProps: true,
    getDerivedStateFromProps: true,
    mixins: true,
    propTypes: true,
    type: true
};

var KNOWN_STATICS = {
    name: true,
    length: true,
    prototype: true,
    caller: true,
    callee: true,
    arguments: true,
    arity: true
};

var defineProperty = Object.defineProperty;
var getOwnPropertyNames = Object.getOwnPropertyNames;
var getOwnPropertySymbols = Object.getOwnPropertySymbols;
var getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;
var getPrototypeOf = Object.getPrototypeOf;
var objectPrototype = getPrototypeOf && getPrototypeOf(Object);

function hoistNonReactStatics(targetComponent, sourceComponent, blacklist) {
    if (typeof sourceComponent !== 'string') { // don't hoist over string (html) components

        if (objectPrototype) {
            var inheritedComponent = getPrototypeOf(sourceComponent);
            if (inheritedComponent && inheritedComponent !== objectPrototype) {
                hoistNonReactStatics(targetComponent, inheritedComponent, blacklist);
            }
        }

        var keys = getOwnPropertyNames(sourceComponent);

        if (getOwnPropertySymbols) {
            keys = keys.concat(getOwnPropertySymbols(sourceComponent));
        }

        for (var i = 0; i < keys.length; ++i) {
            var key = keys[i];
            if (!REACT_STATICS[key] && !KNOWN_STATICS[key] && (!blacklist || !blacklist[key])) {
                var descriptor = getOwnPropertyDescriptor(sourceComponent, key);
                try { // Avoid failures from read-only properties
                    defineProperty(targetComponent, key, descriptor);
                } catch (e) {}
            }
        }

        return targetComponent;
    }

    return targetComponent;
}

module.exports = hoistNonReactStatics;

},{}],41:[function(require,module,exports){
(function (process){
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

'use strict';

/**
 * Use invariant() to assert state which your program assumes to be true.
 *
 * Provide sprintf-style format (only %s is supported) and arguments
 * to provide information about what broke and what you were
 * expecting.
 *
 * The invariant message will be stripped in production, but the invariant
 * will remain to ensure logic does not differ in production.
 */

var invariant = function(condition, format, a, b, c, d, e, f) {
  if (process.env.NODE_ENV !== 'production') {
    if (format === undefined) {
      throw new Error('invariant requires an error message argument');
    }
  }

  if (!condition) {
    var error;
    if (format === undefined) {
      error = new Error(
        'Minified exception occurred; use the non-minified dev environment ' +
        'for the full error message and additional helpful warnings.'
      );
    } else {
      var args = [a, b, c, d, e, f];
      var argIndex = 0;
      error = new Error(
        format.replace(/%s/g, function() { return args[argIndex++]; })
      );
      error.name = 'Invariant Violation';
    }

    error.framesToPop = 1; // we don't care about invariant's own frame
    throw error;
  }
};

module.exports = invariant;

}).call(this,require('_process'))

},{"_process":46}],42:[function(require,module,exports){
module.exports = Array.isArray || function (arr) {
  return Object.prototype.toString.call(arr) == '[object Array]';
};

},{}],43:[function(require,module,exports){
//! moment.js

;(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :
    typeof define === 'function' && define.amd ? define(factory) :
    global.moment = factory()
}(this, (function () { 'use strict';

    var hookCallback;

    function hooks () {
        return hookCallback.apply(null, arguments);
    }

    // This is done to register the method called with moment()
    // without creating circular dependencies.
    function setHookCallback (callback) {
        hookCallback = callback;
    }

    function isArray(input) {
        return input instanceof Array || Object.prototype.toString.call(input) === '[object Array]';
    }

    function isObject(input) {
        // IE8 will treat undefined and null as object if it wasn't for
        // input != null
        return input != null && Object.prototype.toString.call(input) === '[object Object]';
    }

    function isObjectEmpty(obj) {
        if (Object.getOwnPropertyNames) {
            return (Object.getOwnPropertyNames(obj).length === 0);
        } else {
            var k;
            for (k in obj) {
                if (obj.hasOwnProperty(k)) {
                    return false;
                }
            }
            return true;
        }
    }

    function isUndefined(input) {
        return input === void 0;
    }

    function isNumber(input) {
        return typeof input === 'number' || Object.prototype.toString.call(input) === '[object Number]';
    }

    function isDate(input) {
        return input instanceof Date || Object.prototype.toString.call(input) === '[object Date]';
    }

    function map(arr, fn) {
        var res = [], i;
        for (i = 0; i < arr.length; ++i) {
            res.push(fn(arr[i], i));
        }
        return res;
    }

    function hasOwnProp(a, b) {
        return Object.prototype.hasOwnProperty.call(a, b);
    }

    function extend(a, b) {
        for (var i in b) {
            if (hasOwnProp(b, i)) {
                a[i] = b[i];
            }
        }

        if (hasOwnProp(b, 'toString')) {
            a.toString = b.toString;
        }

        if (hasOwnProp(b, 'valueOf')) {
            a.valueOf = b.valueOf;
        }

        return a;
    }

    function createUTC (input, format, locale, strict) {
        return createLocalOrUTC(input, format, locale, strict, true).utc();
    }

    function defaultParsingFlags() {
        // We need to deep clone this object.
        return {
            empty           : false,
            unusedTokens    : [],
            unusedInput     : [],
            overflow        : -2,
            charsLeftOver   : 0,
            nullInput       : false,
            invalidMonth    : null,
            invalidFormat   : false,
            userInvalidated : false,
            iso             : false,
            parsedDateParts : [],
            meridiem        : null,
            rfc2822         : false,
            weekdayMismatch : false
        };
    }

    function getParsingFlags(m) {
        if (m._pf == null) {
            m._pf = defaultParsingFlags();
        }
        return m._pf;
    }

    var some;
    if (Array.prototype.some) {
        some = Array.prototype.some;
    } else {
        some = function (fun) {
            var t = Object(this);
            var len = t.length >>> 0;

            for (var i = 0; i < len; i++) {
                if (i in t && fun.call(this, t[i], i, t)) {
                    return true;
                }
            }

            return false;
        };
    }

    function isValid(m) {
        if (m._isValid == null) {
            var flags = getParsingFlags(m);
            var parsedParts = some.call(flags.parsedDateParts, function (i) {
                return i != null;
            });
            var isNowValid = !isNaN(m._d.getTime()) &&
                flags.overflow < 0 &&
                !flags.empty &&
                !flags.invalidMonth &&
                !flags.invalidWeekday &&
                !flags.weekdayMismatch &&
                !flags.nullInput &&
                !flags.invalidFormat &&
                !flags.userInvalidated &&
                (!flags.meridiem || (flags.meridiem && parsedParts));

            if (m._strict) {
                isNowValid = isNowValid &&
                    flags.charsLeftOver === 0 &&
                    flags.unusedTokens.length === 0 &&
                    flags.bigHour === undefined;
            }

            if (Object.isFrozen == null || !Object.isFrozen(m)) {
                m._isValid = isNowValid;
            }
            else {
                return isNowValid;
            }
        }
        return m._isValid;
    }

    function createInvalid (flags) {
        var m = createUTC(NaN);
        if (flags != null) {
            extend(getParsingFlags(m), flags);
        }
        else {
            getParsingFlags(m).userInvalidated = true;
        }

        return m;
    }

    // Plugins that add properties should also add the key here (null value),
    // so we can properly clone ourselves.
    var momentProperties = hooks.momentProperties = [];

    function copyConfig(to, from) {
        var i, prop, val;

        if (!isUndefined(from._isAMomentObject)) {
            to._isAMomentObject = from._isAMomentObject;
        }
        if (!isUndefined(from._i)) {
            to._i = from._i;
        }
        if (!isUndefined(from._f)) {
            to._f = from._f;
        }
        if (!isUndefined(from._l)) {
            to._l = from._l;
        }
        if (!isUndefined(from._strict)) {
            to._strict = from._strict;
        }
        if (!isUndefined(from._tzm)) {
            to._tzm = from._tzm;
        }
        if (!isUndefined(from._isUTC)) {
            to._isUTC = from._isUTC;
        }
        if (!isUndefined(from._offset)) {
            to._offset = from._offset;
        }
        if (!isUndefined(from._pf)) {
            to._pf = getParsingFlags(from);
        }
        if (!isUndefined(from._locale)) {
            to._locale = from._locale;
        }

        if (momentProperties.length > 0) {
            for (i = 0; i < momentProperties.length; i++) {
                prop = momentProperties[i];
                val = from[prop];
                if (!isUndefined(val)) {
                    to[prop] = val;
                }
            }
        }

        return to;
    }

    var updateInProgress = false;

    // Moment prototype object
    function Moment(config) {
        copyConfig(this, config);
        this._d = new Date(config._d != null ? config._d.getTime() : NaN);
        if (!this.isValid()) {
            this._d = new Date(NaN);
        }
        // Prevent infinite loop in case updateOffset creates new moment
        // objects.
        if (updateInProgress === false) {
            updateInProgress = true;
            hooks.updateOffset(this);
            updateInProgress = false;
        }
    }

    function isMoment (obj) {
        return obj instanceof Moment || (obj != null && obj._isAMomentObject != null);
    }

    function absFloor (number) {
        if (number < 0) {
            // -0 -> 0
            return Math.ceil(number) || 0;
        } else {
            return Math.floor(number);
        }
    }

    function toInt(argumentForCoercion) {
        var coercedNumber = +argumentForCoercion,
            value = 0;

        if (coercedNumber !== 0 && isFinite(coercedNumber)) {
            value = absFloor(coercedNumber);
        }

        return value;
    }

    // compare two arrays, return the number of differences
    function compareArrays(array1, array2, dontConvert) {
        var len = Math.min(array1.length, array2.length),
            lengthDiff = Math.abs(array1.length - array2.length),
            diffs = 0,
            i;
        for (i = 0; i < len; i++) {
            if ((dontConvert && array1[i] !== array2[i]) ||
                (!dontConvert && toInt(array1[i]) !== toInt(array2[i]))) {
                diffs++;
            }
        }
        return diffs + lengthDiff;
    }

    function warn(msg) {
        if (hooks.suppressDeprecationWarnings === false &&
                (typeof console !==  'undefined') && console.warn) {
            console.warn('Deprecation warning: ' + msg);
        }
    }

    function deprecate(msg, fn) {
        var firstTime = true;

        return extend(function () {
            if (hooks.deprecationHandler != null) {
                hooks.deprecationHandler(null, msg);
            }
            if (firstTime) {
                var args = [];
                var arg;
                for (var i = 0; i < arguments.length; i++) {
                    arg = '';
                    if (typeof arguments[i] === 'object') {
                        arg += '\n[' + i + '] ';
                        for (var key in arguments[0]) {
                            arg += key + ': ' + arguments[0][key] + ', ';
                        }
                        arg = arg.slice(0, -2); // Remove trailing comma and space
                    } else {
                        arg = arguments[i];
                    }
                    args.push(arg);
                }
                warn(msg + '\nArguments: ' + Array.prototype.slice.call(args).join('') + '\n' + (new Error()).stack);
                firstTime = false;
            }
            return fn.apply(this, arguments);
        }, fn);
    }

    var deprecations = {};

    function deprecateSimple(name, msg) {
        if (hooks.deprecationHandler != null) {
            hooks.deprecationHandler(name, msg);
        }
        if (!deprecations[name]) {
            warn(msg);
            deprecations[name] = true;
        }
    }

    hooks.suppressDeprecationWarnings = false;
    hooks.deprecationHandler = null;

    function isFunction(input) {
        return input instanceof Function || Object.prototype.toString.call(input) === '[object Function]';
    }

    function set (config) {
        var prop, i;
        for (i in config) {
            prop = config[i];
            if (isFunction(prop)) {
                this[i] = prop;
            } else {
                this['_' + i] = prop;
            }
        }
        this._config = config;
        // Lenient ordinal parsing accepts just a number in addition to
        // number + (possibly) stuff coming from _dayOfMonthOrdinalParse.
        // TODO: Remove "ordinalParse" fallback in next major release.
        this._dayOfMonthOrdinalParseLenient = new RegExp(
            (this._dayOfMonthOrdinalParse.source || this._ordinalParse.source) +
                '|' + (/\d{1,2}/).source);
    }

    function mergeConfigs(parentConfig, childConfig) {
        var res = extend({}, parentConfig), prop;
        for (prop in childConfig) {
            if (hasOwnProp(childConfig, prop)) {
                if (isObject(parentConfig[prop]) && isObject(childConfig[prop])) {
                    res[prop] = {};
                    extend(res[prop], parentConfig[prop]);
                    extend(res[prop], childConfig[prop]);
                } else if (childConfig[prop] != null) {
                    res[prop] = childConfig[prop];
                } else {
                    delete res[prop];
                }
            }
        }
        for (prop in parentConfig) {
            if (hasOwnProp(parentConfig, prop) &&
                    !hasOwnProp(childConfig, prop) &&
                    isObject(parentConfig[prop])) {
                // make sure changes to properties don't modify parent config
                res[prop] = extend({}, res[prop]);
            }
        }
        return res;
    }

    function Locale(config) {
        if (config != null) {
            this.set(config);
        }
    }

    var keys;

    if (Object.keys) {
        keys = Object.keys;
    } else {
        keys = function (obj) {
            var i, res = [];
            for (i in obj) {
                if (hasOwnProp(obj, i)) {
                    res.push(i);
                }
            }
            return res;
        };
    }

    var defaultCalendar = {
        sameDay : '[Today at] LT',
        nextDay : '[Tomorrow at] LT',
        nextWeek : 'dddd [at] LT',
        lastDay : '[Yesterday at] LT',
        lastWeek : '[Last] dddd [at] LT',
        sameElse : 'L'
    };

    function calendar (key, mom, now) {
        var output = this._calendar[key] || this._calendar['sameElse'];
        return isFunction(output) ? output.call(mom, now) : output;
    }

    var defaultLongDateFormat = {
        LTS  : 'h:mm:ss A',
        LT   : 'h:mm A',
        L    : 'MM/DD/YYYY',
        LL   : 'MMMM D, YYYY',
        LLL  : 'MMMM D, YYYY h:mm A',
        LLLL : 'dddd, MMMM D, YYYY h:mm A'
    };

    function longDateFormat (key) {
        var format = this._longDateFormat[key],
            formatUpper = this._longDateFormat[key.toUpperCase()];

        if (format || !formatUpper) {
            return format;
        }

        this._longDateFormat[key] = formatUpper.replace(/MMMM|MM|DD|dddd/g, function (val) {
            return val.slice(1);
        });

        return this._longDateFormat[key];
    }

    var defaultInvalidDate = 'Invalid date';

    function invalidDate () {
        return this._invalidDate;
    }

    var defaultOrdinal = '%d';
    var defaultDayOfMonthOrdinalParse = /\d{1,2}/;

    function ordinal (number) {
        return this._ordinal.replace('%d', number);
    }

    var defaultRelativeTime = {
        future : 'in %s',
        past   : '%s ago',
        s  : 'a few seconds',
        ss : '%d seconds',
        m  : 'a minute',
        mm : '%d minutes',
        h  : 'an hour',
        hh : '%d hours',
        d  : 'a day',
        dd : '%d days',
        M  : 'a month',
        MM : '%d months',
        y  : 'a year',
        yy : '%d years'
    };

    function relativeTime (number, withoutSuffix, string, isFuture) {
        var output = this._relativeTime[string];
        return (isFunction(output)) ?
            output(number, withoutSuffix, string, isFuture) :
            output.replace(/%d/i, number);
    }

    function pastFuture (diff, output) {
        var format = this._relativeTime[diff > 0 ? 'future' : 'past'];
        return isFunction(format) ? format(output) : format.replace(/%s/i, output);
    }

    var aliases = {};

    function addUnitAlias (unit, shorthand) {
        var lowerCase = unit.toLowerCase();
        aliases[lowerCase] = aliases[lowerCase + 's'] = aliases[shorthand] = unit;
    }

    function normalizeUnits(units) {
        return typeof units === 'string' ? aliases[units] || aliases[units.toLowerCase()] : undefined;
    }

    function normalizeObjectUnits(inputObject) {
        var normalizedInput = {},
            normalizedProp,
            prop;

        for (prop in inputObject) {
            if (hasOwnProp(inputObject, prop)) {
                normalizedProp = normalizeUnits(prop);
                if (normalizedProp) {
                    normalizedInput[normalizedProp] = inputObject[prop];
                }
            }
        }

        return normalizedInput;
    }

    var priorities = {};

    function addUnitPriority(unit, priority) {
        priorities[unit] = priority;
    }

    function getPrioritizedUnits(unitsObj) {
        var units = [];
        for (var u in unitsObj) {
            units.push({unit: u, priority: priorities[u]});
        }
        units.sort(function (a, b) {
            return a.priority - b.priority;
        });
        return units;
    }

    function zeroFill(number, targetLength, forceSign) {
        var absNumber = '' + Math.abs(number),
            zerosToFill = targetLength - absNumber.length,
            sign = number >= 0;
        return (sign ? (forceSign ? '+' : '') : '-') +
            Math.pow(10, Math.max(0, zerosToFill)).toString().substr(1) + absNumber;
    }

    var formattingTokens = /(\[[^\[]*\])|(\\)?([Hh]mm(ss)?|Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Qo?|YYYYYY|YYYYY|YYYY|YY|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|kk?|mm?|ss?|S{1,9}|x|X|zz?|ZZ?|.)/g;

    var localFormattingTokens = /(\[[^\[]*\])|(\\)?(LTS|LT|LL?L?L?|l{1,4})/g;

    var formatFunctions = {};

    var formatTokenFunctions = {};

    // token:    'M'
    // padded:   ['MM', 2]
    // ordinal:  'Mo'
    // callback: function () { this.month() + 1 }
    function addFormatToken (token, padded, ordinal, callback) {
        var func = callback;
        if (typeof callback === 'string') {
            func = function () {
                return this[callback]();
            };
        }
        if (token) {
            formatTokenFunctions[token] = func;
        }
        if (padded) {
            formatTokenFunctions[padded[0]] = function () {
                return zeroFill(func.apply(this, arguments), padded[1], padded[2]);
            };
        }
        if (ordinal) {
            formatTokenFunctions[ordinal] = function () {
                return this.localeData().ordinal(func.apply(this, arguments), token);
            };
        }
    }

    function removeFormattingTokens(input) {
        if (input.match(/\[[\s\S]/)) {
            return input.replace(/^\[|\]$/g, '');
        }
        return input.replace(/\\/g, '');
    }

    function makeFormatFunction(format) {
        var array = format.match(formattingTokens), i, length;

        for (i = 0, length = array.length; i < length; i++) {
            if (formatTokenFunctions[array[i]]) {
                array[i] = formatTokenFunctions[array[i]];
            } else {
                array[i] = removeFormattingTokens(array[i]);
            }
        }

        return function (mom) {
            var output = '', i;
            for (i = 0; i < length; i++) {
                output += isFunction(array[i]) ? array[i].call(mom, format) : array[i];
            }
            return output;
        };
    }

    // format date using native date object
    function formatMoment(m, format) {
        if (!m.isValid()) {
            return m.localeData().invalidDate();
        }

        format = expandFormat(format, m.localeData());
        formatFunctions[format] = formatFunctions[format] || makeFormatFunction(format);

        return formatFunctions[format](m);
    }

    function expandFormat(format, locale) {
        var i = 5;

        function replaceLongDateFormatTokens(input) {
            return locale.longDateFormat(input) || input;
        }

        localFormattingTokens.lastIndex = 0;
        while (i >= 0 && localFormattingTokens.test(format)) {
            format = format.replace(localFormattingTokens, replaceLongDateFormatTokens);
            localFormattingTokens.lastIndex = 0;
            i -= 1;
        }

        return format;
    }

    var match1         = /\d/;            //       0 - 9
    var match2         = /\d\d/;          //      00 - 99
    var match3         = /\d{3}/;         //     000 - 999
    var match4         = /\d{4}/;         //    0000 - 9999
    var match6         = /[+-]?\d{6}/;    // -999999 - 999999
    var match1to2      = /\d\d?/;         //       0 - 99
    var match3to4      = /\d\d\d\d?/;     //     999 - 9999
    var match5to6      = /\d\d\d\d\d\d?/; //   99999 - 999999
    var match1to3      = /\d{1,3}/;       //       0 - 999
    var match1to4      = /\d{1,4}/;       //       0 - 9999
    var match1to6      = /[+-]?\d{1,6}/;  // -999999 - 999999

    var matchUnsigned  = /\d+/;           //       0 - inf
    var matchSigned    = /[+-]?\d+/;      //    -inf - inf

    var matchOffset    = /Z|[+-]\d\d:?\d\d/gi; // +00:00 -00:00 +0000 -0000 or Z
    var matchShortOffset = /Z|[+-]\d\d(?::?\d\d)?/gi; // +00 -00 +00:00 -00:00 +0000 -0000 or Z

    var matchTimestamp = /[+-]?\d+(\.\d{1,3})?/; // 123456789 123456789.123

    // any word (or two) characters or numbers including two/three word month in arabic.
    // includes scottish gaelic two word and hyphenated months
    var matchWord = /[0-9]{0,256}['a-z\u00A0-\u05FF\u0700-\uD7FF\uF900-\uFDCF\uFDF0-\uFF07\uFF10-\uFFEF]{1,256}|[\u0600-\u06FF\/]{1,256}(\s*?[\u0600-\u06FF]{1,256}){1,2}/i;

    var regexes = {};

    function addRegexToken (token, regex, strictRegex) {
        regexes[token] = isFunction(regex) ? regex : function (isStrict, localeData) {
            return (isStrict && strictRegex) ? strictRegex : regex;
        };
    }

    function getParseRegexForToken (token, config) {
        if (!hasOwnProp(regexes, token)) {
            return new RegExp(unescapeFormat(token));
        }

        return regexes[token](config._strict, config._locale);
    }

    // Code from http://stackoverflow.com/questions/3561493/is-there-a-regexp-escape-function-in-javascript
    function unescapeFormat(s) {
        return regexEscape(s.replace('\\', '').replace(/\\(\[)|\\(\])|\[([^\]\[]*)\]|\\(.)/g, function (matched, p1, p2, p3, p4) {
            return p1 || p2 || p3 || p4;
        }));
    }

    function regexEscape(s) {
        return s.replace(/[-\/\\^$*+?.()|[\]{}]/g, '\\$&');
    }

    var tokens = {};

    function addParseToken (token, callback) {
        var i, func = callback;
        if (typeof token === 'string') {
            token = [token];
        }
        if (isNumber(callback)) {
            func = function (input, array) {
                array[callback] = toInt(input);
            };
        }
        for (i = 0; i < token.length; i++) {
            tokens[token[i]] = func;
        }
    }

    function addWeekParseToken (token, callback) {
        addParseToken(token, function (input, array, config, token) {
            config._w = config._w || {};
            callback(input, config._w, config, token);
        });
    }

    function addTimeToArrayFromToken(token, input, config) {
        if (input != null && hasOwnProp(tokens, token)) {
            tokens[token](input, config._a, config, token);
        }
    }

    var YEAR = 0;
    var MONTH = 1;
    var DATE = 2;
    var HOUR = 3;
    var MINUTE = 4;
    var SECOND = 5;
    var MILLISECOND = 6;
    var WEEK = 7;
    var WEEKDAY = 8;

    // FORMATTING

    addFormatToken('Y', 0, 0, function () {
        var y = this.year();
        return y <= 9999 ? '' + y : '+' + y;
    });

    addFormatToken(0, ['YY', 2], 0, function () {
        return this.year() % 100;
    });

    addFormatToken(0, ['YYYY',   4],       0, 'year');
    addFormatToken(0, ['YYYYY',  5],       0, 'year');
    addFormatToken(0, ['YYYYYY', 6, true], 0, 'year');

    // ALIASES

    addUnitAlias('year', 'y');

    // PRIORITIES

    addUnitPriority('year', 1);

    // PARSING

    addRegexToken('Y',      matchSigned);
    addRegexToken('YY',     match1to2, match2);
    addRegexToken('YYYY',   match1to4, match4);
    addRegexToken('YYYYY',  match1to6, match6);
    addRegexToken('YYYYYY', match1to6, match6);

    addParseToken(['YYYYY', 'YYYYYY'], YEAR);
    addParseToken('YYYY', function (input, array) {
        array[YEAR] = input.length === 2 ? hooks.parseTwoDigitYear(input) : toInt(input);
    });
    addParseToken('YY', function (input, array) {
        array[YEAR] = hooks.parseTwoDigitYear(input);
    });
    addParseToken('Y', function (input, array) {
        array[YEAR] = parseInt(input, 10);
    });

    // HELPERS

    function daysInYear(year) {
        return isLeapYear(year) ? 366 : 365;
    }

    function isLeapYear(year) {
        return (year % 4 === 0 && year % 100 !== 0) || year % 400 === 0;
    }

    // HOOKS

    hooks.parseTwoDigitYear = function (input) {
        return toInt(input) + (toInt(input) > 68 ? 1900 : 2000);
    };

    // MOMENTS

    var getSetYear = makeGetSet('FullYear', true);

    function getIsLeapYear () {
        return isLeapYear(this.year());
    }

    function makeGetSet (unit, keepTime) {
        return function (value) {
            if (value != null) {
                set$1(this, unit, value);
                hooks.updateOffset(this, keepTime);
                return this;
            } else {
                return get(this, unit);
            }
        };
    }

    function get (mom, unit) {
        return mom.isValid() ?
            mom._d['get' + (mom._isUTC ? 'UTC' : '') + unit]() : NaN;
    }

    function set$1 (mom, unit, value) {
        if (mom.isValid() && !isNaN(value)) {
            if (unit === 'FullYear' && isLeapYear(mom.year()) && mom.month() === 1 && mom.date() === 29) {
                mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](value, mom.month(), daysInMonth(value, mom.month()));
            }
            else {
                mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](value);
            }
        }
    }

    // MOMENTS

    function stringGet (units) {
        units = normalizeUnits(units);
        if (isFunction(this[units])) {
            return this[units]();
        }
        return this;
    }


    function stringSet (units, value) {
        if (typeof units === 'object') {
            units = normalizeObjectUnits(units);
            var prioritized = getPrioritizedUnits(units);
            for (var i = 0; i < prioritized.length; i++) {
                this[prioritized[i].unit](units[prioritized[i].unit]);
            }
        } else {
            units = normalizeUnits(units);
            if (isFunction(this[units])) {
                return this[units](value);
            }
        }
        return this;
    }

    function mod(n, x) {
        return ((n % x) + x) % x;
    }

    var indexOf;

    if (Array.prototype.indexOf) {
        indexOf = Array.prototype.indexOf;
    } else {
        indexOf = function (o) {
            // I know
            var i;
            for (i = 0; i < this.length; ++i) {
                if (this[i] === o) {
                    return i;
                }
            }
            return -1;
        };
    }

    function daysInMonth(year, month) {
        if (isNaN(year) || isNaN(month)) {
            return NaN;
        }
        var modMonth = mod(month, 12);
        year += (month - modMonth) / 12;
        return modMonth === 1 ? (isLeapYear(year) ? 29 : 28) : (31 - modMonth % 7 % 2);
    }

    // FORMATTING

    addFormatToken('M', ['MM', 2], 'Mo', function () {
        return this.month() + 1;
    });

    addFormatToken('MMM', 0, 0, function (format) {
        return this.localeData().monthsShort(this, format);
    });

    addFormatToken('MMMM', 0, 0, function (format) {
        return this.localeData().months(this, format);
    });

    // ALIASES

    addUnitAlias('month', 'M');

    // PRIORITY

    addUnitPriority('month', 8);

    // PARSING

    addRegexToken('M',    match1to2);
    addRegexToken('MM',   match1to2, match2);
    addRegexToken('MMM',  function (isStrict, locale) {
        return locale.monthsShortRegex(isStrict);
    });
    addRegexToken('MMMM', function (isStrict, locale) {
        return locale.monthsRegex(isStrict);
    });

    addParseToken(['M', 'MM'], function (input, array) {
        array[MONTH] = toInt(input) - 1;
    });

    addParseToken(['MMM', 'MMMM'], function (input, array, config, token) {
        var month = config._locale.monthsParse(input, token, config._strict);
        // if we didn't find a month name, mark the date as invalid.
        if (month != null) {
            array[MONTH] = month;
        } else {
            getParsingFlags(config).invalidMonth = input;
        }
    });

    // LOCALES

    var MONTHS_IN_FORMAT = /D[oD]?(\[[^\[\]]*\]|\s)+MMMM?/;
    var defaultLocaleMonths = 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_');
    function localeMonths (m, format) {
        if (!m) {
            return isArray(this._months) ? this._months :
                this._months['standalone'];
        }
        return isArray(this._months) ? this._months[m.month()] :
            this._months[(this._months.isFormat || MONTHS_IN_FORMAT).test(format) ? 'format' : 'standalone'][m.month()];
    }

    var defaultLocaleMonthsShort = 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_');
    function localeMonthsShort (m, format) {
        if (!m) {
            return isArray(this._monthsShort) ? this._monthsShort :
                this._monthsShort['standalone'];
        }
        return isArray(this._monthsShort) ? this._monthsShort[m.month()] :
            this._monthsShort[MONTHS_IN_FORMAT.test(format) ? 'format' : 'standalone'][m.month()];
    }

    function handleStrictParse(monthName, format, strict) {
        var i, ii, mom, llc = monthName.toLocaleLowerCase();
        if (!this._monthsParse) {
            // this is not used
            this._monthsParse = [];
            this._longMonthsParse = [];
            this._shortMonthsParse = [];
            for (i = 0; i < 12; ++i) {
                mom = createUTC([2000, i]);
                this._shortMonthsParse[i] = this.monthsShort(mom, '').toLocaleLowerCase();
                this._longMonthsParse[i] = this.months(mom, '').toLocaleLowerCase();
            }
        }

        if (strict) {
            if (format === 'MMM') {
                ii = indexOf.call(this._shortMonthsParse, llc);
                return ii !== -1 ? ii : null;
            } else {
                ii = indexOf.call(this._longMonthsParse, llc);
                return ii !== -1 ? ii : null;
            }
        } else {
            if (format === 'MMM') {
                ii = indexOf.call(this._shortMonthsParse, llc);
                if (ii !== -1) {
                    return ii;
                }
                ii = indexOf.call(this._longMonthsParse, llc);
                return ii !== -1 ? ii : null;
            } else {
                ii = indexOf.call(this._longMonthsParse, llc);
                if (ii !== -1) {
                    return ii;
                }
                ii = indexOf.call(this._shortMonthsParse, llc);
                return ii !== -1 ? ii : null;
            }
        }
    }

    function localeMonthsParse (monthName, format, strict) {
        var i, mom, regex;

        if (this._monthsParseExact) {
            return handleStrictParse.call(this, monthName, format, strict);
        }

        if (!this._monthsParse) {
            this._monthsParse = [];
            this._longMonthsParse = [];
            this._shortMonthsParse = [];
        }

        // TODO: add sorting
        // Sorting makes sure if one month (or abbr) is a prefix of another
        // see sorting in computeMonthsParse
        for (i = 0; i < 12; i++) {
            // make the regex if we don't have it already
            mom = createUTC([2000, i]);
            if (strict && !this._longMonthsParse[i]) {
                this._longMonthsParse[i] = new RegExp('^' + this.months(mom, '').replace('.', '') + '$', 'i');
                this._shortMonthsParse[i] = new RegExp('^' + this.monthsShort(mom, '').replace('.', '') + '$', 'i');
            }
            if (!strict && !this._monthsParse[i]) {
                regex = '^' + this.months(mom, '') + '|^' + this.monthsShort(mom, '');
                this._monthsParse[i] = new RegExp(regex.replace('.', ''), 'i');
            }
            // test the regex
            if (strict && format === 'MMMM' && this._longMonthsParse[i].test(monthName)) {
                return i;
            } else if (strict && format === 'MMM' && this._shortMonthsParse[i].test(monthName)) {
                return i;
            } else if (!strict && this._monthsParse[i].test(monthName)) {
                return i;
            }
        }
    }

    // MOMENTS

    function setMonth (mom, value) {
        var dayOfMonth;

        if (!mom.isValid()) {
            // No op
            return mom;
        }

        if (typeof value === 'string') {
            if (/^\d+$/.test(value)) {
                value = toInt(value);
            } else {
                value = mom.localeData().monthsParse(value);
                // TODO: Another silent failure?
                if (!isNumber(value)) {
                    return mom;
                }
            }
        }

        dayOfMonth = Math.min(mom.date(), daysInMonth(mom.year(), value));
        mom._d['set' + (mom._isUTC ? 'UTC' : '') + 'Month'](value, dayOfMonth);
        return mom;
    }

    function getSetMonth (value) {
        if (value != null) {
            setMonth(this, value);
            hooks.updateOffset(this, true);
            return this;
        } else {
            return get(this, 'Month');
        }
    }

    function getDaysInMonth () {
        return daysInMonth(this.year(), this.month());
    }

    var defaultMonthsShortRegex = matchWord;
    function monthsShortRegex (isStrict) {
        if (this._monthsParseExact) {
            if (!hasOwnProp(this, '_monthsRegex')) {
                computeMonthsParse.call(this);
            }
            if (isStrict) {
                return this._monthsShortStrictRegex;
            } else {
                return this._monthsShortRegex;
            }
        } else {
            if (!hasOwnProp(this, '_monthsShortRegex')) {
                this._monthsShortRegex = defaultMonthsShortRegex;
            }
            return this._monthsShortStrictRegex && isStrict ?
                this._monthsShortStrictRegex : this._monthsShortRegex;
        }
    }

    var defaultMonthsRegex = matchWord;
    function monthsRegex (isStrict) {
        if (this._monthsParseExact) {
            if (!hasOwnProp(this, '_monthsRegex')) {
                computeMonthsParse.call(this);
            }
            if (isStrict) {
                return this._monthsStrictRegex;
            } else {
                return this._monthsRegex;
            }
        } else {
            if (!hasOwnProp(this, '_monthsRegex')) {
                this._monthsRegex = defaultMonthsRegex;
            }
            return this._monthsStrictRegex && isStrict ?
                this._monthsStrictRegex : this._monthsRegex;
        }
    }

    function computeMonthsParse () {
        function cmpLenRev(a, b) {
            return b.length - a.length;
        }

        var shortPieces = [], longPieces = [], mixedPieces = [],
            i, mom;
        for (i = 0; i < 12; i++) {
            // make the regex if we don't have it already
            mom = createUTC([2000, i]);
            shortPieces.push(this.monthsShort(mom, ''));
            longPieces.push(this.months(mom, ''));
            mixedPieces.push(this.months(mom, ''));
            mixedPieces.push(this.monthsShort(mom, ''));
        }
        // Sorting makes sure if one month (or abbr) is a prefix of another it
        // will match the longer piece.
        shortPieces.sort(cmpLenRev);
        longPieces.sort(cmpLenRev);
        mixedPieces.sort(cmpLenRev);
        for (i = 0; i < 12; i++) {
            shortPieces[i] = regexEscape(shortPieces[i]);
            longPieces[i] = regexEscape(longPieces[i]);
        }
        for (i = 0; i < 24; i++) {
            mixedPieces[i] = regexEscape(mixedPieces[i]);
        }

        this._monthsRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');
        this._monthsShortRegex = this._monthsRegex;
        this._monthsStrictRegex = new RegExp('^(' + longPieces.join('|') + ')', 'i');
        this._monthsShortStrictRegex = new RegExp('^(' + shortPieces.join('|') + ')', 'i');
    }

    function createDate (y, m, d, h, M, s, ms) {
        // can't just apply() to create a date:
        // https://stackoverflow.com/q/181348
        var date;
        // the date constructor remaps years 0-99 to 1900-1999
        if (y < 100 && y >= 0) {
            // preserve leap years using a full 400 year cycle, then reset
            date = new Date(y + 400, m, d, h, M, s, ms);
            if (isFinite(date.getFullYear())) {
                date.setFullYear(y);
            }
        } else {
            date = new Date(y, m, d, h, M, s, ms);
        }

        return date;
    }

    function createUTCDate (y) {
        var date;
        // the Date.UTC function remaps years 0-99 to 1900-1999
        if (y < 100 && y >= 0) {
            var args = Array.prototype.slice.call(arguments);
            // preserve leap years using a full 400 year cycle, then reset
            args[0] = y + 400;
            date = new Date(Date.UTC.apply(null, args));
            if (isFinite(date.getUTCFullYear())) {
                date.setUTCFullYear(y);
            }
        } else {
            date = new Date(Date.UTC.apply(null, arguments));
        }

        return date;
    }

    // start-of-first-week - start-of-year
    function firstWeekOffset(year, dow, doy) {
        var // first-week day -- which january is always in the first week (4 for iso, 1 for other)
            fwd = 7 + dow - doy,
            // first-week day local weekday -- which local weekday is fwd
            fwdlw = (7 + createUTCDate(year, 0, fwd).getUTCDay() - dow) % 7;

        return -fwdlw + fwd - 1;
    }

    // https://en.wikipedia.org/wiki/ISO_week_date#Calculating_a_date_given_the_year.2C_week_number_and_weekday
    function dayOfYearFromWeeks(year, week, weekday, dow, doy) {
        var localWeekday = (7 + weekday - dow) % 7,
            weekOffset = firstWeekOffset(year, dow, doy),
            dayOfYear = 1 + 7 * (week - 1) + localWeekday + weekOffset,
            resYear, resDayOfYear;

        if (dayOfYear <= 0) {
            resYear = year - 1;
            resDayOfYear = daysInYear(resYear) + dayOfYear;
        } else if (dayOfYear > daysInYear(year)) {
            resYear = year + 1;
            resDayOfYear = dayOfYear - daysInYear(year);
        } else {
            resYear = year;
            resDayOfYear = dayOfYear;
        }

        return {
            year: resYear,
            dayOfYear: resDayOfYear
        };
    }

    function weekOfYear(mom, dow, doy) {
        var weekOffset = firstWeekOffset(mom.year(), dow, doy),
            week = Math.floor((mom.dayOfYear() - weekOffset - 1) / 7) + 1,
            resWeek, resYear;

        if (week < 1) {
            resYear = mom.year() - 1;
            resWeek = week + weeksInYear(resYear, dow, doy);
        } else if (week > weeksInYear(mom.year(), dow, doy)) {
            resWeek = week - weeksInYear(mom.year(), dow, doy);
            resYear = mom.year() + 1;
        } else {
            resYear = mom.year();
            resWeek = week;
        }

        return {
            week: resWeek,
            year: resYear
        };
    }

    function weeksInYear(year, dow, doy) {
        var weekOffset = firstWeekOffset(year, dow, doy),
            weekOffsetNext = firstWeekOffset(year + 1, dow, doy);
        return (daysInYear(year) - weekOffset + weekOffsetNext) / 7;
    }

    // FORMATTING

    addFormatToken('w', ['ww', 2], 'wo', 'week');
    addFormatToken('W', ['WW', 2], 'Wo', 'isoWeek');

    // ALIASES

    addUnitAlias('week', 'w');
    addUnitAlias('isoWeek', 'W');

    // PRIORITIES

    addUnitPriority('week', 5);
    addUnitPriority('isoWeek', 5);

    // PARSING

    addRegexToken('w',  match1to2);
    addRegexToken('ww', match1to2, match2);
    addRegexToken('W',  match1to2);
    addRegexToken('WW', match1to2, match2);

    addWeekParseToken(['w', 'ww', 'W', 'WW'], function (input, week, config, token) {
        week[token.substr(0, 1)] = toInt(input);
    });

    // HELPERS

    // LOCALES

    function localeWeek (mom) {
        return weekOfYear(mom, this._week.dow, this._week.doy).week;
    }

    var defaultLocaleWeek = {
        dow : 0, // Sunday is the first day of the week.
        doy : 6  // The week that contains Jan 6th is the first week of the year.
    };

    function localeFirstDayOfWeek () {
        return this._week.dow;
    }

    function localeFirstDayOfYear () {
        return this._week.doy;
    }

    // MOMENTS

    function getSetWeek (input) {
        var week = this.localeData().week(this);
        return input == null ? week : this.add((input - week) * 7, 'd');
    }

    function getSetISOWeek (input) {
        var week = weekOfYear(this, 1, 4).week;
        return input == null ? week : this.add((input - week) * 7, 'd');
    }

    // FORMATTING

    addFormatToken('d', 0, 'do', 'day');

    addFormatToken('dd', 0, 0, function (format) {
        return this.localeData().weekdaysMin(this, format);
    });

    addFormatToken('ddd', 0, 0, function (format) {
        return this.localeData().weekdaysShort(this, format);
    });

    addFormatToken('dddd', 0, 0, function (format) {
        return this.localeData().weekdays(this, format);
    });

    addFormatToken('e', 0, 0, 'weekday');
    addFormatToken('E', 0, 0, 'isoWeekday');

    // ALIASES

    addUnitAlias('day', 'd');
    addUnitAlias('weekday', 'e');
    addUnitAlias('isoWeekday', 'E');

    // PRIORITY
    addUnitPriority('day', 11);
    addUnitPriority('weekday', 11);
    addUnitPriority('isoWeekday', 11);

    // PARSING

    addRegexToken('d',    match1to2);
    addRegexToken('e',    match1to2);
    addRegexToken('E',    match1to2);
    addRegexToken('dd',   function (isStrict, locale) {
        return locale.weekdaysMinRegex(isStrict);
    });
    addRegexToken('ddd',   function (isStrict, locale) {
        return locale.weekdaysShortRegex(isStrict);
    });
    addRegexToken('dddd',   function (isStrict, locale) {
        return locale.weekdaysRegex(isStrict);
    });

    addWeekParseToken(['dd', 'ddd', 'dddd'], function (input, week, config, token) {
        var weekday = config._locale.weekdaysParse(input, token, config._strict);
        // if we didn't get a weekday name, mark the date as invalid
        if (weekday != null) {
            week.d = weekday;
        } else {
            getParsingFlags(config).invalidWeekday = input;
        }
    });

    addWeekParseToken(['d', 'e', 'E'], function (input, week, config, token) {
        week[token] = toInt(input);
    });

    // HELPERS

    function parseWeekday(input, locale) {
        if (typeof input !== 'string') {
            return input;
        }

        if (!isNaN(input)) {
            return parseInt(input, 10);
        }

        input = locale.weekdaysParse(input);
        if (typeof input === 'number') {
            return input;
        }

        return null;
    }

    function parseIsoWeekday(input, locale) {
        if (typeof input === 'string') {
            return locale.weekdaysParse(input) % 7 || 7;
        }
        return isNaN(input) ? null : input;
    }

    // LOCALES
    function shiftWeekdays (ws, n) {
        return ws.slice(n, 7).concat(ws.slice(0, n));
    }

    var defaultLocaleWeekdays = 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_');
    function localeWeekdays (m, format) {
        var weekdays = isArray(this._weekdays) ? this._weekdays :
            this._weekdays[(m && m !== true && this._weekdays.isFormat.test(format)) ? 'format' : 'standalone'];
        return (m === true) ? shiftWeekdays(weekdays, this._week.dow)
            : (m) ? weekdays[m.day()] : weekdays;
    }

    var defaultLocaleWeekdaysShort = 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_');
    function localeWeekdaysShort (m) {
        return (m === true) ? shiftWeekdays(this._weekdaysShort, this._week.dow)
            : (m) ? this._weekdaysShort[m.day()] : this._weekdaysShort;
    }

    var defaultLocaleWeekdaysMin = 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_');
    function localeWeekdaysMin (m) {
        return (m === true) ? shiftWeekdays(this._weekdaysMin, this._week.dow)
            : (m) ? this._weekdaysMin[m.day()] : this._weekdaysMin;
    }

    function handleStrictParse$1(weekdayName, format, strict) {
        var i, ii, mom, llc = weekdayName.toLocaleLowerCase();
        if (!this._weekdaysParse) {
            this._weekdaysParse = [];
            this._shortWeekdaysParse = [];
            this._minWeekdaysParse = [];

            for (i = 0; i < 7; ++i) {
                mom = createUTC([2000, 1]).day(i);
                this._minWeekdaysParse[i] = this.weekdaysMin(mom, '').toLocaleLowerCase();
                this._shortWeekdaysParse[i] = this.weekdaysShort(mom, '').toLocaleLowerCase();
                this._weekdaysParse[i] = this.weekdays(mom, '').toLocaleLowerCase();
            }
        }

        if (strict) {
            if (format === 'dddd') {
                ii = indexOf.call(this._weekdaysParse, llc);
                return ii !== -1 ? ii : null;
            } else if (format === 'ddd') {
                ii = indexOf.call(this._shortWeekdaysParse, llc);
                return ii !== -1 ? ii : null;
            } else {
                ii = indexOf.call(this._minWeekdaysParse, llc);
                return ii !== -1 ? ii : null;
            }
        } else {
            if (format === 'dddd') {
                ii = indexOf.call(this._weekdaysParse, llc);
                if (ii !== -1) {
                    return ii;
                }
                ii = indexOf.call(this._shortWeekdaysParse, llc);
                if (ii !== -1) {
                    return ii;
                }
                ii = indexOf.call(this._minWeekdaysParse, llc);
                return ii !== -1 ? ii : null;
            } else if (format === 'ddd') {
                ii = indexOf.call(this._shortWeekdaysParse, llc);
                if (ii !== -1) {
                    return ii;
                }
                ii = indexOf.call(this._weekdaysParse, llc);
                if (ii !== -1) {
                    return ii;
                }
                ii = indexOf.call(this._minWeekdaysParse, llc);
                return ii !== -1 ? ii : null;
            } else {
                ii = indexOf.call(this._minWeekdaysParse, llc);
                if (ii !== -1) {
                    return ii;
                }
                ii = indexOf.call(this._weekdaysParse, llc);
                if (ii !== -1) {
                    return ii;
                }
                ii = indexOf.call(this._shortWeekdaysParse, llc);
                return ii !== -1 ? ii : null;
            }
        }
    }

    function localeWeekdaysParse (weekdayName, format, strict) {
        var i, mom, regex;

        if (this._weekdaysParseExact) {
            return handleStrictParse$1.call(this, weekdayName, format, strict);
        }

        if (!this._weekdaysParse) {
            this._weekdaysParse = [];
            this._minWeekdaysParse = [];
            this._shortWeekdaysParse = [];
            this._fullWeekdaysParse = [];
        }

        for (i = 0; i < 7; i++) {
            // make the regex if we don't have it already

            mom = createUTC([2000, 1]).day(i);
            if (strict && !this._fullWeekdaysParse[i]) {
                this._fullWeekdaysParse[i] = new RegExp('^' + this.weekdays(mom, '').replace('.', '\\.?') + '$', 'i');
                this._shortWeekdaysParse[i] = new RegExp('^' + this.weekdaysShort(mom, '').replace('.', '\\.?') + '$', 'i');
                this._minWeekdaysParse[i] = new RegExp('^' + this.weekdaysMin(mom, '').replace('.', '\\.?') + '$', 'i');
            }
            if (!this._weekdaysParse[i]) {
                regex = '^' + this.weekdays(mom, '') + '|^' + this.weekdaysShort(mom, '') + '|^' + this.weekdaysMin(mom, '');
                this._weekdaysParse[i] = new RegExp(regex.replace('.', ''), 'i');
            }
            // test the regex
            if (strict && format === 'dddd' && this._fullWeekdaysParse[i].test(weekdayName)) {
                return i;
            } else if (strict && format === 'ddd' && this._shortWeekdaysParse[i].test(weekdayName)) {
                return i;
            } else if (strict && format === 'dd' && this._minWeekdaysParse[i].test(weekdayName)) {
                return i;
            } else if (!strict && this._weekdaysParse[i].test(weekdayName)) {
                return i;
            }
        }
    }

    // MOMENTS

    function getSetDayOfWeek (input) {
        if (!this.isValid()) {
            return input != null ? this : NaN;
        }
        var day = this._isUTC ? this._d.getUTCDay() : this._d.getDay();
        if (input != null) {
            input = parseWeekday(input, this.localeData());
            return this.add(input - day, 'd');
        } else {
            return day;
        }
    }

    function getSetLocaleDayOfWeek (input) {
        if (!this.isValid()) {
            return input != null ? this : NaN;
        }
        var weekday = (this.day() + 7 - this.localeData()._week.dow) % 7;
        return input == null ? weekday : this.add(input - weekday, 'd');
    }

    function getSetISODayOfWeek (input) {
        if (!this.isValid()) {
            return input != null ? this : NaN;
        }

        // behaves the same as moment#day except
        // as a getter, returns 7 instead of 0 (1-7 range instead of 0-6)
        // as a setter, sunday should belong to the previous week.

        if (input != null) {
            var weekday = parseIsoWeekday(input, this.localeData());
            return this.day(this.day() % 7 ? weekday : weekday - 7);
        } else {
            return this.day() || 7;
        }
    }

    var defaultWeekdaysRegex = matchWord;
    function weekdaysRegex (isStrict) {
        if (this._weekdaysParseExact) {
            if (!hasOwnProp(this, '_weekdaysRegex')) {
                computeWeekdaysParse.call(this);
            }
            if (isStrict) {
                return this._weekdaysStrictRegex;
            } else {
                return this._weekdaysRegex;
            }
        } else {
            if (!hasOwnProp(this, '_weekdaysRegex')) {
                this._weekdaysRegex = defaultWeekdaysRegex;
            }
            return this._weekdaysStrictRegex && isStrict ?
                this._weekdaysStrictRegex : this._weekdaysRegex;
        }
    }

    var defaultWeekdaysShortRegex = matchWord;
    function weekdaysShortRegex (isStrict) {
        if (this._weekdaysParseExact) {
            if (!hasOwnProp(this, '_weekdaysRegex')) {
                computeWeekdaysParse.call(this);
            }
            if (isStrict) {
                return this._weekdaysShortStrictRegex;
            } else {
                return this._weekdaysShortRegex;
            }
        } else {
            if (!hasOwnProp(this, '_weekdaysShortRegex')) {
                this._weekdaysShortRegex = defaultWeekdaysShortRegex;
            }
            return this._weekdaysShortStrictRegex && isStrict ?
                this._weekdaysShortStrictRegex : this._weekdaysShortRegex;
        }
    }

    var defaultWeekdaysMinRegex = matchWord;
    function weekdaysMinRegex (isStrict) {
        if (this._weekdaysParseExact) {
            if (!hasOwnProp(this, '_weekdaysRegex')) {
                computeWeekdaysParse.call(this);
            }
            if (isStrict) {
                return this._weekdaysMinStrictRegex;
            } else {
                return this._weekdaysMinRegex;
            }
        } else {
            if (!hasOwnProp(this, '_weekdaysMinRegex')) {
                this._weekdaysMinRegex = defaultWeekdaysMinRegex;
            }
            return this._weekdaysMinStrictRegex && isStrict ?
                this._weekdaysMinStrictRegex : this._weekdaysMinRegex;
        }
    }


    function computeWeekdaysParse () {
        function cmpLenRev(a, b) {
            return b.length - a.length;
        }

        var minPieces = [], shortPieces = [], longPieces = [], mixedPieces = [],
            i, mom, minp, shortp, longp;
        for (i = 0; i < 7; i++) {
            // make the regex if we don't have it already
            mom = createUTC([2000, 1]).day(i);
            minp = this.weekdaysMin(mom, '');
            shortp = this.weekdaysShort(mom, '');
            longp = this.weekdays(mom, '');
            minPieces.push(minp);
            shortPieces.push(shortp);
            longPieces.push(longp);
            mixedPieces.push(minp);
            mixedPieces.push(shortp);
            mixedPieces.push(longp);
        }
        // Sorting makes sure if one weekday (or abbr) is a prefix of another it
        // will match the longer piece.
        minPieces.sort(cmpLenRev);
        shortPieces.sort(cmpLenRev);
        longPieces.sort(cmpLenRev);
        mixedPieces.sort(cmpLenRev);
        for (i = 0; i < 7; i++) {
            shortPieces[i] = regexEscape(shortPieces[i]);
            longPieces[i] = regexEscape(longPieces[i]);
            mixedPieces[i] = regexEscape(mixedPieces[i]);
        }

        this._weekdaysRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');
        this._weekdaysShortRegex = this._weekdaysRegex;
        this._weekdaysMinRegex = this._weekdaysRegex;

        this._weekdaysStrictRegex = new RegExp('^(' + longPieces.join('|') + ')', 'i');
        this._weekdaysShortStrictRegex = new RegExp('^(' + shortPieces.join('|') + ')', 'i');
        this._weekdaysMinStrictRegex = new RegExp('^(' + minPieces.join('|') + ')', 'i');
    }

    // FORMATTING

    function hFormat() {
        return this.hours() % 12 || 12;
    }

    function kFormat() {
        return this.hours() || 24;
    }

    addFormatToken('H', ['HH', 2], 0, 'hour');
    addFormatToken('h', ['hh', 2], 0, hFormat);
    addFormatToken('k', ['kk', 2], 0, kFormat);

    addFormatToken('hmm', 0, 0, function () {
        return '' + hFormat.apply(this) + zeroFill(this.minutes(), 2);
    });

    addFormatToken('hmmss', 0, 0, function () {
        return '' + hFormat.apply(this) + zeroFill(this.minutes(), 2) +
            zeroFill(this.seconds(), 2);
    });

    addFormatToken('Hmm', 0, 0, function () {
        return '' + this.hours() + zeroFill(this.minutes(), 2);
    });

    addFormatToken('Hmmss', 0, 0, function () {
        return '' + this.hours() + zeroFill(this.minutes(), 2) +
            zeroFill(this.seconds(), 2);
    });

    function meridiem (token, lowercase) {
        addFormatToken(token, 0, 0, function () {
            return this.localeData().meridiem(this.hours(), this.minutes(), lowercase);
        });
    }

    meridiem('a', true);
    meridiem('A', false);

    // ALIASES

    addUnitAlias('hour', 'h');

    // PRIORITY
    addUnitPriority('hour', 13);

    // PARSING

    function matchMeridiem (isStrict, locale) {
        return locale._meridiemParse;
    }

    addRegexToken('a',  matchMeridiem);
    addRegexToken('A',  matchMeridiem);
    addRegexToken('H',  match1to2);
    addRegexToken('h',  match1to2);
    addRegexToken('k',  match1to2);
    addRegexToken('HH', match1to2, match2);
    addRegexToken('hh', match1to2, match2);
    addRegexToken('kk', match1to2, match2);

    addRegexToken('hmm', match3to4);
    addRegexToken('hmmss', match5to6);
    addRegexToken('Hmm', match3to4);
    addRegexToken('Hmmss', match5to6);

    addParseToken(['H', 'HH'], HOUR);
    addParseToken(['k', 'kk'], function (input, array, config) {
        var kInput = toInt(input);
        array[HOUR] = kInput === 24 ? 0 : kInput;
    });
    addParseToken(['a', 'A'], function (input, array, config) {
        config._isPm = config._locale.isPM(input);
        config._meridiem = input;
    });
    addParseToken(['h', 'hh'], function (input, array, config) {
        array[HOUR] = toInt(input);
        getParsingFlags(config).bigHour = true;
    });
    addParseToken('hmm', function (input, array, config) {
        var pos = input.length - 2;
        array[HOUR] = toInt(input.substr(0, pos));
        array[MINUTE] = toInt(input.substr(pos));
        getParsingFlags(config).bigHour = true;
    });
    addParseToken('hmmss', function (input, array, config) {
        var pos1 = input.length - 4;
        var pos2 = input.length - 2;
        array[HOUR] = toInt(input.substr(0, pos1));
        array[MINUTE] = toInt(input.substr(pos1, 2));
        array[SECOND] = toInt(input.substr(pos2));
        getParsingFlags(config).bigHour = true;
    });
    addParseToken('Hmm', function (input, array, config) {
        var pos = input.length - 2;
        array[HOUR] = toInt(input.substr(0, pos));
        array[MINUTE] = toInt(input.substr(pos));
    });
    addParseToken('Hmmss', function (input, array, config) {
        var pos1 = input.length - 4;
        var pos2 = input.length - 2;
        array[HOUR] = toInt(input.substr(0, pos1));
        array[MINUTE] = toInt(input.substr(pos1, 2));
        array[SECOND] = toInt(input.substr(pos2));
    });

    // LOCALES

    function localeIsPM (input) {
        // IE8 Quirks Mode & IE7 Standards Mode do not allow accessing strings like arrays
        // Using charAt should be more compatible.
        return ((input + '').toLowerCase().charAt(0) === 'p');
    }

    var defaultLocaleMeridiemParse = /[ap]\.?m?\.?/i;
    function localeMeridiem (hours, minutes, isLower) {
        if (hours > 11) {
            return isLower ? 'pm' : 'PM';
        } else {
            return isLower ? 'am' : 'AM';
        }
    }


    // MOMENTS

    // Setting the hour should keep the time, because the user explicitly
    // specified which hour they want. So trying to maintain the same hour (in
    // a new timezone) makes sense. Adding/subtracting hours does not follow
    // this rule.
    var getSetHour = makeGetSet('Hours', true);

    var baseConfig = {
        calendar: defaultCalendar,
        longDateFormat: defaultLongDateFormat,
        invalidDate: defaultInvalidDate,
        ordinal: defaultOrdinal,
        dayOfMonthOrdinalParse: defaultDayOfMonthOrdinalParse,
        relativeTime: defaultRelativeTime,

        months: defaultLocaleMonths,
        monthsShort: defaultLocaleMonthsShort,

        week: defaultLocaleWeek,

        weekdays: defaultLocaleWeekdays,
        weekdaysMin: defaultLocaleWeekdaysMin,
        weekdaysShort: defaultLocaleWeekdaysShort,

        meridiemParse: defaultLocaleMeridiemParse
    };

    // internal storage for locale config files
    var locales = {};
    var localeFamilies = {};
    var globalLocale;

    function normalizeLocale(key) {
        return key ? key.toLowerCase().replace('_', '-') : key;
    }

    // pick the locale from the array
    // try ['en-au', 'en-gb'] as 'en-au', 'en-gb', 'en', as in move through the list trying each
    // substring from most specific to least, but move to the next array item if it's a more specific variant than the current root
    function chooseLocale(names) {
        var i = 0, j, next, locale, split;

        while (i < names.length) {
            split = normalizeLocale(names[i]).split('-');
            j = split.length;
            next = normalizeLocale(names[i + 1]);
            next = next ? next.split('-') : null;
            while (j > 0) {
                locale = loadLocale(split.slice(0, j).join('-'));
                if (locale) {
                    return locale;
                }
                if (next && next.length >= j && compareArrays(split, next, true) >= j - 1) {
                    //the next array item is better than a shallower substring of this one
                    break;
                }
                j--;
            }
            i++;
        }
        return globalLocale;
    }

    function loadLocale(name) {
        var oldLocale = null;
        // TODO: Find a better way to register and load all the locales in Node
        if (!locales[name] && (typeof module !== 'undefined') &&
                module && module.exports) {
            try {
                oldLocale = globalLocale._abbr;
                var aliasedRequire = require;
                aliasedRequire('./locale/' + name);
                getSetGlobalLocale(oldLocale);
            } catch (e) {}
        }
        return locales[name];
    }

    // This function will load locale and then set the global locale.  If
    // no arguments are passed in, it will simply return the current global
    // locale key.
    function getSetGlobalLocale (key, values) {
        var data;
        if (key) {
            if (isUndefined(values)) {
                data = getLocale(key);
            }
            else {
                data = defineLocale(key, values);
            }

            if (data) {
                // moment.duration._locale = moment._locale = data;
                globalLocale = data;
            }
            else {
                if ((typeof console !==  'undefined') && console.warn) {
                    //warn user if arguments are passed but the locale could not be set
                    console.warn('Locale ' + key +  ' not found. Did you forget to load it?');
                }
            }
        }

        return globalLocale._abbr;
    }

    function defineLocale (name, config) {
        if (config !== null) {
            var locale, parentConfig = baseConfig;
            config.abbr = name;
            if (locales[name] != null) {
                deprecateSimple('defineLocaleOverride',
                        'use moment.updateLocale(localeName, config) to change ' +
                        'an existing locale. moment.defineLocale(localeName, ' +
                        'config) should only be used for creating a new locale ' +
                        'See http://momentjs.com/guides/#/warnings/define-locale/ for more info.');
                parentConfig = locales[name]._config;
            } else if (config.parentLocale != null) {
                if (locales[config.parentLocale] != null) {
                    parentConfig = locales[config.parentLocale]._config;
                } else {
                    locale = loadLocale(config.parentLocale);
                    if (locale != null) {
                        parentConfig = locale._config;
                    } else {
                        if (!localeFamilies[config.parentLocale]) {
                            localeFamilies[config.parentLocale] = [];
                        }
                        localeFamilies[config.parentLocale].push({
                            name: name,
                            config: config
                        });
                        return null;
                    }
                }
            }
            locales[name] = new Locale(mergeConfigs(parentConfig, config));

            if (localeFamilies[name]) {
                localeFamilies[name].forEach(function (x) {
                    defineLocale(x.name, x.config);
                });
            }

            // backwards compat for now: also set the locale
            // make sure we set the locale AFTER all child locales have been
            // created, so we won't end up with the child locale set.
            getSetGlobalLocale(name);


            return locales[name];
        } else {
            // useful for testing
            delete locales[name];
            return null;
        }
    }

    function updateLocale(name, config) {
        if (config != null) {
            var locale, tmpLocale, parentConfig = baseConfig;
            // MERGE
            tmpLocale = loadLocale(name);
            if (tmpLocale != null) {
                parentConfig = tmpLocale._config;
            }
            config = mergeConfigs(parentConfig, config);
            locale = new Locale(config);
            locale.parentLocale = locales[name];
            locales[name] = locale;

            // backwards compat for now: also set the locale
            getSetGlobalLocale(name);
        } else {
            // pass null for config to unupdate, useful for tests
            if (locales[name] != null) {
                if (locales[name].parentLocale != null) {
                    locales[name] = locales[name].parentLocale;
                } else if (locales[name] != null) {
                    delete locales[name];
                }
            }
        }
        return locales[name];
    }

    // returns locale data
    function getLocale (key) {
        var locale;

        if (key && key._locale && key._locale._abbr) {
            key = key._locale._abbr;
        }

        if (!key) {
            return globalLocale;
        }

        if (!isArray(key)) {
            //short-circuit everything else
            locale = loadLocale(key);
            if (locale) {
                return locale;
            }
            key = [key];
        }

        return chooseLocale(key);
    }

    function listLocales() {
        return keys(locales);
    }

    function checkOverflow (m) {
        var overflow;
        var a = m._a;

        if (a && getParsingFlags(m).overflow === -2) {
            overflow =
                a[MONTH]       < 0 || a[MONTH]       > 11  ? MONTH :
                a[DATE]        < 1 || a[DATE]        > daysInMonth(a[YEAR], a[MONTH]) ? DATE :
                a[HOUR]        < 0 || a[HOUR]        > 24 || (a[HOUR] === 24 && (a[MINUTE] !== 0 || a[SECOND] !== 0 || a[MILLISECOND] !== 0)) ? HOUR :
                a[MINUTE]      < 0 || a[MINUTE]      > 59  ? MINUTE :
                a[SECOND]      < 0 || a[SECOND]      > 59  ? SECOND :
                a[MILLISECOND] < 0 || a[MILLISECOND] > 999 ? MILLISECOND :
                -1;

            if (getParsingFlags(m)._overflowDayOfYear && (overflow < YEAR || overflow > DATE)) {
                overflow = DATE;
            }
            if (getParsingFlags(m)._overflowWeeks && overflow === -1) {
                overflow = WEEK;
            }
            if (getParsingFlags(m)._overflowWeekday && overflow === -1) {
                overflow = WEEKDAY;
            }

            getParsingFlags(m).overflow = overflow;
        }

        return m;
    }

    // Pick the first defined of two or three arguments.
    function defaults(a, b, c) {
        if (a != null) {
            return a;
        }
        if (b != null) {
            return b;
        }
        return c;
    }

    function currentDateArray(config) {
        // hooks is actually the exported moment object
        var nowValue = new Date(hooks.now());
        if (config._useUTC) {
            return [nowValue.getUTCFullYear(), nowValue.getUTCMonth(), nowValue.getUTCDate()];
        }
        return [nowValue.getFullYear(), nowValue.getMonth(), nowValue.getDate()];
    }

    // convert an array to a date.
    // the array should mirror the parameters below
    // note: all values past the year are optional and will default to the lowest possible value.
    // [year, month, day , hour, minute, second, millisecond]
    function configFromArray (config) {
        var i, date, input = [], currentDate, expectedWeekday, yearToUse;

        if (config._d) {
            return;
        }

        currentDate = currentDateArray(config);

        //compute day of the year from weeks and weekdays
        if (config._w && config._a[DATE] == null && config._a[MONTH] == null) {
            dayOfYearFromWeekInfo(config);
        }

        //if the day of the year is set, figure out what it is
        if (config._dayOfYear != null) {
            yearToUse = defaults(config._a[YEAR], currentDate[YEAR]);

            if (config._dayOfYear > daysInYear(yearToUse) || config._dayOfYear === 0) {
                getParsingFlags(config)._overflowDayOfYear = true;
            }

            date = createUTCDate(yearToUse, 0, config._dayOfYear);
            config._a[MONTH] = date.getUTCMonth();
            config._a[DATE] = date.getUTCDate();
        }

        // Default to current date.
        // * if no year, month, day of month are given, default to today
        // * if day of month is given, default month and year
        // * if month is given, default only year
        // * if year is given, don't default anything
        for (i = 0; i < 3 && config._a[i] == null; ++i) {
            config._a[i] = input[i] = currentDate[i];
        }

        // Zero out whatever was not defaulted, including time
        for (; i < 7; i++) {
            config._a[i] = input[i] = (config._a[i] == null) ? (i === 2 ? 1 : 0) : config._a[i];
        }

        // Check for 24:00:00.000
        if (config._a[HOUR] === 24 &&
                config._a[MINUTE] === 0 &&
                config._a[SECOND] === 0 &&
                config._a[MILLISECOND] === 0) {
            config._nextDay = true;
            config._a[HOUR] = 0;
        }

        config._d = (config._useUTC ? createUTCDate : createDate).apply(null, input);
        expectedWeekday = config._useUTC ? config._d.getUTCDay() : config._d.getDay();

        // Apply timezone offset from input. The actual utcOffset can be changed
        // with parseZone.
        if (config._tzm != null) {
            config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);
        }

        if (config._nextDay) {
            config._a[HOUR] = 24;
        }

        // check for mismatching day of week
        if (config._w && typeof config._w.d !== 'undefined' && config._w.d !== expectedWeekday) {
            getParsingFlags(config).weekdayMismatch = true;
        }
    }

    function dayOfYearFromWeekInfo(config) {
        var w, weekYear, week, weekday, dow, doy, temp, weekdayOverflow;

        w = config._w;
        if (w.GG != null || w.W != null || w.E != null) {
            dow = 1;
            doy = 4;

            // TODO: We need to take the current isoWeekYear, but that depends on
            // how we interpret now (local, utc, fixed offset). So create
            // a now version of current config (take local/utc/offset flags, and
            // create now).
            weekYear = defaults(w.GG, config._a[YEAR], weekOfYear(createLocal(), 1, 4).year);
            week = defaults(w.W, 1);
            weekday = defaults(w.E, 1);
            if (weekday < 1 || weekday > 7) {
                weekdayOverflow = true;
            }
        } else {
            dow = config._locale._week.dow;
            doy = config._locale._week.doy;

            var curWeek = weekOfYear(createLocal(), dow, doy);

            weekYear = defaults(w.gg, config._a[YEAR], curWeek.year);

            // Default to current week.
            week = defaults(w.w, curWeek.week);

            if (w.d != null) {
                // weekday -- low day numbers are considered next week
                weekday = w.d;
                if (weekday < 0 || weekday > 6) {
                    weekdayOverflow = true;
                }
            } else if (w.e != null) {
                // local weekday -- counting starts from beginning of week
                weekday = w.e + dow;
                if (w.e < 0 || w.e > 6) {
                    weekdayOverflow = true;
                }
            } else {
                // default to beginning of week
                weekday = dow;
            }
        }
        if (week < 1 || week > weeksInYear(weekYear, dow, doy)) {
            getParsingFlags(config)._overflowWeeks = true;
        } else if (weekdayOverflow != null) {
            getParsingFlags(config)._overflowWeekday = true;
        } else {
            temp = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy);
            config._a[YEAR] = temp.year;
            config._dayOfYear = temp.dayOfYear;
        }
    }

    // iso 8601 regex
    // 0000-00-00 0000-W00 or 0000-W00-0 + T + 00 or 00:00 or 00:00:00 or 00:00:00.000 + +00:00 or +0000 or +00)
    var extendedIsoRegex = /^\s*((?:[+-]\d{6}|\d{4})-(?:\d\d-\d\d|W\d\d-\d|W\d\d|\d\d\d|\d\d))(?:(T| )(\d\d(?::\d\d(?::\d\d(?:[.,]\d+)?)?)?)([\+\-]\d\d(?::?\d\d)?|\s*Z)?)?$/;
    var basicIsoRegex = /^\s*((?:[+-]\d{6}|\d{4})(?:\d\d\d\d|W\d\d\d|W\d\d|\d\d\d|\d\d))(?:(T| )(\d\d(?:\d\d(?:\d\d(?:[.,]\d+)?)?)?)([\+\-]\d\d(?::?\d\d)?|\s*Z)?)?$/;

    var tzRegex = /Z|[+-]\d\d(?::?\d\d)?/;

    var isoDates = [
        ['YYYYYY-MM-DD', /[+-]\d{6}-\d\d-\d\d/],
        ['YYYY-MM-DD', /\d{4}-\d\d-\d\d/],
        ['GGGG-[W]WW-E', /\d{4}-W\d\d-\d/],
        ['GGGG-[W]WW', /\d{4}-W\d\d/, false],
        ['YYYY-DDD', /\d{4}-\d{3}/],
        ['YYYY-MM', /\d{4}-\d\d/, false],
        ['YYYYYYMMDD', /[+-]\d{10}/],
        ['YYYYMMDD', /\d{8}/],
        // YYYYMM is NOT allowed by the standard
        ['GGGG[W]WWE', /\d{4}W\d{3}/],
        ['GGGG[W]WW', /\d{4}W\d{2}/, false],
        ['YYYYDDD', /\d{7}/]
    ];

    // iso time formats and regexes
    var isoTimes = [
        ['HH:mm:ss.SSSS', /\d\d:\d\d:\d\d\.\d+/],
        ['HH:mm:ss,SSSS', /\d\d:\d\d:\d\d,\d+/],
        ['HH:mm:ss', /\d\d:\d\d:\d\d/],
        ['HH:mm', /\d\d:\d\d/],
        ['HHmmss.SSSS', /\d\d\d\d\d\d\.\d+/],
        ['HHmmss,SSSS', /\d\d\d\d\d\d,\d+/],
        ['HHmmss', /\d\d\d\d\d\d/],
        ['HHmm', /\d\d\d\d/],
        ['HH', /\d\d/]
    ];

    var aspNetJsonRegex = /^\/?Date\((\-?\d+)/i;

    // date from iso format
    function configFromISO(config) {
        var i, l,
            string = config._i,
            match = extendedIsoRegex.exec(string) || basicIsoRegex.exec(string),
            allowTime, dateFormat, timeFormat, tzFormat;

        if (match) {
            getParsingFlags(config).iso = true;

            for (i = 0, l = isoDates.length; i < l; i++) {
                if (isoDates[i][1].exec(match[1])) {
                    dateFormat = isoDates[i][0];
                    allowTime = isoDates[i][2] !== false;
                    break;
                }
            }
            if (dateFormat == null) {
                config._isValid = false;
                return;
            }
            if (match[3]) {
                for (i = 0, l = isoTimes.length; i < l; i++) {
                    if (isoTimes[i][1].exec(match[3])) {
                        // match[2] should be 'T' or space
                        timeFormat = (match[2] || ' ') + isoTimes[i][0];
                        break;
                    }
                }
                if (timeFormat == null) {
                    config._isValid = false;
                    return;
                }
            }
            if (!allowTime && timeFormat != null) {
                config._isValid = false;
                return;
            }
            if (match[4]) {
                if (tzRegex.exec(match[4])) {
                    tzFormat = 'Z';
                } else {
                    config._isValid = false;
                    return;
                }
            }
            config._f = dateFormat + (timeFormat || '') + (tzFormat || '');
            configFromStringAndFormat(config);
        } else {
            config._isValid = false;
        }
    }

    // RFC 2822 regex: For details see https://tools.ietf.org/html/rfc2822#section-3.3
    var rfc2822 = /^(?:(Mon|Tue|Wed|Thu|Fri|Sat|Sun),?\s)?(\d{1,2})\s(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)\s(\d{2,4})\s(\d\d):(\d\d)(?::(\d\d))?\s(?:(UT|GMT|[ECMP][SD]T)|([Zz])|([+-]\d{4}))$/;

    function extractFromRFC2822Strings(yearStr, monthStr, dayStr, hourStr, minuteStr, secondStr) {
        var result = [
            untruncateYear(yearStr),
            defaultLocaleMonthsShort.indexOf(monthStr),
            parseInt(dayStr, 10),
            parseInt(hourStr, 10),
            parseInt(minuteStr, 10)
        ];

        if (secondStr) {
            result.push(parseInt(secondStr, 10));
        }

        return result;
    }

    function untruncateYear(yearStr) {
        var year = parseInt(yearStr, 10);
        if (year <= 49) {
            return 2000 + year;
        } else if (year <= 999) {
            return 1900 + year;
        }
        return year;
    }

    function preprocessRFC2822(s) {
        // Remove comments and folding whitespace and replace multiple-spaces with a single space
        return s.replace(/\([^)]*\)|[\n\t]/g, ' ').replace(/(\s\s+)/g, ' ').replace(/^\s\s*/, '').replace(/\s\s*$/, '');
    }

    function checkWeekday(weekdayStr, parsedInput, config) {
        if (weekdayStr) {
            // TODO: Replace the vanilla JS Date object with an indepentent day-of-week check.
            var weekdayProvided = defaultLocaleWeekdaysShort.indexOf(weekdayStr),
                weekdayActual = new Date(parsedInput[0], parsedInput[1], parsedInput[2]).getDay();
            if (weekdayProvided !== weekdayActual) {
                getParsingFlags(config).weekdayMismatch = true;
                config._isValid = false;
                return false;
            }
        }
        return true;
    }

    var obsOffsets = {
        UT: 0,
        GMT: 0,
        EDT: -4 * 60,
        EST: -5 * 60,
        CDT: -5 * 60,
        CST: -6 * 60,
        MDT: -6 * 60,
        MST: -7 * 60,
        PDT: -7 * 60,
        PST: -8 * 60
    };

    function calculateOffset(obsOffset, militaryOffset, numOffset) {
        if (obsOffset) {
            return obsOffsets[obsOffset];
        } else if (militaryOffset) {
            // the only allowed military tz is Z
            return 0;
        } else {
            var hm = parseInt(numOffset, 10);
            var m = hm % 100, h = (hm - m) / 100;
            return h * 60 + m;
        }
    }

    // date and time from ref 2822 format
    function configFromRFC2822(config) {
        var match = rfc2822.exec(preprocessRFC2822(config._i));
        if (match) {
            var parsedArray = extractFromRFC2822Strings(match[4], match[3], match[2], match[5], match[6], match[7]);
            if (!checkWeekday(match[1], parsedArray, config)) {
                return;
            }

            config._a = parsedArray;
            config._tzm = calculateOffset(match[8], match[9], match[10]);

            config._d = createUTCDate.apply(null, config._a);
            config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);

            getParsingFlags(config).rfc2822 = true;
        } else {
            config._isValid = false;
        }
    }

    // date from iso format or fallback
    function configFromString(config) {
        var matched = aspNetJsonRegex.exec(config._i);

        if (matched !== null) {
            config._d = new Date(+matched[1]);
            return;
        }

        configFromISO(config);
        if (config._isValid === false) {
            delete config._isValid;
        } else {
            return;
        }

        configFromRFC2822(config);
        if (config._isValid === false) {
            delete config._isValid;
        } else {
            return;
        }

        // Final attempt, use Input Fallback
        hooks.createFromInputFallback(config);
    }

    hooks.createFromInputFallback = deprecate(
        'value provided is not in a recognized RFC2822 or ISO format. moment construction falls back to js Date(), ' +
        'which is not reliable across all browsers and versions. Non RFC2822/ISO date formats are ' +
        'discouraged and will be removed in an upcoming major release. Please refer to ' +
        'http://momentjs.com/guides/#/warnings/js-date/ for more info.',
        function (config) {
            config._d = new Date(config._i + (config._useUTC ? ' UTC' : ''));
        }
    );

    // constant that refers to the ISO standard
    hooks.ISO_8601 = function () {};

    // constant that refers to the RFC 2822 form
    hooks.RFC_2822 = function () {};

    // date from string and format string
    function configFromStringAndFormat(config) {
        // TODO: Move this to another part of the creation flow to prevent circular deps
        if (config._f === hooks.ISO_8601) {
            configFromISO(config);
            return;
        }
        if (config._f === hooks.RFC_2822) {
            configFromRFC2822(config);
            return;
        }
        config._a = [];
        getParsingFlags(config).empty = true;

        // This array is used to make a Date, either with `new Date` or `Date.UTC`
        var string = '' + config._i,
            i, parsedInput, tokens, token, skipped,
            stringLength = string.length,
            totalParsedInputLength = 0;

        tokens = expandFormat(config._f, config._locale).match(formattingTokens) || [];

        for (i = 0; i < tokens.length; i++) {
            token = tokens[i];
            parsedInput = (string.match(getParseRegexForToken(token, config)) || [])[0];
            // console.log('token', token, 'parsedInput', parsedInput,
            //         'regex', getParseRegexForToken(token, config));
            if (parsedInput) {
                skipped = string.substr(0, string.indexOf(parsedInput));
                if (skipped.length > 0) {
                    getParsingFlags(config).unusedInput.push(skipped);
                }
                string = string.slice(string.indexOf(parsedInput) + parsedInput.length);
                totalParsedInputLength += parsedInput.length;
            }
            // don't parse if it's not a known token
            if (formatTokenFunctions[token]) {
                if (parsedInput) {
                    getParsingFlags(config).empty = false;
                }
                else {
                    getParsingFlags(config).unusedTokens.push(token);
                }
                addTimeToArrayFromToken(token, parsedInput, config);
            }
            else if (config._strict && !parsedInput) {
                getParsingFlags(config).unusedTokens.push(token);
            }
        }

        // add remaining unparsed input length to the string
        getParsingFlags(config).charsLeftOver = stringLength - totalParsedInputLength;
        if (string.length > 0) {
            getParsingFlags(config).unusedInput.push(string);
        }

        // clear _12h flag if hour is <= 12
        if (config._a[HOUR] <= 12 &&
            getParsingFlags(config).bigHour === true &&
            config._a[HOUR] > 0) {
            getParsingFlags(config).bigHour = undefined;
        }

        getParsingFlags(config).parsedDateParts = config._a.slice(0);
        getParsingFlags(config).meridiem = config._meridiem;
        // handle meridiem
        config._a[HOUR] = meridiemFixWrap(config._locale, config._a[HOUR], config._meridiem);

        configFromArray(config);
        checkOverflow(config);
    }


    function meridiemFixWrap (locale, hour, meridiem) {
        var isPm;

        if (meridiem == null) {
            // nothing to do
            return hour;
        }
        if (locale.meridiemHour != null) {
            return locale.meridiemHour(hour, meridiem);
        } else if (locale.isPM != null) {
            // Fallback
            isPm = locale.isPM(meridiem);
            if (isPm && hour < 12) {
                hour += 12;
            }
            if (!isPm && hour === 12) {
                hour = 0;
            }
            return hour;
        } else {
            // this is not supposed to happen
            return hour;
        }
    }

    // date from string and array of format strings
    function configFromStringAndArray(config) {
        var tempConfig,
            bestMoment,

            scoreToBeat,
            i,
            currentScore;

        if (config._f.length === 0) {
            getParsingFlags(config).invalidFormat = true;
            config._d = new Date(NaN);
            return;
        }

        for (i = 0; i < config._f.length; i++) {
            currentScore = 0;
            tempConfig = copyConfig({}, config);
            if (config._useUTC != null) {
                tempConfig._useUTC = config._useUTC;
            }
            tempConfig._f = config._f[i];
            configFromStringAndFormat(tempConfig);

            if (!isValid(tempConfig)) {
                continue;
            }

            // if there is any input that was not parsed add a penalty for that format
            currentScore += getParsingFlags(tempConfig).charsLeftOver;

            //or tokens
            currentScore += getParsingFlags(tempConfig).unusedTokens.length * 10;

            getParsingFlags(tempConfig).score = currentScore;

            if (scoreToBeat == null || currentScore < scoreToBeat) {
                scoreToBeat = currentScore;
                bestMoment = tempConfig;
            }
        }

        extend(config, bestMoment || tempConfig);
    }

    function configFromObject(config) {
        if (config._d) {
            return;
        }

        var i = normalizeObjectUnits(config._i);
        config._a = map([i.year, i.month, i.day || i.date, i.hour, i.minute, i.second, i.millisecond], function (obj) {
            return obj && parseInt(obj, 10);
        });

        configFromArray(config);
    }

    function createFromConfig (config) {
        var res = new Moment(checkOverflow(prepareConfig(config)));
        if (res._nextDay) {
            // Adding is smart enough around DST
            res.add(1, 'd');
            res._nextDay = undefined;
        }

        return res;
    }

    function prepareConfig (config) {
        var input = config._i,
            format = config._f;

        config._locale = config._locale || getLocale(config._l);

        if (input === null || (format === undefined && input === '')) {
            return createInvalid({nullInput: true});
        }

        if (typeof input === 'string') {
            config._i = input = config._locale.preparse(input);
        }

        if (isMoment(input)) {
            return new Moment(checkOverflow(input));
        } else if (isDate(input)) {
            config._d = input;
        } else if (isArray(format)) {
            configFromStringAndArray(config);
        } else if (format) {
            configFromStringAndFormat(config);
        }  else {
            configFromInput(config);
        }

        if (!isValid(config)) {
            config._d = null;
        }

        return config;
    }

    function configFromInput(config) {
        var input = config._i;
        if (isUndefined(input)) {
            config._d = new Date(hooks.now());
        } else if (isDate(input)) {
            config._d = new Date(input.valueOf());
        } else if (typeof input === 'string') {
            configFromString(config);
        } else if (isArray(input)) {
            config._a = map(input.slice(0), function (obj) {
                return parseInt(obj, 10);
            });
            configFromArray(config);
        } else if (isObject(input)) {
            configFromObject(config);
        } else if (isNumber(input)) {
            // from milliseconds
            config._d = new Date(input);
        } else {
            hooks.createFromInputFallback(config);
        }
    }

    function createLocalOrUTC (input, format, locale, strict, isUTC) {
        var c = {};

        if (locale === true || locale === false) {
            strict = locale;
            locale = undefined;
        }

        if ((isObject(input) && isObjectEmpty(input)) ||
                (isArray(input) && input.length === 0)) {
            input = undefined;
        }
        // object construction must be done this way.
        // https://github.com/moment/moment/issues/1423
        c._isAMomentObject = true;
        c._useUTC = c._isUTC = isUTC;
        c._l = locale;
        c._i = input;
        c._f = format;
        c._strict = strict;

        return createFromConfig(c);
    }

    function createLocal (input, format, locale, strict) {
        return createLocalOrUTC(input, format, locale, strict, false);
    }

    var prototypeMin = deprecate(
        'moment().min is deprecated, use moment.max instead. http://momentjs.com/guides/#/warnings/min-max/',
        function () {
            var other = createLocal.apply(null, arguments);
            if (this.isValid() && other.isValid()) {
                return other < this ? this : other;
            } else {
                return createInvalid();
            }
        }
    );

    var prototypeMax = deprecate(
        'moment().max is deprecated, use moment.min instead. http://momentjs.com/guides/#/warnings/min-max/',
        function () {
            var other = createLocal.apply(null, arguments);
            if (this.isValid() && other.isValid()) {
                return other > this ? this : other;
            } else {
                return createInvalid();
            }
        }
    );

    // Pick a moment m from moments so that m[fn](other) is true for all
    // other. This relies on the function fn to be transitive.
    //
    // moments should either be an array of moment objects or an array, whose
    // first element is an array of moment objects.
    function pickBy(fn, moments) {
        var res, i;
        if (moments.length === 1 && isArray(moments[0])) {
            moments = moments[0];
        }
        if (!moments.length) {
            return createLocal();
        }
        res = moments[0];
        for (i = 1; i < moments.length; ++i) {
            if (!moments[i].isValid() || moments[i][fn](res)) {
                res = moments[i];
            }
        }
        return res;
    }

    // TODO: Use [].sort instead?
    function min () {
        var args = [].slice.call(arguments, 0);

        return pickBy('isBefore', args);
    }

    function max () {
        var args = [].slice.call(arguments, 0);

        return pickBy('isAfter', args);
    }

    var now = function () {
        return Date.now ? Date.now() : +(new Date());
    };

    var ordering = ['year', 'quarter', 'month', 'week', 'day', 'hour', 'minute', 'second', 'millisecond'];

    function isDurationValid(m) {
        for (var key in m) {
            if (!(indexOf.call(ordering, key) !== -1 && (m[key] == null || !isNaN(m[key])))) {
                return false;
            }
        }

        var unitHasDecimal = false;
        for (var i = 0; i < ordering.length; ++i) {
            if (m[ordering[i]]) {
                if (unitHasDecimal) {
                    return false; // only allow non-integers for smallest unit
                }
                if (parseFloat(m[ordering[i]]) !== toInt(m[ordering[i]])) {
                    unitHasDecimal = true;
                }
            }
        }

        return true;
    }

    function isValid$1() {
        return this._isValid;
    }

    function createInvalid$1() {
        return createDuration(NaN);
    }

    function Duration (duration) {
        var normalizedInput = normalizeObjectUnits(duration),
            years = normalizedInput.year || 0,
            quarters = normalizedInput.quarter || 0,
            months = normalizedInput.month || 0,
            weeks = normalizedInput.week || normalizedInput.isoWeek || 0,
            days = normalizedInput.day || 0,
            hours = normalizedInput.hour || 0,
            minutes = normalizedInput.minute || 0,
            seconds = normalizedInput.second || 0,
            milliseconds = normalizedInput.millisecond || 0;

        this._isValid = isDurationValid(normalizedInput);

        // representation for dateAddRemove
        this._milliseconds = +milliseconds +
            seconds * 1e3 + // 1000
            minutes * 6e4 + // 1000 * 60
            hours * 1000 * 60 * 60; //using 1000 * 60 * 60 instead of 36e5 to avoid floating point rounding errors https://github.com/moment/moment/issues/2978
        // Because of dateAddRemove treats 24 hours as different from a
        // day when working around DST, we need to store them separately
        this._days = +days +
            weeks * 7;
        // It is impossible to translate months into days without knowing
        // which months you are are talking about, so we have to store
        // it separately.
        this._months = +months +
            quarters * 3 +
            years * 12;

        this._data = {};

        this._locale = getLocale();

        this._bubble();
    }

    function isDuration (obj) {
        return obj instanceof Duration;
    }

    function absRound (number) {
        if (number < 0) {
            return Math.round(-1 * number) * -1;
        } else {
            return Math.round(number);
        }
    }

    // FORMATTING

    function offset (token, separator) {
        addFormatToken(token, 0, 0, function () {
            var offset = this.utcOffset();
            var sign = '+';
            if (offset < 0) {
                offset = -offset;
                sign = '-';
            }
            return sign + zeroFill(~~(offset / 60), 2) + separator + zeroFill(~~(offset) % 60, 2);
        });
    }

    offset('Z', ':');
    offset('ZZ', '');

    // PARSING

    addRegexToken('Z',  matchShortOffset);
    addRegexToken('ZZ', matchShortOffset);
    addParseToken(['Z', 'ZZ'], function (input, array, config) {
        config._useUTC = true;
        config._tzm = offsetFromString(matchShortOffset, input);
    });

    // HELPERS

    // timezone chunker
    // '+10:00' > ['10',  '00']
    // '-1530'  > ['-15', '30']
    var chunkOffset = /([\+\-]|\d\d)/gi;

    function offsetFromString(matcher, string) {
        var matches = (string || '').match(matcher);

        if (matches === null) {
            return null;
        }

        var chunk   = matches[matches.length - 1] || [];
        var parts   = (chunk + '').match(chunkOffset) || ['-', 0, 0];
        var minutes = +(parts[1] * 60) + toInt(parts[2]);

        return minutes === 0 ?
          0 :
          parts[0] === '+' ? minutes : -minutes;
    }

    // Return a moment from input, that is local/utc/zone equivalent to model.
    function cloneWithOffset(input, model) {
        var res, diff;
        if (model._isUTC) {
            res = model.clone();
            diff = (isMoment(input) || isDate(input) ? input.valueOf() : createLocal(input).valueOf()) - res.valueOf();
            // Use low-level api, because this fn is low-level api.
            res._d.setTime(res._d.valueOf() + diff);
            hooks.updateOffset(res, false);
            return res;
        } else {
            return createLocal(input).local();
        }
    }

    function getDateOffset (m) {
        // On Firefox.24 Date#getTimezoneOffset returns a floating point.
        // https://github.com/moment/moment/pull/1871
        return -Math.round(m._d.getTimezoneOffset() / 15) * 15;
    }

    // HOOKS

    // This function will be called whenever a moment is mutated.
    // It is intended to keep the offset in sync with the timezone.
    hooks.updateOffset = function () {};

    // MOMENTS

    // keepLocalTime = true means only change the timezone, without
    // affecting the local hour. So 5:31:26 +0300 --[utcOffset(2, true)]-->
    // 5:31:26 +0200 It is possible that 5:31:26 doesn't exist with offset
    // +0200, so we adjust the time as needed, to be valid.
    //
    // Keeping the time actually adds/subtracts (one hour)
    // from the actual represented time. That is why we call updateOffset
    // a second time. In case it wants us to change the offset again
    // _changeInProgress == true case, then we have to adjust, because
    // there is no such time in the given timezone.
    function getSetOffset (input, keepLocalTime, keepMinutes) {
        var offset = this._offset || 0,
            localAdjust;
        if (!this.isValid()) {
            return input != null ? this : NaN;
        }
        if (input != null) {
            if (typeof input === 'string') {
                input = offsetFromString(matchShortOffset, input);
                if (input === null) {
                    return this;
                }
            } else if (Math.abs(input) < 16 && !keepMinutes) {
                input = input * 60;
            }
            if (!this._isUTC && keepLocalTime) {
                localAdjust = getDateOffset(this);
            }
            this._offset = input;
            this._isUTC = true;
            if (localAdjust != null) {
                this.add(localAdjust, 'm');
            }
            if (offset !== input) {
                if (!keepLocalTime || this._changeInProgress) {
                    addSubtract(this, createDuration(input - offset, 'm'), 1, false);
                } else if (!this._changeInProgress) {
                    this._changeInProgress = true;
                    hooks.updateOffset(this, true);
                    this._changeInProgress = null;
                }
            }
            return this;
        } else {
            return this._isUTC ? offset : getDateOffset(this);
        }
    }

    function getSetZone (input, keepLocalTime) {
        if (input != null) {
            if (typeof input !== 'string') {
                input = -input;
            }

            this.utcOffset(input, keepLocalTime);

            return this;
        } else {
            return -this.utcOffset();
        }
    }

    function setOffsetToUTC (keepLocalTime) {
        return this.utcOffset(0, keepLocalTime);
    }

    function setOffsetToLocal (keepLocalTime) {
        if (this._isUTC) {
            this.utcOffset(0, keepLocalTime);
            this._isUTC = false;

            if (keepLocalTime) {
                this.subtract(getDateOffset(this), 'm');
            }
        }
        return this;
    }

    function setOffsetToParsedOffset () {
        if (this._tzm != null) {
            this.utcOffset(this._tzm, false, true);
        } else if (typeof this._i === 'string') {
            var tZone = offsetFromString(matchOffset, this._i);
            if (tZone != null) {
                this.utcOffset(tZone);
            }
            else {
                this.utcOffset(0, true);
            }
        }
        return this;
    }

    function hasAlignedHourOffset (input) {
        if (!this.isValid()) {
            return false;
        }
        input = input ? createLocal(input).utcOffset() : 0;

        return (this.utcOffset() - input) % 60 === 0;
    }

    function isDaylightSavingTime () {
        return (
            this.utcOffset() > this.clone().month(0).utcOffset() ||
            this.utcOffset() > this.clone().month(5).utcOffset()
        );
    }

    function isDaylightSavingTimeShifted () {
        if (!isUndefined(this._isDSTShifted)) {
            return this._isDSTShifted;
        }

        var c = {};

        copyConfig(c, this);
        c = prepareConfig(c);

        if (c._a) {
            var other = c._isUTC ? createUTC(c._a) : createLocal(c._a);
            this._isDSTShifted = this.isValid() &&
                compareArrays(c._a, other.toArray()) > 0;
        } else {
            this._isDSTShifted = false;
        }

        return this._isDSTShifted;
    }

    function isLocal () {
        return this.isValid() ? !this._isUTC : false;
    }

    function isUtcOffset () {
        return this.isValid() ? this._isUTC : false;
    }

    function isUtc () {
        return this.isValid() ? this._isUTC && this._offset === 0 : false;
    }

    // ASP.NET json date format regex
    var aspNetRegex = /^(\-|\+)?(?:(\d*)[. ])?(\d+)\:(\d+)(?:\:(\d+)(\.\d*)?)?$/;

    // from http://docs.closure-library.googlecode.com/git/closure_goog_date_date.js.source.html
    // somewhat more in line with 4.4.3.2 2004 spec, but allows decimal anywhere
    // and further modified to allow for strings containing both week and day
    var isoRegex = /^(-|\+)?P(?:([-+]?[0-9,.]*)Y)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)W)?(?:([-+]?[0-9,.]*)D)?(?:T(?:([-+]?[0-9,.]*)H)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)S)?)?$/;

    function createDuration (input, key) {
        var duration = input,
            // matching against regexp is expensive, do it on demand
            match = null,
            sign,
            ret,
            diffRes;

        if (isDuration(input)) {
            duration = {
                ms : input._milliseconds,
                d  : input._days,
                M  : input._months
            };
        } else if (isNumber(input)) {
            duration = {};
            if (key) {
                duration[key] = input;
            } else {
                duration.milliseconds = input;
            }
        } else if (!!(match = aspNetRegex.exec(input))) {
            sign = (match[1] === '-') ? -1 : 1;
            duration = {
                y  : 0,
                d  : toInt(match[DATE])                         * sign,
                h  : toInt(match[HOUR])                         * sign,
                m  : toInt(match[MINUTE])                       * sign,
                s  : toInt(match[SECOND])                       * sign,
                ms : toInt(absRound(match[MILLISECOND] * 1000)) * sign // the millisecond decimal point is included in the match
            };
        } else if (!!(match = isoRegex.exec(input))) {
            sign = (match[1] === '-') ? -1 : 1;
            duration = {
                y : parseIso(match[2], sign),
                M : parseIso(match[3], sign),
                w : parseIso(match[4], sign),
                d : parseIso(match[5], sign),
                h : parseIso(match[6], sign),
                m : parseIso(match[7], sign),
                s : parseIso(match[8], sign)
            };
        } else if (duration == null) {// checks for null or undefined
            duration = {};
        } else if (typeof duration === 'object' && ('from' in duration || 'to' in duration)) {
            diffRes = momentsDifference(createLocal(duration.from), createLocal(duration.to));

            duration = {};
            duration.ms = diffRes.milliseconds;
            duration.M = diffRes.months;
        }

        ret = new Duration(duration);

        if (isDuration(input) && hasOwnProp(input, '_locale')) {
            ret._locale = input._locale;
        }

        return ret;
    }

    createDuration.fn = Duration.prototype;
    createDuration.invalid = createInvalid$1;

    function parseIso (inp, sign) {
        // We'd normally use ~~inp for this, but unfortunately it also
        // converts floats to ints.
        // inp may be undefined, so careful calling replace on it.
        var res = inp && parseFloat(inp.replace(',', '.'));
        // apply sign while we're at it
        return (isNaN(res) ? 0 : res) * sign;
    }

    function positiveMomentsDifference(base, other) {
        var res = {};

        res.months = other.month() - base.month() +
            (other.year() - base.year()) * 12;
        if (base.clone().add(res.months, 'M').isAfter(other)) {
            --res.months;
        }

        res.milliseconds = +other - +(base.clone().add(res.months, 'M'));

        return res;
    }

    function momentsDifference(base, other) {
        var res;
        if (!(base.isValid() && other.isValid())) {
            return {milliseconds: 0, months: 0};
        }

        other = cloneWithOffset(other, base);
        if (base.isBefore(other)) {
            res = positiveMomentsDifference(base, other);
        } else {
            res = positiveMomentsDifference(other, base);
            res.milliseconds = -res.milliseconds;
            res.months = -res.months;
        }

        return res;
    }

    // TODO: remove 'name' arg after deprecation is removed
    function createAdder(direction, name) {
        return function (val, period) {
            var dur, tmp;
            //invert the arguments, but complain about it
            if (period !== null && !isNaN(+period)) {
                deprecateSimple(name, 'moment().' + name  + '(period, number) is deprecated. Please use moment().' + name + '(number, period). ' +
                'See http://momentjs.com/guides/#/warnings/add-inverted-param/ for more info.');
                tmp = val; val = period; period = tmp;
            }

            val = typeof val === 'string' ? +val : val;
            dur = createDuration(val, period);
            addSubtract(this, dur, direction);
            return this;
        };
    }

    function addSubtract (mom, duration, isAdding, updateOffset) {
        var milliseconds = duration._milliseconds,
            days = absRound(duration._days),
            months = absRound(duration._months);

        if (!mom.isValid()) {
            // No op
            return;
        }

        updateOffset = updateOffset == null ? true : updateOffset;

        if (months) {
            setMonth(mom, get(mom, 'Month') + months * isAdding);
        }
        if (days) {
            set$1(mom, 'Date', get(mom, 'Date') + days * isAdding);
        }
        if (milliseconds) {
            mom._d.setTime(mom._d.valueOf() + milliseconds * isAdding);
        }
        if (updateOffset) {
            hooks.updateOffset(mom, days || months);
        }
    }

    var add      = createAdder(1, 'add');
    var subtract = createAdder(-1, 'subtract');

    function getCalendarFormat(myMoment, now) {
        var diff = myMoment.diff(now, 'days', true);
        return diff < -6 ? 'sameElse' :
                diff < -1 ? 'lastWeek' :
                diff < 0 ? 'lastDay' :
                diff < 1 ? 'sameDay' :
                diff < 2 ? 'nextDay' :
                diff < 7 ? 'nextWeek' : 'sameElse';
    }

    function calendar$1 (time, formats) {
        // We want to compare the start of today, vs this.
        // Getting start-of-today depends on whether we're local/utc/offset or not.
        var now = time || createLocal(),
            sod = cloneWithOffset(now, this).startOf('day'),
            format = hooks.calendarFormat(this, sod) || 'sameElse';

        var output = formats && (isFunction(formats[format]) ? formats[format].call(this, now) : formats[format]);

        return this.format(output || this.localeData().calendar(format, this, createLocal(now)));
    }

    function clone () {
        return new Moment(this);
    }

    function isAfter (input, units) {
        var localInput = isMoment(input) ? input : createLocal(input);
        if (!(this.isValid() && localInput.isValid())) {
            return false;
        }
        units = normalizeUnits(units) || 'millisecond';
        if (units === 'millisecond') {
            return this.valueOf() > localInput.valueOf();
        } else {
            return localInput.valueOf() < this.clone().startOf(units).valueOf();
        }
    }

    function isBefore (input, units) {
        var localInput = isMoment(input) ? input : createLocal(input);
        if (!(this.isValid() && localInput.isValid())) {
            return false;
        }
        units = normalizeUnits(units) || 'millisecond';
        if (units === 'millisecond') {
            return this.valueOf() < localInput.valueOf();
        } else {
            return this.clone().endOf(units).valueOf() < localInput.valueOf();
        }
    }

    function isBetween (from, to, units, inclusivity) {
        var localFrom = isMoment(from) ? from : createLocal(from),
            localTo = isMoment(to) ? to : createLocal(to);
        if (!(this.isValid() && localFrom.isValid() && localTo.isValid())) {
            return false;
        }
        inclusivity = inclusivity || '()';
        return (inclusivity[0] === '(' ? this.isAfter(localFrom, units) : !this.isBefore(localFrom, units)) &&
            (inclusivity[1] === ')' ? this.isBefore(localTo, units) : !this.isAfter(localTo, units));
    }

    function isSame (input, units) {
        var localInput = isMoment(input) ? input : createLocal(input),
            inputMs;
        if (!(this.isValid() && localInput.isValid())) {
            return false;
        }
        units = normalizeUnits(units) || 'millisecond';
        if (units === 'millisecond') {
            return this.valueOf() === localInput.valueOf();
        } else {
            inputMs = localInput.valueOf();
            return this.clone().startOf(units).valueOf() <= inputMs && inputMs <= this.clone().endOf(units).valueOf();
        }
    }

    function isSameOrAfter (input, units) {
        return this.isSame(input, units) || this.isAfter(input, units);
    }

    function isSameOrBefore (input, units) {
        return this.isSame(input, units) || this.isBefore(input, units);
    }

    function diff (input, units, asFloat) {
        var that,
            zoneDelta,
            output;

        if (!this.isValid()) {
            return NaN;
        }

        that = cloneWithOffset(input, this);

        if (!that.isValid()) {
            return NaN;
        }

        zoneDelta = (that.utcOffset() - this.utcOffset()) * 6e4;

        units = normalizeUnits(units);

        switch (units) {
            case 'year': output = monthDiff(this, that) / 12; break;
            case 'month': output = monthDiff(this, that); break;
            case 'quarter': output = monthDiff(this, that) / 3; break;
            case 'second': output = (this - that) / 1e3; break; // 1000
            case 'minute': output = (this - that) / 6e4; break; // 1000 * 60
            case 'hour': output = (this - that) / 36e5; break; // 1000 * 60 * 60
            case 'day': output = (this - that - zoneDelta) / 864e5; break; // 1000 * 60 * 60 * 24, negate dst
            case 'week': output = (this - that - zoneDelta) / 6048e5; break; // 1000 * 60 * 60 * 24 * 7, negate dst
            default: output = this - that;
        }

        return asFloat ? output : absFloor(output);
    }

    function monthDiff (a, b) {
        // difference in months
        var wholeMonthDiff = ((b.year() - a.year()) * 12) + (b.month() - a.month()),
            // b is in (anchor - 1 month, anchor + 1 month)
            anchor = a.clone().add(wholeMonthDiff, 'months'),
            anchor2, adjust;

        if (b - anchor < 0) {
            anchor2 = a.clone().add(wholeMonthDiff - 1, 'months');
            // linear across the month
            adjust = (b - anchor) / (anchor - anchor2);
        } else {
            anchor2 = a.clone().add(wholeMonthDiff + 1, 'months');
            // linear across the month
            adjust = (b - anchor) / (anchor2 - anchor);
        }

        //check for negative zero, return zero if negative zero
        return -(wholeMonthDiff + adjust) || 0;
    }

    hooks.defaultFormat = 'YYYY-MM-DDTHH:mm:ssZ';
    hooks.defaultFormatUtc = 'YYYY-MM-DDTHH:mm:ss[Z]';

    function toString () {
        return this.clone().locale('en').format('ddd MMM DD YYYY HH:mm:ss [GMT]ZZ');
    }

    function toISOString(keepOffset) {
        if (!this.isValid()) {
            return null;
        }
        var utc = keepOffset !== true;
        var m = utc ? this.clone().utc() : this;
        if (m.year() < 0 || m.year() > 9999) {
            return formatMoment(m, utc ? 'YYYYYY-MM-DD[T]HH:mm:ss.SSS[Z]' : 'YYYYYY-MM-DD[T]HH:mm:ss.SSSZ');
        }
        if (isFunction(Date.prototype.toISOString)) {
            // native implementation is ~50x faster, use it when we can
            if (utc) {
                return this.toDate().toISOString();
            } else {
                return new Date(this.valueOf() + this.utcOffset() * 60 * 1000).toISOString().replace('Z', formatMoment(m, 'Z'));
            }
        }
        return formatMoment(m, utc ? 'YYYY-MM-DD[T]HH:mm:ss.SSS[Z]' : 'YYYY-MM-DD[T]HH:mm:ss.SSSZ');
    }

    /**
     * Return a human readable representation of a moment that can
     * also be evaluated to get a new moment which is the same
     *
     * @link https://nodejs.org/dist/latest/docs/api/util.html#util_custom_inspect_function_on_objects
     */
    function inspect () {
        if (!this.isValid()) {
            return 'moment.invalid(/* ' + this._i + ' */)';
        }
        var func = 'moment';
        var zone = '';
        if (!this.isLocal()) {
            func = this.utcOffset() === 0 ? 'moment.utc' : 'moment.parseZone';
            zone = 'Z';
        }
        var prefix = '[' + func + '("]';
        var year = (0 <= this.year() && this.year() <= 9999) ? 'YYYY' : 'YYYYYY';
        var datetime = '-MM-DD[T]HH:mm:ss.SSS';
        var suffix = zone + '[")]';

        return this.format(prefix + year + datetime + suffix);
    }

    function format (inputString) {
        if (!inputString) {
            inputString = this.isUtc() ? hooks.defaultFormatUtc : hooks.defaultFormat;
        }
        var output = formatMoment(this, inputString);
        return this.localeData().postformat(output);
    }

    function from (time, withoutSuffix) {
        if (this.isValid() &&
                ((isMoment(time) && time.isValid()) ||
                 createLocal(time).isValid())) {
            return createDuration({to: this, from: time}).locale(this.locale()).humanize(!withoutSuffix);
        } else {
            return this.localeData().invalidDate();
        }
    }

    function fromNow (withoutSuffix) {
        return this.from(createLocal(), withoutSuffix);
    }

    function to (time, withoutSuffix) {
        if (this.isValid() &&
                ((isMoment(time) && time.isValid()) ||
                 createLocal(time).isValid())) {
            return createDuration({from: this, to: time}).locale(this.locale()).humanize(!withoutSuffix);
        } else {
            return this.localeData().invalidDate();
        }
    }

    function toNow (withoutSuffix) {
        return this.to(createLocal(), withoutSuffix);
    }

    // If passed a locale key, it will set the locale for this
    // instance.  Otherwise, it will return the locale configuration
    // variables for this instance.
    function locale (key) {
        var newLocaleData;

        if (key === undefined) {
            return this._locale._abbr;
        } else {
            newLocaleData = getLocale(key);
            if (newLocaleData != null) {
                this._locale = newLocaleData;
            }
            return this;
        }
    }

    var lang = deprecate(
        'moment().lang() is deprecated. Instead, use moment().localeData() to get the language configuration. Use moment().locale() to change languages.',
        function (key) {
            if (key === undefined) {
                return this.localeData();
            } else {
                return this.locale(key);
            }
        }
    );

    function localeData () {
        return this._locale;
    }

    var MS_PER_SECOND = 1000;
    var MS_PER_MINUTE = 60 * MS_PER_SECOND;
    var MS_PER_HOUR = 60 * MS_PER_MINUTE;
    var MS_PER_400_YEARS = (365 * 400 + 97) * 24 * MS_PER_HOUR;

    // actual modulo - handles negative numbers (for dates before 1970):
    function mod$1(dividend, divisor) {
        return (dividend % divisor + divisor) % divisor;
    }

    function localStartOfDate(y, m, d) {
        // the date constructor remaps years 0-99 to 1900-1999
        if (y < 100 && y >= 0) {
            // preserve leap years using a full 400 year cycle, then reset
            return new Date(y + 400, m, d) - MS_PER_400_YEARS;
        } else {
            return new Date(y, m, d).valueOf();
        }
    }

    function utcStartOfDate(y, m, d) {
        // Date.UTC remaps years 0-99 to 1900-1999
        if (y < 100 && y >= 0) {
            // preserve leap years using a full 400 year cycle, then reset
            return Date.UTC(y + 400, m, d) - MS_PER_400_YEARS;
        } else {
            return Date.UTC(y, m, d);
        }
    }

    function startOf (units) {
        var time;
        units = normalizeUnits(units);
        if (units === undefined || units === 'millisecond' || !this.isValid()) {
            return this;
        }

        var startOfDate = this._isUTC ? utcStartOfDate : localStartOfDate;

        switch (units) {
            case 'year':
                time = startOfDate(this.year(), 0, 1);
                break;
            case 'quarter':
                time = startOfDate(this.year(), this.month() - this.month() % 3, 1);
                break;
            case 'month':
                time = startOfDate(this.year(), this.month(), 1);
                break;
            case 'week':
                time = startOfDate(this.year(), this.month(), this.date() - this.weekday());
                break;
            case 'isoWeek':
                time = startOfDate(this.year(), this.month(), this.date() - (this.isoWeekday() - 1));
                break;
            case 'day':
            case 'date':
                time = startOfDate(this.year(), this.month(), this.date());
                break;
            case 'hour':
                time = this._d.valueOf();
                time -= mod$1(time + (this._isUTC ? 0 : this.utcOffset() * MS_PER_MINUTE), MS_PER_HOUR);
                break;
            case 'minute':
                time = this._d.valueOf();
                time -= mod$1(time, MS_PER_MINUTE);
                break;
            case 'second':
                time = this._d.valueOf();
                time -= mod$1(time, MS_PER_SECOND);
                break;
        }

        this._d.setTime(time);
        hooks.updateOffset(this, true);
        return this;
    }

    function endOf (units) {
        var time;
        units = normalizeUnits(units);
        if (units === undefined || units === 'millisecond' || !this.isValid()) {
            return this;
        }

        var startOfDate = this._isUTC ? utcStartOfDate : localStartOfDate;

        switch (units) {
            case 'year':
                time = startOfDate(this.year() + 1, 0, 1) - 1;
                break;
            case 'quarter':
                time = startOfDate(this.year(), this.month() - this.month() % 3 + 3, 1) - 1;
                break;
            case 'month':
                time = startOfDate(this.year(), this.month() + 1, 1) - 1;
                break;
            case 'week':
                time = startOfDate(this.year(), this.month(), this.date() - this.weekday() + 7) - 1;
                break;
            case 'isoWeek':
                time = startOfDate(this.year(), this.month(), this.date() - (this.isoWeekday() - 1) + 7) - 1;
                break;
            case 'day':
            case 'date':
                time = startOfDate(this.year(), this.month(), this.date() + 1) - 1;
                break;
            case 'hour':
                time = this._d.valueOf();
                time += MS_PER_HOUR - mod$1(time + (this._isUTC ? 0 : this.utcOffset() * MS_PER_MINUTE), MS_PER_HOUR) - 1;
                break;
            case 'minute':
                time = this._d.valueOf();
                time += MS_PER_MINUTE - mod$1(time, MS_PER_MINUTE) - 1;
                break;
            case 'second':
                time = this._d.valueOf();
                time += MS_PER_SECOND - mod$1(time, MS_PER_SECOND) - 1;
                break;
        }

        this._d.setTime(time);
        hooks.updateOffset(this, true);
        return this;
    }

    function valueOf () {
        return this._d.valueOf() - ((this._offset || 0) * 60000);
    }

    function unix () {
        return Math.floor(this.valueOf() / 1000);
    }

    function toDate () {
        return new Date(this.valueOf());
    }

    function toArray () {
        var m = this;
        return [m.year(), m.month(), m.date(), m.hour(), m.minute(), m.second(), m.millisecond()];
    }

    function toObject () {
        var m = this;
        return {
            years: m.year(),
            months: m.month(),
            date: m.date(),
            hours: m.hours(),
            minutes: m.minutes(),
            seconds: m.seconds(),
            milliseconds: m.milliseconds()
        };
    }

    function toJSON () {
        // new Date(NaN).toJSON() === null
        return this.isValid() ? this.toISOString() : null;
    }

    function isValid$2 () {
        return isValid(this);
    }

    function parsingFlags () {
        return extend({}, getParsingFlags(this));
    }

    function invalidAt () {
        return getParsingFlags(this).overflow;
    }

    function creationData() {
        return {
            input: this._i,
            format: this._f,
            locale: this._locale,
            isUTC: this._isUTC,
            strict: this._strict
        };
    }

    // FORMATTING

    addFormatToken(0, ['gg', 2], 0, function () {
        return this.weekYear() % 100;
    });

    addFormatToken(0, ['GG', 2], 0, function () {
        return this.isoWeekYear() % 100;
    });

    function addWeekYearFormatToken (token, getter) {
        addFormatToken(0, [token, token.length], 0, getter);
    }

    addWeekYearFormatToken('gggg',     'weekYear');
    addWeekYearFormatToken('ggggg',    'weekYear');
    addWeekYearFormatToken('GGGG',  'isoWeekYear');
    addWeekYearFormatToken('GGGGG', 'isoWeekYear');

    // ALIASES

    addUnitAlias('weekYear', 'gg');
    addUnitAlias('isoWeekYear', 'GG');

    // PRIORITY

    addUnitPriority('weekYear', 1);
    addUnitPriority('isoWeekYear', 1);


    // PARSING

    addRegexToken('G',      matchSigned);
    addRegexToken('g',      matchSigned);
    addRegexToken('GG',     match1to2, match2);
    addRegexToken('gg',     match1to2, match2);
    addRegexToken('GGGG',   match1to4, match4);
    addRegexToken('gggg',   match1to4, match4);
    addRegexToken('GGGGG',  match1to6, match6);
    addRegexToken('ggggg',  match1to6, match6);

    addWeekParseToken(['gggg', 'ggggg', 'GGGG', 'GGGGG'], function (input, week, config, token) {
        week[token.substr(0, 2)] = toInt(input);
    });

    addWeekParseToken(['gg', 'GG'], function (input, week, config, token) {
        week[token] = hooks.parseTwoDigitYear(input);
    });

    // MOMENTS

    function getSetWeekYear (input) {
        return getSetWeekYearHelper.call(this,
                input,
                this.week(),
                this.weekday(),
                this.localeData()._week.dow,
                this.localeData()._week.doy);
    }

    function getSetISOWeekYear (input) {
        return getSetWeekYearHelper.call(this,
                input, this.isoWeek(), this.isoWeekday(), 1, 4);
    }

    function getISOWeeksInYear () {
        return weeksInYear(this.year(), 1, 4);
    }

    function getWeeksInYear () {
        var weekInfo = this.localeData()._week;
        return weeksInYear(this.year(), weekInfo.dow, weekInfo.doy);
    }

    function getSetWeekYearHelper(input, week, weekday, dow, doy) {
        var weeksTarget;
        if (input == null) {
            return weekOfYear(this, dow, doy).year;
        } else {
            weeksTarget = weeksInYear(input, dow, doy);
            if (week > weeksTarget) {
                week = weeksTarget;
            }
            return setWeekAll.call(this, input, week, weekday, dow, doy);
        }
    }

    function setWeekAll(weekYear, week, weekday, dow, doy) {
        var dayOfYearData = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy),
            date = createUTCDate(dayOfYearData.year, 0, dayOfYearData.dayOfYear);

        this.year(date.getUTCFullYear());
        this.month(date.getUTCMonth());
        this.date(date.getUTCDate());
        return this;
    }

    // FORMATTING

    addFormatToken('Q', 0, 'Qo', 'quarter');

    // ALIASES

    addUnitAlias('quarter', 'Q');

    // PRIORITY

    addUnitPriority('quarter', 7);

    // PARSING

    addRegexToken('Q', match1);
    addParseToken('Q', function (input, array) {
        array[MONTH] = (toInt(input) - 1) * 3;
    });

    // MOMENTS

    function getSetQuarter (input) {
        return input == null ? Math.ceil((this.month() + 1) / 3) : this.month((input - 1) * 3 + this.month() % 3);
    }

    // FORMATTING

    addFormatToken('D', ['DD', 2], 'Do', 'date');

    // ALIASES

    addUnitAlias('date', 'D');

    // PRIORITY
    addUnitPriority('date', 9);

    // PARSING

    addRegexToken('D',  match1to2);
    addRegexToken('DD', match1to2, match2);
    addRegexToken('Do', function (isStrict, locale) {
        // TODO: Remove "ordinalParse" fallback in next major release.
        return isStrict ?
          (locale._dayOfMonthOrdinalParse || locale._ordinalParse) :
          locale._dayOfMonthOrdinalParseLenient;
    });

    addParseToken(['D', 'DD'], DATE);
    addParseToken('Do', function (input, array) {
        array[DATE] = toInt(input.match(match1to2)[0]);
    });

    // MOMENTS

    var getSetDayOfMonth = makeGetSet('Date', true);

    // FORMATTING

    addFormatToken('DDD', ['DDDD', 3], 'DDDo', 'dayOfYear');

    // ALIASES

    addUnitAlias('dayOfYear', 'DDD');

    // PRIORITY
    addUnitPriority('dayOfYear', 4);

    // PARSING

    addRegexToken('DDD',  match1to3);
    addRegexToken('DDDD', match3);
    addParseToken(['DDD', 'DDDD'], function (input, array, config) {
        config._dayOfYear = toInt(input);
    });

    // HELPERS

    // MOMENTS

    function getSetDayOfYear (input) {
        var dayOfYear = Math.round((this.clone().startOf('day') - this.clone().startOf('year')) / 864e5) + 1;
        return input == null ? dayOfYear : this.add((input - dayOfYear), 'd');
    }

    // FORMATTING

    addFormatToken('m', ['mm', 2], 0, 'minute');

    // ALIASES

    addUnitAlias('minute', 'm');

    // PRIORITY

    addUnitPriority('minute', 14);

    // PARSING

    addRegexToken('m',  match1to2);
    addRegexToken('mm', match1to2, match2);
    addParseToken(['m', 'mm'], MINUTE);

    // MOMENTS

    var getSetMinute = makeGetSet('Minutes', false);

    // FORMATTING

    addFormatToken('s', ['ss', 2], 0, 'second');

    // ALIASES

    addUnitAlias('second', 's');

    // PRIORITY

    addUnitPriority('second', 15);

    // PARSING

    addRegexToken('s',  match1to2);
    addRegexToken('ss', match1to2, match2);
    addParseToken(['s', 'ss'], SECOND);

    // MOMENTS

    var getSetSecond = makeGetSet('Seconds', false);

    // FORMATTING

    addFormatToken('S', 0, 0, function () {
        return ~~(this.millisecond() / 100);
    });

    addFormatToken(0, ['SS', 2], 0, function () {
        return ~~(this.millisecond() / 10);
    });

    addFormatToken(0, ['SSS', 3], 0, 'millisecond');
    addFormatToken(0, ['SSSS', 4], 0, function () {
        return this.millisecond() * 10;
    });
    addFormatToken(0, ['SSSSS', 5], 0, function () {
        return this.millisecond() * 100;
    });
    addFormatToken(0, ['SSSSSS', 6], 0, function () {
        return this.millisecond() * 1000;
    });
    addFormatToken(0, ['SSSSSSS', 7], 0, function () {
        return this.millisecond() * 10000;
    });
    addFormatToken(0, ['SSSSSSSS', 8], 0, function () {
        return this.millisecond() * 100000;
    });
    addFormatToken(0, ['SSSSSSSSS', 9], 0, function () {
        return this.millisecond() * 1000000;
    });


    // ALIASES

    addUnitAlias('millisecond', 'ms');

    // PRIORITY

    addUnitPriority('millisecond', 16);

    // PARSING

    addRegexToken('S',    match1to3, match1);
    addRegexToken('SS',   match1to3, match2);
    addRegexToken('SSS',  match1to3, match3);

    var token;
    for (token = 'SSSS'; token.length <= 9; token += 'S') {
        addRegexToken(token, matchUnsigned);
    }

    function parseMs(input, array) {
        array[MILLISECOND] = toInt(('0.' + input) * 1000);
    }

    for (token = 'S'; token.length <= 9; token += 'S') {
        addParseToken(token, parseMs);
    }
    // MOMENTS

    var getSetMillisecond = makeGetSet('Milliseconds', false);

    // FORMATTING

    addFormatToken('z',  0, 0, 'zoneAbbr');
    addFormatToken('zz', 0, 0, 'zoneName');

    // MOMENTS

    function getZoneAbbr () {
        return this._isUTC ? 'UTC' : '';
    }

    function getZoneName () {
        return this._isUTC ? 'Coordinated Universal Time' : '';
    }

    var proto = Moment.prototype;

    proto.add               = add;
    proto.calendar          = calendar$1;
    proto.clone             = clone;
    proto.diff              = diff;
    proto.endOf             = endOf;
    proto.format            = format;
    proto.from              = from;
    proto.fromNow           = fromNow;
    proto.to                = to;
    proto.toNow             = toNow;
    proto.get               = stringGet;
    proto.invalidAt         = invalidAt;
    proto.isAfter           = isAfter;
    proto.isBefore          = isBefore;
    proto.isBetween         = isBetween;
    proto.isSame            = isSame;
    proto.isSameOrAfter     = isSameOrAfter;
    proto.isSameOrBefore    = isSameOrBefore;
    proto.isValid           = isValid$2;
    proto.lang              = lang;
    proto.locale            = locale;
    proto.localeData        = localeData;
    proto.max               = prototypeMax;
    proto.min               = prototypeMin;
    proto.parsingFlags      = parsingFlags;
    proto.set               = stringSet;
    proto.startOf           = startOf;
    proto.subtract          = subtract;
    proto.toArray           = toArray;
    proto.toObject          = toObject;
    proto.toDate            = toDate;
    proto.toISOString       = toISOString;
    proto.inspect           = inspect;
    proto.toJSON            = toJSON;
    proto.toString          = toString;
    proto.unix              = unix;
    proto.valueOf           = valueOf;
    proto.creationData      = creationData;
    proto.year       = getSetYear;
    proto.isLeapYear = getIsLeapYear;
    proto.weekYear    = getSetWeekYear;
    proto.isoWeekYear = getSetISOWeekYear;
    proto.quarter = proto.quarters = getSetQuarter;
    proto.month       = getSetMonth;
    proto.daysInMonth = getDaysInMonth;
    proto.week           = proto.weeks        = getSetWeek;
    proto.isoWeek        = proto.isoWeeks     = getSetISOWeek;
    proto.weeksInYear    = getWeeksInYear;
    proto.isoWeeksInYear = getISOWeeksInYear;
    proto.date       = getSetDayOfMonth;
    proto.day        = proto.days             = getSetDayOfWeek;
    proto.weekday    = getSetLocaleDayOfWeek;
    proto.isoWeekday = getSetISODayOfWeek;
    proto.dayOfYear  = getSetDayOfYear;
    proto.hour = proto.hours = getSetHour;
    proto.minute = proto.minutes = getSetMinute;
    proto.second = proto.seconds = getSetSecond;
    proto.millisecond = proto.milliseconds = getSetMillisecond;
    proto.utcOffset            = getSetOffset;
    proto.utc                  = setOffsetToUTC;
    proto.local                = setOffsetToLocal;
    proto.parseZone            = setOffsetToParsedOffset;
    proto.hasAlignedHourOffset = hasAlignedHourOffset;
    proto.isDST                = isDaylightSavingTime;
    proto.isLocal              = isLocal;
    proto.isUtcOffset          = isUtcOffset;
    proto.isUtc                = isUtc;
    proto.isUTC                = isUtc;
    proto.zoneAbbr = getZoneAbbr;
    proto.zoneName = getZoneName;
    proto.dates  = deprecate('dates accessor is deprecated. Use date instead.', getSetDayOfMonth);
    proto.months = deprecate('months accessor is deprecated. Use month instead', getSetMonth);
    proto.years  = deprecate('years accessor is deprecated. Use year instead', getSetYear);
    proto.zone   = deprecate('moment().zone is deprecated, use moment().utcOffset instead. http://momentjs.com/guides/#/warnings/zone/', getSetZone);
    proto.isDSTShifted = deprecate('isDSTShifted is deprecated. See http://momentjs.com/guides/#/warnings/dst-shifted/ for more information', isDaylightSavingTimeShifted);

    function createUnix (input) {
        return createLocal(input * 1000);
    }

    function createInZone () {
        return createLocal.apply(null, arguments).parseZone();
    }

    function preParsePostFormat (string) {
        return string;
    }

    var proto$1 = Locale.prototype;

    proto$1.calendar        = calendar;
    proto$1.longDateFormat  = longDateFormat;
    proto$1.invalidDate     = invalidDate;
    proto$1.ordinal         = ordinal;
    proto$1.preparse        = preParsePostFormat;
    proto$1.postformat      = preParsePostFormat;
    proto$1.relativeTime    = relativeTime;
    proto$1.pastFuture      = pastFuture;
    proto$1.set             = set;

    proto$1.months            =        localeMonths;
    proto$1.monthsShort       =        localeMonthsShort;
    proto$1.monthsParse       =        localeMonthsParse;
    proto$1.monthsRegex       = monthsRegex;
    proto$1.monthsShortRegex  = monthsShortRegex;
    proto$1.week = localeWeek;
    proto$1.firstDayOfYear = localeFirstDayOfYear;
    proto$1.firstDayOfWeek = localeFirstDayOfWeek;

    proto$1.weekdays       =        localeWeekdays;
    proto$1.weekdaysMin    =        localeWeekdaysMin;
    proto$1.weekdaysShort  =        localeWeekdaysShort;
    proto$1.weekdaysParse  =        localeWeekdaysParse;

    proto$1.weekdaysRegex       =        weekdaysRegex;
    proto$1.weekdaysShortRegex  =        weekdaysShortRegex;
    proto$1.weekdaysMinRegex    =        weekdaysMinRegex;

    proto$1.isPM = localeIsPM;
    proto$1.meridiem = localeMeridiem;

    function get$1 (format, index, field, setter) {
        var locale = getLocale();
        var utc = createUTC().set(setter, index);
        return locale[field](utc, format);
    }

    function listMonthsImpl (format, index, field) {
        if (isNumber(format)) {
            index = format;
            format = undefined;
        }

        format = format || '';

        if (index != null) {
            return get$1(format, index, field, 'month');
        }

        var i;
        var out = [];
        for (i = 0; i < 12; i++) {
            out[i] = get$1(format, i, field, 'month');
        }
        return out;
    }

    // ()
    // (5)
    // (fmt, 5)
    // (fmt)
    // (true)
    // (true, 5)
    // (true, fmt, 5)
    // (true, fmt)
    function listWeekdaysImpl (localeSorted, format, index, field) {
        if (typeof localeSorted === 'boolean') {
            if (isNumber(format)) {
                index = format;
                format = undefined;
            }

            format = format || '';
        } else {
            format = localeSorted;
            index = format;
            localeSorted = false;

            if (isNumber(format)) {
                index = format;
                format = undefined;
            }

            format = format || '';
        }

        var locale = getLocale(),
            shift = localeSorted ? locale._week.dow : 0;

        if (index != null) {
            return get$1(format, (index + shift) % 7, field, 'day');
        }

        var i;
        var out = [];
        for (i = 0; i < 7; i++) {
            out[i] = get$1(format, (i + shift) % 7, field, 'day');
        }
        return out;
    }

    function listMonths (format, index) {
        return listMonthsImpl(format, index, 'months');
    }

    function listMonthsShort (format, index) {
        return listMonthsImpl(format, index, 'monthsShort');
    }

    function listWeekdays (localeSorted, format, index) {
        return listWeekdaysImpl(localeSorted, format, index, 'weekdays');
    }

    function listWeekdaysShort (localeSorted, format, index) {
        return listWeekdaysImpl(localeSorted, format, index, 'weekdaysShort');
    }

    function listWeekdaysMin (localeSorted, format, index) {
        return listWeekdaysImpl(localeSorted, format, index, 'weekdaysMin');
    }

    getSetGlobalLocale('en', {
        dayOfMonthOrdinalParse: /\d{1,2}(th|st|nd|rd)/,
        ordinal : function (number) {
            var b = number % 10,
                output = (toInt(number % 100 / 10) === 1) ? 'th' :
                (b === 1) ? 'st' :
                (b === 2) ? 'nd' :
                (b === 3) ? 'rd' : 'th';
            return number + output;
        }
    });

    // Side effect imports

    hooks.lang = deprecate('moment.lang is deprecated. Use moment.locale instead.', getSetGlobalLocale);
    hooks.langData = deprecate('moment.langData is deprecated. Use moment.localeData instead.', getLocale);

    var mathAbs = Math.abs;

    function abs () {
        var data           = this._data;

        this._milliseconds = mathAbs(this._milliseconds);
        this._days         = mathAbs(this._days);
        this._months       = mathAbs(this._months);

        data.milliseconds  = mathAbs(data.milliseconds);
        data.seconds       = mathAbs(data.seconds);
        data.minutes       = mathAbs(data.minutes);
        data.hours         = mathAbs(data.hours);
        data.months        = mathAbs(data.months);
        data.years         = mathAbs(data.years);

        return this;
    }

    function addSubtract$1 (duration, input, value, direction) {
        var other = createDuration(input, value);

        duration._milliseconds += direction * other._milliseconds;
        duration._days         += direction * other._days;
        duration._months       += direction * other._months;

        return duration._bubble();
    }

    // supports only 2.0-style add(1, 's') or add(duration)
    function add$1 (input, value) {
        return addSubtract$1(this, input, value, 1);
    }

    // supports only 2.0-style subtract(1, 's') or subtract(duration)
    function subtract$1 (input, value) {
        return addSubtract$1(this, input, value, -1);
    }

    function absCeil (number) {
        if (number < 0) {
            return Math.floor(number);
        } else {
            return Math.ceil(number);
        }
    }

    function bubble () {
        var milliseconds = this._milliseconds;
        var days         = this._days;
        var months       = this._months;
        var data         = this._data;
        var seconds, minutes, hours, years, monthsFromDays;

        // if we have a mix of positive and negative values, bubble down first
        // check: https://github.com/moment/moment/issues/2166
        if (!((milliseconds >= 0 && days >= 0 && months >= 0) ||
                (milliseconds <= 0 && days <= 0 && months <= 0))) {
            milliseconds += absCeil(monthsToDays(months) + days) * 864e5;
            days = 0;
            months = 0;
        }

        // The following code bubbles up values, see the tests for
        // examples of what that means.
        data.milliseconds = milliseconds % 1000;

        seconds           = absFloor(milliseconds / 1000);
        data.seconds      = seconds % 60;

        minutes           = absFloor(seconds / 60);
        data.minutes      = minutes % 60;

        hours             = absFloor(minutes / 60);
        data.hours        = hours % 24;

        days += absFloor(hours / 24);

        // convert days to months
        monthsFromDays = absFloor(daysToMonths(days));
        months += monthsFromDays;
        days -= absCeil(monthsToDays(monthsFromDays));

        // 12 months -> 1 year
        years = absFloor(months / 12);
        months %= 12;

        data.days   = days;
        data.months = months;
        data.years  = years;

        return this;
    }

    function daysToMonths (days) {
        // 400 years have 146097 days (taking into account leap year rules)
        // 400 years have 12 months === 4800
        return days * 4800 / 146097;
    }

    function monthsToDays (months) {
        // the reverse of daysToMonths
        return months * 146097 / 4800;
    }

    function as (units) {
        if (!this.isValid()) {
            return NaN;
        }
        var days;
        var months;
        var milliseconds = this._milliseconds;

        units = normalizeUnits(units);

        if (units === 'month' || units === 'quarter' || units === 'year') {
            days = this._days + milliseconds / 864e5;
            months = this._months + daysToMonths(days);
            switch (units) {
                case 'month':   return months;
                case 'quarter': return months / 3;
                case 'year':    return months / 12;
            }
        } else {
            // handle milliseconds separately because of floating point math errors (issue #1867)
            days = this._days + Math.round(monthsToDays(this._months));
            switch (units) {
                case 'week'   : return days / 7     + milliseconds / 6048e5;
                case 'day'    : return days         + milliseconds / 864e5;
                case 'hour'   : return days * 24    + milliseconds / 36e5;
                case 'minute' : return days * 1440  + milliseconds / 6e4;
                case 'second' : return days * 86400 + milliseconds / 1000;
                // Math.floor prevents floating point math errors here
                case 'millisecond': return Math.floor(days * 864e5) + milliseconds;
                default: throw new Error('Unknown unit ' + units);
            }
        }
    }

    // TODO: Use this.as('ms')?
    function valueOf$1 () {
        if (!this.isValid()) {
            return NaN;
        }
        return (
            this._milliseconds +
            this._days * 864e5 +
            (this._months % 12) * 2592e6 +
            toInt(this._months / 12) * 31536e6
        );
    }

    function makeAs (alias) {
        return function () {
            return this.as(alias);
        };
    }

    var asMilliseconds = makeAs('ms');
    var asSeconds      = makeAs('s');
    var asMinutes      = makeAs('m');
    var asHours        = makeAs('h');
    var asDays         = makeAs('d');
    var asWeeks        = makeAs('w');
    var asMonths       = makeAs('M');
    var asQuarters     = makeAs('Q');
    var asYears        = makeAs('y');

    function clone$1 () {
        return createDuration(this);
    }

    function get$2 (units) {
        units = normalizeUnits(units);
        return this.isValid() ? this[units + 's']() : NaN;
    }

    function makeGetter(name) {
        return function () {
            return this.isValid() ? this._data[name] : NaN;
        };
    }

    var milliseconds = makeGetter('milliseconds');
    var seconds      = makeGetter('seconds');
    var minutes      = makeGetter('minutes');
    var hours        = makeGetter('hours');
    var days         = makeGetter('days');
    var months       = makeGetter('months');
    var years        = makeGetter('years');

    function weeks () {
        return absFloor(this.days() / 7);
    }

    var round = Math.round;
    var thresholds = {
        ss: 44,         // a few seconds to seconds
        s : 45,         // seconds to minute
        m : 45,         // minutes to hour
        h : 22,         // hours to day
        d : 26,         // days to month
        M : 11          // months to year
    };

    // helper function for moment.fn.from, moment.fn.fromNow, and moment.duration.fn.humanize
    function substituteTimeAgo(string, number, withoutSuffix, isFuture, locale) {
        return locale.relativeTime(number || 1, !!withoutSuffix, string, isFuture);
    }

    function relativeTime$1 (posNegDuration, withoutSuffix, locale) {
        var duration = createDuration(posNegDuration).abs();
        var seconds  = round(duration.as('s'));
        var minutes  = round(duration.as('m'));
        var hours    = round(duration.as('h'));
        var days     = round(duration.as('d'));
        var months   = round(duration.as('M'));
        var years    = round(duration.as('y'));

        var a = seconds <= thresholds.ss && ['s', seconds]  ||
                seconds < thresholds.s   && ['ss', seconds] ||
                minutes <= 1             && ['m']           ||
                minutes < thresholds.m   && ['mm', minutes] ||
                hours   <= 1             && ['h']           ||
                hours   < thresholds.h   && ['hh', hours]   ||
                days    <= 1             && ['d']           ||
                days    < thresholds.d   && ['dd', days]    ||
                months  <= 1             && ['M']           ||
                months  < thresholds.M   && ['MM', months]  ||
                years   <= 1             && ['y']           || ['yy', years];

        a[2] = withoutSuffix;
        a[3] = +posNegDuration > 0;
        a[4] = locale;
        return substituteTimeAgo.apply(null, a);
    }

    // This function allows you to set the rounding function for relative time strings
    function getSetRelativeTimeRounding (roundingFunction) {
        if (roundingFunction === undefined) {
            return round;
        }
        if (typeof(roundingFunction) === 'function') {
            round = roundingFunction;
            return true;
        }
        return false;
    }

    // This function allows you to set a threshold for relative time strings
    function getSetRelativeTimeThreshold (threshold, limit) {
        if (thresholds[threshold] === undefined) {
            return false;
        }
        if (limit === undefined) {
            return thresholds[threshold];
        }
        thresholds[threshold] = limit;
        if (threshold === 's') {
            thresholds.ss = limit - 1;
        }
        return true;
    }

    function humanize (withSuffix) {
        if (!this.isValid()) {
            return this.localeData().invalidDate();
        }

        var locale = this.localeData();
        var output = relativeTime$1(this, !withSuffix, locale);

        if (withSuffix) {
            output = locale.pastFuture(+this, output);
        }

        return locale.postformat(output);
    }

    var abs$1 = Math.abs;

    function sign(x) {
        return ((x > 0) - (x < 0)) || +x;
    }

    function toISOString$1() {
        // for ISO strings we do not use the normal bubbling rules:
        //  * milliseconds bubble up until they become hours
        //  * days do not bubble at all
        //  * months bubble up until they become years
        // This is because there is no context-free conversion between hours and days
        // (think of clock changes)
        // and also not between days and months (28-31 days per month)
        if (!this.isValid()) {
            return this.localeData().invalidDate();
        }

        var seconds = abs$1(this._milliseconds) / 1000;
        var days         = abs$1(this._days);
        var months       = abs$1(this._months);
        var minutes, hours, years;

        // 3600 seconds -> 60 minutes -> 1 hour
        minutes           = absFloor(seconds / 60);
        hours             = absFloor(minutes / 60);
        seconds %= 60;
        minutes %= 60;

        // 12 months -> 1 year
        years  = absFloor(months / 12);
        months %= 12;


        // inspired by https://github.com/dordille/moment-isoduration/blob/master/moment.isoduration.js
        var Y = years;
        var M = months;
        var D = days;
        var h = hours;
        var m = minutes;
        var s = seconds ? seconds.toFixed(3).replace(/\.?0+$/, '') : '';
        var total = this.asSeconds();

        if (!total) {
            // this is the same as C#'s (Noda) and python (isodate)...
            // but not other JS (goog.date)
            return 'P0D';
        }

        var totalSign = total < 0 ? '-' : '';
        var ymSign = sign(this._months) !== sign(total) ? '-' : '';
        var daysSign = sign(this._days) !== sign(total) ? '-' : '';
        var hmsSign = sign(this._milliseconds) !== sign(total) ? '-' : '';

        return totalSign + 'P' +
            (Y ? ymSign + Y + 'Y' : '') +
            (M ? ymSign + M + 'M' : '') +
            (D ? daysSign + D + 'D' : '') +
            ((h || m || s) ? 'T' : '') +
            (h ? hmsSign + h + 'H' : '') +
            (m ? hmsSign + m + 'M' : '') +
            (s ? hmsSign + s + 'S' : '');
    }

    var proto$2 = Duration.prototype;

    proto$2.isValid        = isValid$1;
    proto$2.abs            = abs;
    proto$2.add            = add$1;
    proto$2.subtract       = subtract$1;
    proto$2.as             = as;
    proto$2.asMilliseconds = asMilliseconds;
    proto$2.asSeconds      = asSeconds;
    proto$2.asMinutes      = asMinutes;
    proto$2.asHours        = asHours;
    proto$2.asDays         = asDays;
    proto$2.asWeeks        = asWeeks;
    proto$2.asMonths       = asMonths;
    proto$2.asQuarters     = asQuarters;
    proto$2.asYears        = asYears;
    proto$2.valueOf        = valueOf$1;
    proto$2._bubble        = bubble;
    proto$2.clone          = clone$1;
    proto$2.get            = get$2;
    proto$2.milliseconds   = milliseconds;
    proto$2.seconds        = seconds;
    proto$2.minutes        = minutes;
    proto$2.hours          = hours;
    proto$2.days           = days;
    proto$2.weeks          = weeks;
    proto$2.months         = months;
    proto$2.years          = years;
    proto$2.humanize       = humanize;
    proto$2.toISOString    = toISOString$1;
    proto$2.toString       = toISOString$1;
    proto$2.toJSON         = toISOString$1;
    proto$2.locale         = locale;
    proto$2.localeData     = localeData;

    proto$2.toIsoString = deprecate('toIsoString() is deprecated. Please use toISOString() instead (notice the capitals)', toISOString$1);
    proto$2.lang = lang;

    // Side effect imports

    // FORMATTING

    addFormatToken('X', 0, 0, 'unix');
    addFormatToken('x', 0, 0, 'valueOf');

    // PARSING

    addRegexToken('x', matchSigned);
    addRegexToken('X', matchTimestamp);
    addParseToken('X', function (input, array, config) {
        config._d = new Date(parseFloat(input, 10) * 1000);
    });
    addParseToken('x', function (input, array, config) {
        config._d = new Date(toInt(input));
    });

    // Side effect imports


    hooks.version = '2.24.0';

    setHookCallback(createLocal);

    hooks.fn                    = proto;
    hooks.min                   = min;
    hooks.max                   = max;
    hooks.now                   = now;
    hooks.utc                   = createUTC;
    hooks.unix                  = createUnix;
    hooks.months                = listMonths;
    hooks.isDate                = isDate;
    hooks.locale                = getSetGlobalLocale;
    hooks.invalid               = createInvalid;
    hooks.duration              = createDuration;
    hooks.isMoment              = isMoment;
    hooks.weekdays              = listWeekdays;
    hooks.parseZone             = createInZone;
    hooks.localeData            = getLocale;
    hooks.isDuration            = isDuration;
    hooks.monthsShort           = listMonthsShort;
    hooks.weekdaysMin           = listWeekdaysMin;
    hooks.defineLocale          = defineLocale;
    hooks.updateLocale          = updateLocale;
    hooks.locales               = listLocales;
    hooks.weekdaysShort         = listWeekdaysShort;
    hooks.normalizeUnits        = normalizeUnits;
    hooks.relativeTimeRounding  = getSetRelativeTimeRounding;
    hooks.relativeTimeThreshold = getSetRelativeTimeThreshold;
    hooks.calendarFormat        = getCalendarFormat;
    hooks.prototype             = proto;

    // currently HTML5 input type only supports 24-hour formats
    hooks.HTML5_FMT = {
        DATETIME_LOCAL: 'YYYY-MM-DDTHH:mm',             // <input type="datetime-local" />
        DATETIME_LOCAL_SECONDS: 'YYYY-MM-DDTHH:mm:ss',  // <input type="datetime-local" step="1" />
        DATETIME_LOCAL_MS: 'YYYY-MM-DDTHH:mm:ss.SSS',   // <input type="datetime-local" step="0.001" />
        DATE: 'YYYY-MM-DD',                             // <input type="date" />
        TIME: 'HH:mm',                                  // <input type="time" />
        TIME_SECONDS: 'HH:mm:ss',                       // <input type="time" step="1" />
        TIME_MS: 'HH:mm:ss.SSS',                        // <input type="time" step="0.001" />
        WEEK: 'GGGG-[W]WW',                             // <input type="week" />
        MONTH: 'YYYY-MM'                                // <input type="month" />
    };

    return hooks;

})));

},{}],44:[function(require,module,exports){
exports.endianness = function () { return 'LE' };

exports.hostname = function () {
    if (typeof location !== 'undefined') {
        return location.hostname
    }
    else return '';
};

exports.loadavg = function () { return [] };

exports.uptime = function () { return 0 };

exports.freemem = function () {
    return Number.MAX_VALUE;
};

exports.totalmem = function () {
    return Number.MAX_VALUE;
};

exports.cpus = function () { return [] };

exports.type = function () { return 'Browser' };

exports.release = function () {
    if (typeof navigator !== 'undefined') {
        return navigator.appVersion;
    }
    return '';
};

exports.networkInterfaces
= exports.getNetworkInterfaces
= function () { return {} };

exports.arch = function () { return 'javascript' };

exports.platform = function () { return 'browser' };

exports.tmpdir = exports.tmpDir = function () {
    return '/tmp';
};

exports.EOL = '\n';

},{}],45:[function(require,module,exports){
var isarray = require('isarray')

/**
 * Expose `pathToRegexp`.
 */
module.exports = pathToRegexp
module.exports.parse = parse
module.exports.compile = compile
module.exports.tokensToFunction = tokensToFunction
module.exports.tokensToRegExp = tokensToRegExp

/**
 * The main path matching regexp utility.
 *
 * @type {RegExp}
 */
var PATH_REGEXP = new RegExp([
  // Match escaped characters that would otherwise appear in future matches.
  // This allows the user to escape special characters that won't transform.
  '(\\\\.)',
  // Match Express-style parameters and un-named parameters with a prefix
  // and optional suffixes. Matches appear as:
  //
  // "/:test(\\d+)?" => ["/", "test", "\d+", undefined, "?", undefined]
  // "/route(\\d+)"  => [undefined, undefined, undefined, "\d+", undefined, undefined]
  // "/*"            => ["/", undefined, undefined, undefined, undefined, "*"]
  '([\\/.])?(?:(?:\\:(\\w+)(?:\\(((?:\\\\.|[^\\\\()])+)\\))?|\\(((?:\\\\.|[^\\\\()])+)\\))([+*?])?|(\\*))'
].join('|'), 'g')

/**
 * Parse a string for the raw tokens.
 *
 * @param  {string}  str
 * @param  {Object=} options
 * @return {!Array}
 */
function parse (str, options) {
  var tokens = []
  var key = 0
  var index = 0
  var path = ''
  var defaultDelimiter = options && options.delimiter || '/'
  var res

  while ((res = PATH_REGEXP.exec(str)) != null) {
    var m = res[0]
    var escaped = res[1]
    var offset = res.index
    path += str.slice(index, offset)
    index = offset + m.length

    // Ignore already escaped sequences.
    if (escaped) {
      path += escaped[1]
      continue
    }

    var next = str[index]
    var prefix = res[2]
    var name = res[3]
    var capture = res[4]
    var group = res[5]
    var modifier = res[6]
    var asterisk = res[7]

    // Push the current path onto the tokens.
    if (path) {
      tokens.push(path)
      path = ''
    }

    var partial = prefix != null && next != null && next !== prefix
    var repeat = modifier === '+' || modifier === '*'
    var optional = modifier === '?' || modifier === '*'
    var delimiter = res[2] || defaultDelimiter
    var pattern = capture || group

    tokens.push({
      name: name || key++,
      prefix: prefix || '',
      delimiter: delimiter,
      optional: optional,
      repeat: repeat,
      partial: partial,
      asterisk: !!asterisk,
      pattern: pattern ? escapeGroup(pattern) : (asterisk ? '.*' : '[^' + escapeString(delimiter) + ']+?')
    })
  }

  // Match any characters still remaining.
  if (index < str.length) {
    path += str.substr(index)
  }

  // If the path exists, push it onto the end.
  if (path) {
    tokens.push(path)
  }

  return tokens
}

/**
 * Compile a string to a template function for the path.
 *
 * @param  {string}             str
 * @param  {Object=}            options
 * @return {!function(Object=, Object=)}
 */
function compile (str, options) {
  return tokensToFunction(parse(str, options))
}

/**
 * Prettier encoding of URI path segments.
 *
 * @param  {string}
 * @return {string}
 */
function encodeURIComponentPretty (str) {
  return encodeURI(str).replace(/[\/?#]/g, function (c) {
    return '%' + c.charCodeAt(0).toString(16).toUpperCase()
  })
}

/**
 * Encode the asterisk parameter. Similar to `pretty`, but allows slashes.
 *
 * @param  {string}
 * @return {string}
 */
function encodeAsterisk (str) {
  return encodeURI(str).replace(/[?#]/g, function (c) {
    return '%' + c.charCodeAt(0).toString(16).toUpperCase()
  })
}

/**
 * Expose a method for transforming tokens into the path function.
 */
function tokensToFunction (tokens) {
  // Compile all the tokens into regexps.
  var matches = new Array(tokens.length)

  // Compile all the patterns before compilation.
  for (var i = 0; i < tokens.length; i++) {
    if (typeof tokens[i] === 'object') {
      matches[i] = new RegExp('^(?:' + tokens[i].pattern + ')$')
    }
  }

  return function (obj, opts) {
    var path = ''
    var data = obj || {}
    var options = opts || {}
    var encode = options.pretty ? encodeURIComponentPretty : encodeURIComponent

    for (var i = 0; i < tokens.length; i++) {
      var token = tokens[i]

      if (typeof token === 'string') {
        path += token

        continue
      }

      var value = data[token.name]
      var segment

      if (value == null) {
        if (token.optional) {
          // Prepend partial segment prefixes.
          if (token.partial) {
            path += token.prefix
          }

          continue
        } else {
          throw new TypeError('Expected "' + token.name + '" to be defined')
        }
      }

      if (isarray(value)) {
        if (!token.repeat) {
          throw new TypeError('Expected "' + token.name + '" to not repeat, but received `' + JSON.stringify(value) + '`')
        }

        if (value.length === 0) {
          if (token.optional) {
            continue
          } else {
            throw new TypeError('Expected "' + token.name + '" to not be empty')
          }
        }

        for (var j = 0; j < value.length; j++) {
          segment = encode(value[j])

          if (!matches[i].test(segment)) {
            throw new TypeError('Expected all "' + token.name + '" to match "' + token.pattern + '", but received `' + JSON.stringify(segment) + '`')
          }

          path += (j === 0 ? token.prefix : token.delimiter) + segment
        }

        continue
      }

      segment = token.asterisk ? encodeAsterisk(value) : encode(value)

      if (!matches[i].test(segment)) {
        throw new TypeError('Expected "' + token.name + '" to match "' + token.pattern + '", but received "' + segment + '"')
      }

      path += token.prefix + segment
    }

    return path
  }
}

/**
 * Escape a regular expression string.
 *
 * @param  {string} str
 * @return {string}
 */
function escapeString (str) {
  return str.replace(/([.+*?=^!:${}()[\]|\/\\])/g, '\\$1')
}

/**
 * Escape the capturing group by escaping special characters and meaning.
 *
 * @param  {string} group
 * @return {string}
 */
function escapeGroup (group) {
  return group.replace(/([=!:$\/()])/g, '\\$1')
}

/**
 * Attach the keys as a property of the regexp.
 *
 * @param  {!RegExp} re
 * @param  {Array}   keys
 * @return {!RegExp}
 */
function attachKeys (re, keys) {
  re.keys = keys
  return re
}

/**
 * Get the flags for a regexp from the options.
 *
 * @param  {Object} options
 * @return {string}
 */
function flags (options) {
  return options.sensitive ? '' : 'i'
}

/**
 * Pull out keys from a regexp.
 *
 * @param  {!RegExp} path
 * @param  {!Array}  keys
 * @return {!RegExp}
 */
function regexpToRegexp (path, keys) {
  // Use a negative lookahead to match only capturing groups.
  var groups = path.source.match(/\((?!\?)/g)

  if (groups) {
    for (var i = 0; i < groups.length; i++) {
      keys.push({
        name: i,
        prefix: null,
        delimiter: null,
        optional: false,
        repeat: false,
        partial: false,
        asterisk: false,
        pattern: null
      })
    }
  }

  return attachKeys(path, keys)
}

/**
 * Transform an array into a regexp.
 *
 * @param  {!Array}  path
 * @param  {Array}   keys
 * @param  {!Object} options
 * @return {!RegExp}
 */
function arrayToRegexp (path, keys, options) {
  var parts = []

  for (var i = 0; i < path.length; i++) {
    parts.push(pathToRegexp(path[i], keys, options).source)
  }

  var regexp = new RegExp('(?:' + parts.join('|') + ')', flags(options))

  return attachKeys(regexp, keys)
}

/**
 * Create a path regexp from string input.
 *
 * @param  {string}  path
 * @param  {!Array}  keys
 * @param  {!Object} options
 * @return {!RegExp}
 */
function stringToRegexp (path, keys, options) {
  return tokensToRegExp(parse(path, options), keys, options)
}

/**
 * Expose a function for taking tokens and returning a RegExp.
 *
 * @param  {!Array}          tokens
 * @param  {(Array|Object)=} keys
 * @param  {Object=}         options
 * @return {!RegExp}
 */
function tokensToRegExp (tokens, keys, options) {
  if (!isarray(keys)) {
    options = /** @type {!Object} */ (keys || options)
    keys = []
  }

  options = options || {}

  var strict = options.strict
  var end = options.end !== false
  var route = ''

  // Iterate over the tokens and create our regexp string.
  for (var i = 0; i < tokens.length; i++) {
    var token = tokens[i]

    if (typeof token === 'string') {
      route += escapeString(token)
    } else {
      var prefix = escapeString(token.prefix)
      var capture = '(?:' + token.pattern + ')'

      keys.push(token)

      if (token.repeat) {
        capture += '(?:' + prefix + capture + ')*'
      }

      if (token.optional) {
        if (!token.partial) {
          capture = '(?:' + prefix + '(' + capture + '))?'
        } else {
          capture = prefix + '(' + capture + ')?'
        }
      } else {
        capture = prefix + '(' + capture + ')'
      }

      route += capture
    }
  }

  var delimiter = escapeString(options.delimiter || '/')
  var endsWithDelimiter = route.slice(-delimiter.length) === delimiter

  // In non-strict mode we allow a slash at the end of match. If the path to
  // match already ends with a slash, we remove it for consistency. The slash
  // is valid at the end of a path match, not in the middle. This is important
  // in non-ending mode, where "/test/" shouldn't match "/test//route".
  if (!strict) {
    route = (endsWithDelimiter ? route.slice(0, -delimiter.length) : route) + '(?:' + delimiter + '(?=$))?'
  }

  if (end) {
    route += '$'
  } else {
    // In non-ending mode, we need the capturing groups to match as much as
    // possible by using a positive lookahead to the end or next path segment.
    route += strict && endsWithDelimiter ? '' : '(?=' + delimiter + '|$)'
  }

  return attachKeys(new RegExp('^' + route, flags(options)), keys)
}

/**
 * Normalize the given path string, returning a regular expression.
 *
 * An empty array can be passed in for the keys, which will hold the
 * placeholder key descriptions. For example, using `/user/:id`, `keys` will
 * contain `[{ name: 'id', delimiter: '/', optional: false, repeat: false }]`.
 *
 * @param  {(string|RegExp|Array)} path
 * @param  {(Array|Object)=}       keys
 * @param  {Object=}               options
 * @return {!RegExp}
 */
function pathToRegexp (path, keys, options) {
  if (!isarray(keys)) {
    options = /** @type {!Object} */ (keys || options)
    keys = []
  }

  options = options || {}

  if (path instanceof RegExp) {
    return regexpToRegexp(path, /** @type {!Array} */ (keys))
  }

  if (isarray(path)) {
    return arrayToRegexp(/** @type {!Array} */ (path), /** @type {!Array} */ (keys), options)
  }

  return stringToRegexp(/** @type {string} */ (path), /** @type {!Array} */ (keys), options)
}

},{"isarray":42}],46:[function(require,module,exports){
// shim for using process in browser
var process = module.exports = {};

// cached from whatever global is present so that test runners that stub it
// don't break things.  But we need to wrap it in a try catch in case it is
// wrapped in strict mode code which doesn't define any globals.  It's inside a
// function because try/catches deoptimize in certain engines.

var cachedSetTimeout;
var cachedClearTimeout;

function defaultSetTimout() {
    throw new Error('setTimeout has not been defined');
}
function defaultClearTimeout () {
    throw new Error('clearTimeout has not been defined');
}
(function () {
    try {
        if (typeof setTimeout === 'function') {
            cachedSetTimeout = setTimeout;
        } else {
            cachedSetTimeout = defaultSetTimout;
        }
    } catch (e) {
        cachedSetTimeout = defaultSetTimout;
    }
    try {
        if (typeof clearTimeout === 'function') {
            cachedClearTimeout = clearTimeout;
        } else {
            cachedClearTimeout = defaultClearTimeout;
        }
    } catch (e) {
        cachedClearTimeout = defaultClearTimeout;
    }
} ())
function runTimeout(fun) {
    if (cachedSetTimeout === setTimeout) {
        //normal enviroments in sane situations
        return setTimeout(fun, 0);
    }
    // if setTimeout wasn't available but was latter defined
    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {
        cachedSetTimeout = setTimeout;
        return setTimeout(fun, 0);
    }
    try {
        // when when somebody has screwed with setTimeout but no I.E. maddness
        return cachedSetTimeout(fun, 0);
    } catch(e){
        try {
            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally
            return cachedSetTimeout.call(null, fun, 0);
        } catch(e){
            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error
            return cachedSetTimeout.call(this, fun, 0);
        }
    }


}
function runClearTimeout(marker) {
    if (cachedClearTimeout === clearTimeout) {
        //normal enviroments in sane situations
        return clearTimeout(marker);
    }
    // if clearTimeout wasn't available but was latter defined
    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {
        cachedClearTimeout = clearTimeout;
        return clearTimeout(marker);
    }
    try {
        // when when somebody has screwed with setTimeout but no I.E. maddness
        return cachedClearTimeout(marker);
    } catch (e){
        try {
            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally
            return cachedClearTimeout.call(null, marker);
        } catch (e){
            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.
            // Some versions of I.E. have different rules for clearTimeout vs setTimeout
            return cachedClearTimeout.call(this, marker);
        }
    }



}
var queue = [];
var draining = false;
var currentQueue;
var queueIndex = -1;

function cleanUpNextTick() {
    if (!draining || !currentQueue) {
        return;
    }
    draining = false;
    if (currentQueue.length) {
        queue = currentQueue.concat(queue);
    } else {
        queueIndex = -1;
    }
    if (queue.length) {
        drainQueue();
    }
}

function drainQueue() {
    if (draining) {
        return;
    }
    var timeout = runTimeout(cleanUpNextTick);
    draining = true;

    var len = queue.length;
    while(len) {
        currentQueue = queue;
        queue = [];
        while (++queueIndex < len) {
            if (currentQueue) {
                currentQueue[queueIndex].run();
            }
        }
        queueIndex = -1;
        len = queue.length;
    }
    currentQueue = null;
    draining = false;
    runClearTimeout(timeout);
}

process.nextTick = function (fun) {
    var args = new Array(arguments.length - 1);
    if (arguments.length > 1) {
        for (var i = 1; i < arguments.length; i++) {
            args[i - 1] = arguments[i];
        }
    }
    queue.push(new Item(fun, args));
    if (queue.length === 1 && !draining) {
        runTimeout(drainQueue);
    }
};

// v8 likes predictible objects
function Item(fun, array) {
    this.fun = fun;
    this.array = array;
}
Item.prototype.run = function () {
    this.fun.apply(null, this.array);
};
process.title = 'browser';
process.browser = true;
process.env = {};
process.argv = [];
process.version = ''; // empty string to avoid regexp issues
process.versions = {};

function noop() {}

process.on = noop;
process.addListener = noop;
process.once = noop;
process.off = noop;
process.removeListener = noop;
process.removeAllListeners = noop;
process.emit = noop;
process.prependListener = noop;
process.prependOnceListener = noop;

process.listeners = function (name) { return [] }

process.binding = function (name) {
    throw new Error('process.binding is not supported');
};

process.cwd = function () { return '/' };
process.chdir = function (dir) {
    throw new Error('process.chdir is not supported');
};
process.umask = function() { return 0; };

},{}],47:[function(require,module,exports){
(function (process){
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

'use strict';

var printWarning = function() {};

if (process.env.NODE_ENV !== 'production') {
  var ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');
  var loggedTypeFailures = {};
  var has = Function.call.bind(Object.prototype.hasOwnProperty);

  printWarning = function(text) {
    var message = 'Warning: ' + text;
    if (typeof console !== 'undefined') {
      console.error(message);
    }
    try {
      // --- Welcome to debugging React ---
      // This error was thrown as a convenience so that you can use this stack
      // to find the callsite that caused this warning to fire.
      throw new Error(message);
    } catch (x) {}
  };
}

/**
 * Assert that the values match with the type specs.
 * Error messages are memorized and will only be shown once.
 *
 * @param {object} typeSpecs Map of name to a ReactPropType
 * @param {object} values Runtime values that need to be type-checked
 * @param {string} location e.g. "prop", "context", "child context"
 * @param {string} componentName Name of the component for error messages.
 * @param {?Function} getStack Returns the component stack.
 * @private
 */
function checkPropTypes(typeSpecs, values, location, componentName, getStack) {
  if (process.env.NODE_ENV !== 'production') {
    for (var typeSpecName in typeSpecs) {
      if (has(typeSpecs, typeSpecName)) {
        var error;
        // Prop type validation may throw. In case they do, we don't want to
        // fail the render phase where it didn't fail before. So we log it.
        // After these have been cleaned up, we'll let them throw.
        try {
          // This is intentionally an invariant that gets caught. It's the same
          // behavior as without this statement except with a better message.
          if (typeof typeSpecs[typeSpecName] !== 'function') {
            var err = Error(
              (componentName || 'React class') + ': ' + location + ' type `' + typeSpecName + '` is invalid; ' +
              'it must be a function, usually from the `prop-types` package, but received `' + typeof typeSpecs[typeSpecName] + '`.'
            );
            err.name = 'Invariant Violation';
            throw err;
          }
          error = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, ReactPropTypesSecret);
        } catch (ex) {
          error = ex;
        }
        if (error && !(error instanceof Error)) {
          printWarning(
            (componentName || 'React class') + ': type specification of ' +
            location + ' `' + typeSpecName + '` is invalid; the type checker ' +
            'function must return `null` or an `Error` but returned a ' + typeof error + '. ' +
            'You may have forgotten to pass an argument to the type checker ' +
            'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' +
            'shape all require an argument).'
          );
        }
        if (error instanceof Error && !(error.message in loggedTypeFailures)) {
          // Only monitor this failure once because there tends to be a lot of the
          // same error.
          loggedTypeFailures[error.message] = true;

          var stack = getStack ? getStack() : '';

          printWarning(
            'Failed ' + location + ' type: ' + error.message + (stack != null ? stack : '')
          );
        }
      }
    }
  }
}

/**
 * Resets warning cache when testing.
 *
 * @private
 */
checkPropTypes.resetWarningCache = function() {
  if (process.env.NODE_ENV !== 'production') {
    loggedTypeFailures = {};
  }
}

module.exports = checkPropTypes;

}).call(this,require('_process'))

},{"./lib/ReactPropTypesSecret":51,"_process":46}],48:[function(require,module,exports){
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

'use strict';

var ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');

function emptyFunction() {}
function emptyFunctionWithReset() {}
emptyFunctionWithReset.resetWarningCache = emptyFunction;

module.exports = function() {
  function shim(props, propName, componentName, location, propFullName, secret) {
    if (secret === ReactPropTypesSecret) {
      // It is still safe when called from React.
      return;
    }
    var err = new Error(
      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +
      'Use PropTypes.checkPropTypes() to call them. ' +
      'Read more at http://fb.me/use-check-prop-types'
    );
    err.name = 'Invariant Violation';
    throw err;
  };
  shim.isRequired = shim;
  function getShim() {
    return shim;
  };
  // Important!
  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.
  var ReactPropTypes = {
    array: shim,
    bool: shim,
    func: shim,
    number: shim,
    object: shim,
    string: shim,
    symbol: shim,

    any: shim,
    arrayOf: getShim,
    element: shim,
    elementType: shim,
    instanceOf: getShim,
    node: shim,
    objectOf: getShim,
    oneOf: getShim,
    oneOfType: getShim,
    shape: getShim,
    exact: getShim,

    checkPropTypes: emptyFunctionWithReset,
    resetWarningCache: emptyFunction
  };

  ReactPropTypes.PropTypes = ReactPropTypes;

  return ReactPropTypes;
};

},{"./lib/ReactPropTypesSecret":51}],49:[function(require,module,exports){
(function (process){
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

'use strict';

var ReactIs = require('react-is');
var assign = require('object-assign');

var ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');
var checkPropTypes = require('./checkPropTypes');

var has = Function.call.bind(Object.prototype.hasOwnProperty);
var printWarning = function() {};

if (process.env.NODE_ENV !== 'production') {
  printWarning = function(text) {
    var message = 'Warning: ' + text;
    if (typeof console !== 'undefined') {
      console.error(message);
    }
    try {
      // --- Welcome to debugging React ---
      // This error was thrown as a convenience so that you can use this stack
      // to find the callsite that caused this warning to fire.
      throw new Error(message);
    } catch (x) {}
  };
}

function emptyFunctionThatReturnsNull() {
  return null;
}

module.exports = function(isValidElement, throwOnDirectAccess) {
  /* global Symbol */
  var ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;
  var FAUX_ITERATOR_SYMBOL = '@@iterator'; // Before Symbol spec.

  /**
   * Returns the iterator method function contained on the iterable object.
   *
   * Be sure to invoke the function with the iterable as context:
   *
   *     var iteratorFn = getIteratorFn(myIterable);
   *     if (iteratorFn) {
   *       var iterator = iteratorFn.call(myIterable);
   *       ...
   *     }
   *
   * @param {?object} maybeIterable
   * @return {?function}
   */
  function getIteratorFn(maybeIterable) {
    var iteratorFn = maybeIterable && (ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL]);
    if (typeof iteratorFn === 'function') {
      return iteratorFn;
    }
  }

  /**
   * Collection of methods that allow declaration and validation of props that are
   * supplied to React components. Example usage:
   *
   *   var Props = require('ReactPropTypes');
   *   var MyArticle = React.createClass({
   *     propTypes: {
   *       // An optional string prop named "description".
   *       description: Props.string,
   *
   *       // A required enum prop named "category".
   *       category: Props.oneOf(['News','Photos']).isRequired,
   *
   *       // A prop named "dialog" that requires an instance of Dialog.
   *       dialog: Props.instanceOf(Dialog).isRequired
   *     },
   *     render: function() { ... }
   *   });
   *
   * A more formal specification of how these methods are used:
   *
   *   type := array|bool|func|object|number|string|oneOf([...])|instanceOf(...)
   *   decl := ReactPropTypes.{type}(.isRequired)?
   *
   * Each and every declaration produces a function with the same signature. This
   * allows the creation of custom validation functions. For example:
   *
   *  var MyLink = React.createClass({
   *    propTypes: {
   *      // An optional string or URI prop named "href".
   *      href: function(props, propName, componentName) {
   *        var propValue = props[propName];
   *        if (propValue != null && typeof propValue !== 'string' &&
   *            !(propValue instanceof URI)) {
   *          return new Error(
   *            'Expected a string or an URI for ' + propName + ' in ' +
   *            componentName
   *          );
   *        }
   *      }
   *    },
   *    render: function() {...}
   *  });
   *
   * @internal
   */

  var ANONYMOUS = '<<anonymous>>';

  // Important!
  // Keep this list in sync with production version in `./factoryWithThrowingShims.js`.
  var ReactPropTypes = {
    array: createPrimitiveTypeChecker('array'),
    bool: createPrimitiveTypeChecker('boolean'),
    func: createPrimitiveTypeChecker('function'),
    number: createPrimitiveTypeChecker('number'),
    object: createPrimitiveTypeChecker('object'),
    string: createPrimitiveTypeChecker('string'),
    symbol: createPrimitiveTypeChecker('symbol'),

    any: createAnyTypeChecker(),
    arrayOf: createArrayOfTypeChecker,
    element: createElementTypeChecker(),
    elementType: createElementTypeTypeChecker(),
    instanceOf: createInstanceTypeChecker,
    node: createNodeChecker(),
    objectOf: createObjectOfTypeChecker,
    oneOf: createEnumTypeChecker,
    oneOfType: createUnionTypeChecker,
    shape: createShapeTypeChecker,
    exact: createStrictShapeTypeChecker,
  };

  /**
   * inlined Object.is polyfill to avoid requiring consumers ship their own
   * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is
   */
  /*eslint-disable no-self-compare*/
  function is(x, y) {
    // SameValue algorithm
    if (x === y) {
      // Steps 1-5, 7-10
      // Steps 6.b-6.e: +0 != -0
      return x !== 0 || 1 / x === 1 / y;
    } else {
      // Step 6.a: NaN == NaN
      return x !== x && y !== y;
    }
  }
  /*eslint-enable no-self-compare*/

  /**
   * We use an Error-like object for backward compatibility as people may call
   * PropTypes directly and inspect their output. However, we don't use real
   * Errors anymore. We don't inspect their stack anyway, and creating them
   * is prohibitively expensive if they are created too often, such as what
   * happens in oneOfType() for any type before the one that matched.
   */
  function PropTypeError(message) {
    this.message = message;
    this.stack = '';
  }
  // Make `instanceof Error` still work for returned errors.
  PropTypeError.prototype = Error.prototype;

  function createChainableTypeChecker(validate) {
    if (process.env.NODE_ENV !== 'production') {
      var manualPropTypeCallCache = {};
      var manualPropTypeWarningCount = 0;
    }
    function checkType(isRequired, props, propName, componentName, location, propFullName, secret) {
      componentName = componentName || ANONYMOUS;
      propFullName = propFullName || propName;

      if (secret !== ReactPropTypesSecret) {
        if (throwOnDirectAccess) {
          // New behavior only for users of `prop-types` package
          var err = new Error(
            'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +
            'Use `PropTypes.checkPropTypes()` to call them. ' +
            'Read more at http://fb.me/use-check-prop-types'
          );
          err.name = 'Invariant Violation';
          throw err;
        } else if (process.env.NODE_ENV !== 'production' && typeof console !== 'undefined') {
          // Old behavior for people using React.PropTypes
          var cacheKey = componentName + ':' + propName;
          if (
            !manualPropTypeCallCache[cacheKey] &&
            // Avoid spamming the console because they are often not actionable except for lib authors
            manualPropTypeWarningCount < 3
          ) {
            printWarning(
              'You are manually calling a React.PropTypes validation ' +
              'function for the `' + propFullName + '` prop on `' + componentName  + '`. This is deprecated ' +
              'and will throw in the standalone `prop-types` package. ' +
              'You may be seeing this warning due to a third-party PropTypes ' +
              'library. See https://fb.me/react-warning-dont-call-proptypes ' + 'for details.'
            );
            manualPropTypeCallCache[cacheKey] = true;
            manualPropTypeWarningCount++;
          }
        }
      }
      if (props[propName] == null) {
        if (isRequired) {
          if (props[propName] === null) {
            return new PropTypeError('The ' + location + ' `' + propFullName + '` is marked as required ' + ('in `' + componentName + '`, but its value is `null`.'));
          }
          return new PropTypeError('The ' + location + ' `' + propFullName + '` is marked as required in ' + ('`' + componentName + '`, but its value is `undefined`.'));
        }
        return null;
      } else {
        return validate(props, propName, componentName, location, propFullName);
      }
    }

    var chainedCheckType = checkType.bind(null, false);
    chainedCheckType.isRequired = checkType.bind(null, true);

    return chainedCheckType;
  }

  function createPrimitiveTypeChecker(expectedType) {
    function validate(props, propName, componentName, location, propFullName, secret) {
      var propValue = props[propName];
      var propType = getPropType(propValue);
      if (propType !== expectedType) {
        // `propValue` being instance of, say, date/regexp, pass the 'object'
        // check, but we can offer a more precise error message here rather than
        // 'of type `object`'.
        var preciseType = getPreciseType(propValue);

        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + preciseType + '` supplied to `' + componentName + '`, expected ') + ('`' + expectedType + '`.'));
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createAnyTypeChecker() {
    return createChainableTypeChecker(emptyFunctionThatReturnsNull);
  }

  function createArrayOfTypeChecker(typeChecker) {
    function validate(props, propName, componentName, location, propFullName) {
      if (typeof typeChecker !== 'function') {
        return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside arrayOf.');
      }
      var propValue = props[propName];
      if (!Array.isArray(propValue)) {
        var propType = getPropType(propValue);
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an array.'));
      }
      for (var i = 0; i < propValue.length; i++) {
        var error = typeChecker(propValue, i, componentName, location, propFullName + '[' + i + ']', ReactPropTypesSecret);
        if (error instanceof Error) {
          return error;
        }
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createElementTypeChecker() {
    function validate(props, propName, componentName, location, propFullName) {
      var propValue = props[propName];
      if (!isValidElement(propValue)) {
        var propType = getPropType(propValue);
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected a single ReactElement.'));
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createElementTypeTypeChecker() {
    function validate(props, propName, componentName, location, propFullName) {
      var propValue = props[propName];
      if (!ReactIs.isValidElementType(propValue)) {
        var propType = getPropType(propValue);
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected a single ReactElement type.'));
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createInstanceTypeChecker(expectedClass) {
    function validate(props, propName, componentName, location, propFullName) {
      if (!(props[propName] instanceof expectedClass)) {
        var expectedClassName = expectedClass.name || ANONYMOUS;
        var actualClassName = getClassName(props[propName]);
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + actualClassName + '` supplied to `' + componentName + '`, expected ') + ('instance of `' + expectedClassName + '`.'));
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createEnumTypeChecker(expectedValues) {
    if (!Array.isArray(expectedValues)) {
      if (process.env.NODE_ENV !== 'production') {
        if (arguments.length > 1) {
          printWarning(
            'Invalid arguments supplied to oneOf, expected an array, got ' + arguments.length + ' arguments. ' +
            'A common mistake is to write oneOf(x, y, z) instead of oneOf([x, y, z]).'
          );
        } else {
          printWarning('Invalid argument supplied to oneOf, expected an array.');
        }
      }
      return emptyFunctionThatReturnsNull;
    }

    function validate(props, propName, componentName, location, propFullName) {
      var propValue = props[propName];
      for (var i = 0; i < expectedValues.length; i++) {
        if (is(propValue, expectedValues[i])) {
          return null;
        }
      }

      var valuesString = JSON.stringify(expectedValues, function replacer(key, value) {
        var type = getPreciseType(value);
        if (type === 'symbol') {
          return String(value);
        }
        return value;
      });
      return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of value `' + String(propValue) + '` ' + ('supplied to `' + componentName + '`, expected one of ' + valuesString + '.'));
    }
    return createChainableTypeChecker(validate);
  }

  function createObjectOfTypeChecker(typeChecker) {
    function validate(props, propName, componentName, location, propFullName) {
      if (typeof typeChecker !== 'function') {
        return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside objectOf.');
      }
      var propValue = props[propName];
      var propType = getPropType(propValue);
      if (propType !== 'object') {
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an object.'));
      }
      for (var key in propValue) {
        if (has(propValue, key)) {
          var error = typeChecker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);
          if (error instanceof Error) {
            return error;
          }
        }
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createUnionTypeChecker(arrayOfTypeCheckers) {
    if (!Array.isArray(arrayOfTypeCheckers)) {
      process.env.NODE_ENV !== 'production' ? printWarning('Invalid argument supplied to oneOfType, expected an instance of array.') : void 0;
      return emptyFunctionThatReturnsNull;
    }

    for (var i = 0; i < arrayOfTypeCheckers.length; i++) {
      var checker = arrayOfTypeCheckers[i];
      if (typeof checker !== 'function') {
        printWarning(
          'Invalid argument supplied to oneOfType. Expected an array of check functions, but ' +
          'received ' + getPostfixForTypeWarning(checker) + ' at index ' + i + '.'
        );
        return emptyFunctionThatReturnsNull;
      }
    }

    function validate(props, propName, componentName, location, propFullName) {
      for (var i = 0; i < arrayOfTypeCheckers.length; i++) {
        var checker = arrayOfTypeCheckers[i];
        if (checker(props, propName, componentName, location, propFullName, ReactPropTypesSecret) == null) {
          return null;
        }
      }

      return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`.'));
    }
    return createChainableTypeChecker(validate);
  }

  function createNodeChecker() {
    function validate(props, propName, componentName, location, propFullName) {
      if (!isNode(props[propName])) {
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`, expected a ReactNode.'));
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createShapeTypeChecker(shapeTypes) {
    function validate(props, propName, componentName, location, propFullName) {
      var propValue = props[propName];
      var propType = getPropType(propValue);
      if (propType !== 'object') {
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));
      }
      for (var key in shapeTypes) {
        var checker = shapeTypes[key];
        if (!checker) {
          continue;
        }
        var error = checker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);
        if (error) {
          return error;
        }
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createStrictShapeTypeChecker(shapeTypes) {
    function validate(props, propName, componentName, location, propFullName) {
      var propValue = props[propName];
      var propType = getPropType(propValue);
      if (propType !== 'object') {
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));
      }
      // We need to check all keys in case some are required but missing from
      // props.
      var allKeys = assign({}, props[propName], shapeTypes);
      for (var key in allKeys) {
        var checker = shapeTypes[key];
        if (!checker) {
          return new PropTypeError(
            'Invalid ' + location + ' `' + propFullName + '` key `' + key + '` supplied to `' + componentName + '`.' +
            '\nBad object: ' + JSON.stringify(props[propName], null, '  ') +
            '\nValid keys: ' +  JSON.stringify(Object.keys(shapeTypes), null, '  ')
          );
        }
        var error = checker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);
        if (error) {
          return error;
        }
      }
      return null;
    }

    return createChainableTypeChecker(validate);
  }

  function isNode(propValue) {
    switch (typeof propValue) {
      case 'number':
      case 'string':
      case 'undefined':
        return true;
      case 'boolean':
        return !propValue;
      case 'object':
        if (Array.isArray(propValue)) {
          return propValue.every(isNode);
        }
        if (propValue === null || isValidElement(propValue)) {
          return true;
        }

        var iteratorFn = getIteratorFn(propValue);
        if (iteratorFn) {
          var iterator = iteratorFn.call(propValue);
          var step;
          if (iteratorFn !== propValue.entries) {
            while (!(step = iterator.next()).done) {
              if (!isNode(step.value)) {
                return false;
              }
            }
          } else {
            // Iterator will provide entry [k,v] tuples rather than values.
            while (!(step = iterator.next()).done) {
              var entry = step.value;
              if (entry) {
                if (!isNode(entry[1])) {
                  return false;
                }
              }
            }
          }
        } else {
          return false;
        }

        return true;
      default:
        return false;
    }
  }

  function isSymbol(propType, propValue) {
    // Native Symbol.
    if (propType === 'symbol') {
      return true;
    }

    // falsy value can't be a Symbol
    if (!propValue) {
      return false;
    }

    // 19.4.3.5 Symbol.prototype[@@toStringTag] === 'Symbol'
    if (propValue['@@toStringTag'] === 'Symbol') {
      return true;
    }

    // Fallback for non-spec compliant Symbols which are polyfilled.
    if (typeof Symbol === 'function' && propValue instanceof Symbol) {
      return true;
    }

    return false;
  }

  // Equivalent of `typeof` but with special handling for array and regexp.
  function getPropType(propValue) {
    var propType = typeof propValue;
    if (Array.isArray(propValue)) {
      return 'array';
    }
    if (propValue instanceof RegExp) {
      // Old webkits (at least until Android 4.0) return 'function' rather than
      // 'object' for typeof a RegExp. We'll normalize this here so that /bla/
      // passes PropTypes.object.
      return 'object';
    }
    if (isSymbol(propType, propValue)) {
      return 'symbol';
    }
    return propType;
  }

  // This handles more types than `getPropType`. Only used for error messages.
  // See `createPrimitiveTypeChecker`.
  function getPreciseType(propValue) {
    if (typeof propValue === 'undefined' || propValue === null) {
      return '' + propValue;
    }
    var propType = getPropType(propValue);
    if (propType === 'object') {
      if (propValue instanceof Date) {
        return 'date';
      } else if (propValue instanceof RegExp) {
        return 'regexp';
      }
    }
    return propType;
  }

  // Returns a string that is postfixed to a warning about an invalid type.
  // For example, "undefined" or "of type array"
  function getPostfixForTypeWarning(value) {
    var type = getPreciseType(value);
    switch (type) {
      case 'array':
      case 'object':
        return 'an ' + type;
      case 'boolean':
      case 'date':
      case 'regexp':
        return 'a ' + type;
      default:
        return type;
    }
  }

  // Returns class name of the object, if any.
  function getClassName(propValue) {
    if (!propValue.constructor || !propValue.constructor.name) {
      return ANONYMOUS;
    }
    return propValue.constructor.name;
  }

  ReactPropTypes.checkPropTypes = checkPropTypes;
  ReactPropTypes.resetWarningCache = checkPropTypes.resetWarningCache;
  ReactPropTypes.PropTypes = ReactPropTypes;

  return ReactPropTypes;
};

}).call(this,require('_process'))

},{"./checkPropTypes":47,"./lib/ReactPropTypesSecret":51,"_process":46,"object-assign":52,"react-is":78}],50:[function(require,module,exports){
(function (process){
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

if (process.env.NODE_ENV !== 'production') {
  var ReactIs = require('react-is');

  // By explicitly using `prop-types` you are opting into new development behavior.
  // http://fb.me/prop-types-in-prod
  var throwOnDirectAccess = true;
  module.exports = require('./factoryWithTypeCheckers')(ReactIs.isElement, throwOnDirectAccess);
} else {
  // By explicitly using `prop-types` you are opting into new production behavior.
  // http://fb.me/prop-types-in-prod
  module.exports = require('./factoryWithThrowingShims')();
}

}).call(this,require('_process'))

},{"./factoryWithThrowingShims":48,"./factoryWithTypeCheckers":49,"_process":46,"react-is":78}],51:[function(require,module,exports){
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

'use strict';

var ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';

module.exports = ReactPropTypesSecret;

},{}],52:[function(require,module,exports){
/*
object-assign
(c) Sindre Sorhus
@license MIT
*/

'use strict';
/* eslint-disable no-unused-vars */
var getOwnPropertySymbols = Object.getOwnPropertySymbols;
var hasOwnProperty = Object.prototype.hasOwnProperty;
var propIsEnumerable = Object.prototype.propertyIsEnumerable;

function toObject(val) {
	if (val === null || val === undefined) {
		throw new TypeError('Object.assign cannot be called with null or undefined');
	}

	return Object(val);
}

function shouldUseNative() {
	try {
		if (!Object.assign) {
			return false;
		}

		// Detect buggy property enumeration order in older V8 versions.

		// https://bugs.chromium.org/p/v8/issues/detail?id=4118
		var test1 = new String('abc');  // eslint-disable-line no-new-wrappers
		test1[5] = 'de';
		if (Object.getOwnPropertyNames(test1)[0] === '5') {
			return false;
		}

		// https://bugs.chromium.org/p/v8/issues/detail?id=3056
		var test2 = {};
		for (var i = 0; i < 10; i++) {
			test2['_' + String.fromCharCode(i)] = i;
		}
		var order2 = Object.getOwnPropertyNames(test2).map(function (n) {
			return test2[n];
		});
		if (order2.join('') !== '0123456789') {
			return false;
		}

		// https://bugs.chromium.org/p/v8/issues/detail?id=3056
		var test3 = {};
		'abcdefghijklmnopqrst'.split('').forEach(function (letter) {
			test3[letter] = letter;
		});
		if (Object.keys(Object.assign({}, test3)).join('') !==
				'abcdefghijklmnopqrst') {
			return false;
		}

		return true;
	} catch (err) {
		// We don't expect any of the above to throw, but better to be safe.
		return false;
	}
}

module.exports = shouldUseNative() ? Object.assign : function (target, source) {
	var from;
	var to = toObject(target);
	var symbols;

	for (var s = 1; s < arguments.length; s++) {
		from = Object(arguments[s]);

		for (var key in from) {
			if (hasOwnProperty.call(from, key)) {
				to[key] = from[key];
			}
		}

		if (getOwnPropertySymbols) {
			symbols = getOwnPropertySymbols(from);
			for (var i = 0; i < symbols.length; i++) {
				if (propIsEnumerable.call(from, symbols[i])) {
					to[symbols[i]] = from[symbols[i]];
				}
			}
		}
	}

	return to;
};

},{}],53:[function(require,module,exports){
// Load modules

var Stringify = require('./stringify');
var Parse = require('./parse');


// Declare internals

var internals = {};


module.exports = {
    stringify: Stringify,
    parse: Parse
};

},{"./parse":54,"./stringify":55}],54:[function(require,module,exports){
// Load modules

var Utils = require('./utils');


// Declare internals

var internals = {
    delimiter: '&',
    depth: 5,
    arrayLimit: 20,
    parameterLimit: 1000,
    strictNullHandling: false,
    plainObjects: false,
    allowPrototypes: false
};


internals.parseValues = function (str, options) {

    var obj = {};
    var parts = str.split(options.delimiter, options.parameterLimit === Infinity ? undefined : options.parameterLimit);

    for (var i = 0, il = parts.length; i < il; ++i) {
        var part = parts[i];
        var pos = part.indexOf(']=') === -1 ? part.indexOf('=') : part.indexOf(']=') + 1;

        if (pos === -1) {
            obj[Utils.decode(part)] = '';

            if (options.strictNullHandling) {
                obj[Utils.decode(part)] = null;
            }
        }
        else {
            var key = Utils.decode(part.slice(0, pos));
            var val = Utils.decode(part.slice(pos + 1));

            if (!Object.prototype.hasOwnProperty.call(obj, key)) {
                obj[key] = val;
            }
            else {
                obj[key] = [].concat(obj[key]).concat(val);
            }
        }
    }

    return obj;
};


internals.parseObject = function (chain, val, options) {

    if (!chain.length) {
        return val;
    }

    var root = chain.shift();

    var obj;
    if (root === '[]') {
        obj = [];
        obj = obj.concat(internals.parseObject(chain, val, options));
    }
    else {
        obj = options.plainObjects ? Object.create(null) : {};
        var cleanRoot = root[0] === '[' && root[root.length - 1] === ']' ? root.slice(1, root.length - 1) : root;
        var index = parseInt(cleanRoot, 10);
        var indexString = '' + index;
        if (!isNaN(index) &&
            root !== cleanRoot &&
            indexString === cleanRoot &&
            index >= 0 &&
            (options.parseArrays &&
             index <= options.arrayLimit)) {

            obj = [];
            obj[index] = internals.parseObject(chain, val, options);
        }
        else {
            obj[cleanRoot] = internals.parseObject(chain, val, options);
        }
    }

    return obj;
};


internals.parseKeys = function (key, val, options) {

    if (!key) {
        return;
    }

    // Transform dot notation to bracket notation

    if (options.allowDots) {
        key = key.replace(/\.([^\.\[]+)/g, '[$1]');
    }

    // The regex chunks

    var parent = /^([^\[\]]*)/;
    var child = /(\[[^\[\]]*\])/g;

    // Get the parent

    var segment = parent.exec(key);

    // Stash the parent if it exists

    var keys = [];
    if (segment[1]) {
        // If we aren't using plain objects, optionally prefix keys
        // that would overwrite object prototype properties
        if (!options.plainObjects &&
            Object.prototype.hasOwnProperty(segment[1])) {

            if (!options.allowPrototypes) {
                return;
            }
        }

        keys.push(segment[1]);
    }

    // Loop through children appending to the array until we hit depth

    var i = 0;
    while ((segment = child.exec(key)) !== null && i < options.depth) {

        ++i;
        if (!options.plainObjects &&
            Object.prototype.hasOwnProperty(segment[1].replace(/\[|\]/g, ''))) {

            if (!options.allowPrototypes) {
                continue;
            }
        }
        keys.push(segment[1]);
    }

    // If there's a remainder, just add whatever is left

    if (segment) {
        keys.push('[' + key.slice(segment.index) + ']');
    }

    return internals.parseObject(keys, val, options);
};


module.exports = function (str, options) {

    options = options || {};
    options.delimiter = typeof options.delimiter === 'string' || Utils.isRegExp(options.delimiter) ? options.delimiter : internals.delimiter;
    options.depth = typeof options.depth === 'number' ? options.depth : internals.depth;
    options.arrayLimit = typeof options.arrayLimit === 'number' ? options.arrayLimit : internals.arrayLimit;
    options.parseArrays = options.parseArrays !== false;
    options.allowDots = options.allowDots !== false;
    options.plainObjects = typeof options.plainObjects === 'boolean' ? options.plainObjects : internals.plainObjects;
    options.allowPrototypes = typeof options.allowPrototypes === 'boolean' ? options.allowPrototypes : internals.allowPrototypes;
    options.parameterLimit = typeof options.parameterLimit === 'number' ? options.parameterLimit : internals.parameterLimit;
    options.strictNullHandling = typeof options.strictNullHandling === 'boolean' ? options.strictNullHandling : internals.strictNullHandling;

    if (str === '' ||
        str === null ||
        typeof str === 'undefined') {

        return options.plainObjects ? Object.create(null) : {};
    }

    var tempObj = typeof str === 'string' ? internals.parseValues(str, options) : str;
    var obj = options.plainObjects ? Object.create(null) : {};

    // Iterate over the keys and setup the new object

    var keys = Object.keys(tempObj);
    for (var i = 0, il = keys.length; i < il; ++i) {
        var key = keys[i];
        var newObj = internals.parseKeys(key, tempObj[key], options);
        obj = Utils.merge(obj, newObj, options);
    }

    return Utils.compact(obj);
};

},{"./utils":56}],55:[function(require,module,exports){
// Load modules

var Utils = require('./utils');


// Declare internals

var internals = {
    delimiter: '&',
    arrayPrefixGenerators: {
        brackets: function (prefix, key) {

            return prefix + '[]';
        },
        indices: function (prefix, key) {

            return prefix + '[' + key + ']';
        },
        repeat: function (prefix, key) {

            return prefix;
        }
    },
    strictNullHandling: false
};


internals.stringify = function (obj, prefix, generateArrayPrefix, strictNullHandling, filter) {

    if (typeof filter === 'function') {
        obj = filter(prefix, obj);
    }
    else if (Utils.isBuffer(obj)) {
        obj = obj.toString();
    }
    else if (obj instanceof Date) {
        obj = obj.toISOString();
    }
    else if (obj === null) {
        if (strictNullHandling) {
            return Utils.encode(prefix);
        }

        obj = '';
    }

    if (typeof obj === 'string' ||
        typeof obj === 'number' ||
        typeof obj === 'boolean') {

        return [Utils.encode(prefix) + '=' + Utils.encode(obj)];
    }

    var values = [];

    if (typeof obj === 'undefined') {
        return values;
    }

    var objKeys = Array.isArray(filter) ? filter : Object.keys(obj);
    for (var i = 0, il = objKeys.length; i < il; ++i) {
        var key = objKeys[i];

        if (Array.isArray(obj)) {
            values = values.concat(internals.stringify(obj[key], generateArrayPrefix(prefix, key), generateArrayPrefix, strictNullHandling, filter));
        }
        else {
            values = values.concat(internals.stringify(obj[key], prefix + '[' + key + ']', generateArrayPrefix, strictNullHandling, filter));
        }
    }

    return values;
};


module.exports = function (obj, options) {

    options = options || {};
    var delimiter = typeof options.delimiter === 'undefined' ? internals.delimiter : options.delimiter;
    var strictNullHandling = typeof options.strictNullHandling === 'boolean' ? options.strictNullHandling : internals.strictNullHandling;
    var objKeys;
    var filter;
    if (typeof options.filter === 'function') {
        filter = options.filter;
        obj = filter('', obj);
    }
    else if (Array.isArray(options.filter)) {
        objKeys = filter = options.filter;
    }

    var keys = [];

    if (typeof obj !== 'object' ||
        obj === null) {

        return '';
    }

    var arrayFormat;
    if (options.arrayFormat in internals.arrayPrefixGenerators) {
        arrayFormat = options.arrayFormat;
    }
    else if ('indices' in options) {
        arrayFormat = options.indices ? 'indices' : 'repeat';
    }
    else {
        arrayFormat = 'indices';
    }

    var generateArrayPrefix = internals.arrayPrefixGenerators[arrayFormat];

    if (!objKeys) {
        objKeys = Object.keys(obj);
    }
    for (var i = 0, il = objKeys.length; i < il; ++i) {
        var key = objKeys[i];
        keys = keys.concat(internals.stringify(obj[key], key, generateArrayPrefix, strictNullHandling, filter));
    }

    return keys.join(delimiter);
};

},{"./utils":56}],56:[function(require,module,exports){
// Load modules


// Declare internals

var internals = {};
internals.hexTable = new Array(256);
for (var h = 0; h < 256; ++h) {
    internals.hexTable[h] = '%' + ((h < 16 ? '0' : '') + h.toString(16)).toUpperCase();
}


exports.arrayToObject = function (source, options) {

    var obj = options.plainObjects ? Object.create(null) : {};
    for (var i = 0, il = source.length; i < il; ++i) {
        if (typeof source[i] !== 'undefined') {

            obj[i] = source[i];
        }
    }

    return obj;
};


exports.merge = function (target, source, options) {

    if (!source) {
        return target;
    }

    if (typeof source !== 'object') {
        if (Array.isArray(target)) {
            target.push(source);
        }
        else if (typeof target === 'object') {
            target[source] = true;
        }
        else {
            target = [target, source];
        }

        return target;
    }

    if (typeof target !== 'object') {
        target = [target].concat(source);
        return target;
    }

    if (Array.isArray(target) &&
        !Array.isArray(source)) {

        target = exports.arrayToObject(target, options);
    }

    var keys = Object.keys(source);
    for (var k = 0, kl = keys.length; k < kl; ++k) {
        var key = keys[k];
        var value = source[key];

        if (!Object.prototype.hasOwnProperty.call(target, key)) {
            target[key] = value;
        }
        else {
            target[key] = exports.merge(target[key], value, options);
        }
    }

    return target;
};


exports.decode = function (str) {

    try {
        return decodeURIComponent(str.replace(/\+/g, ' '));
    } catch (e) {
        return str;
    }
};

exports.encode = function (str) {

    // This code was originally written by Brian White (mscdex) for the io.js core querystring library.
    // It has been adapted here for stricter adherence to RFC 3986
    if (str.length === 0) {
        return str;
    }

    if (typeof str !== 'string') {
        str = '' + str;
    }

    var out = '';
    for (var i = 0, il = str.length; i < il; ++i) {
        var c = str.charCodeAt(i);

        if (c === 0x2D || // -
            c === 0x2E || // .
            c === 0x5F || // _
            c === 0x7E || // ~
            (c >= 0x30 && c <= 0x39) || // 0-9
            (c >= 0x41 && c <= 0x5A) || // a-z
            (c >= 0x61 && c <= 0x7A)) { // A-Z

            out += str[i];
            continue;
        }

        if (c < 0x80) {
            out += internals.hexTable[c];
            continue;
        }

        if (c < 0x800) {
            out += internals.hexTable[0xC0 | (c >> 6)] + internals.hexTable[0x80 | (c & 0x3F)];
            continue;
        }

        if (c < 0xD800 || c >= 0xE000) {
            out += internals.hexTable[0xE0 | (c >> 12)] + internals.hexTable[0x80 | ((c >> 6) & 0x3F)] + internals.hexTable[0x80 | (c & 0x3F)];
            continue;
        }

        ++i;
        c = 0x10000 + (((c & 0x3FF) << 10) | (str.charCodeAt(i) & 0x3FF));
        out += internals.hexTable[0xF0 | (c >> 18)] + internals.hexTable[0x80 | ((c >> 12) & 0x3F)] + internals.hexTable[0x80 | ((c >> 6) & 0x3F)] + internals.hexTable[0x80 | (c & 0x3F)];
    }

    return out;
};

exports.compact = function (obj, refs) {

    if (typeof obj !== 'object' ||
        obj === null) {

        return obj;
    }

    refs = refs || [];
    var lookup = refs.indexOf(obj);
    if (lookup !== -1) {
        return refs[lookup];
    }

    refs.push(obj);

    if (Array.isArray(obj)) {
        var compacted = [];

        for (var i = 0, il = obj.length; i < il; ++i) {
            if (typeof obj[i] !== 'undefined') {
                compacted.push(obj[i]);
            }
        }

        return compacted;
    }

    var keys = Object.keys(obj);
    for (i = 0, il = keys.length; i < il; ++i) {
        var key = keys[i];
        obj[key] = exports.compact(obj[key], refs);
    }

    return obj;
};


exports.isRegExp = function (obj) {

    return Object.prototype.toString.call(obj) === '[object RegExp]';
};


exports.isBuffer = function (obj) {

    if (obj === null ||
        typeof obj === 'undefined') {

        return false;
    }

    return !!(obj.constructor &&
              obj.constructor.isBuffer &&
              obj.constructor.isBuffer(obj));
};

},{}],57:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

function _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }

var CountUp = _interopDefault(require('countup.js'));
var PropTypes = _interopDefault(require('prop-types'));
var React = require('react');
var React__default = _interopDefault(React);
var warning = _interopDefault(require('warning'));

function _classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}

function _defineProperties(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor) descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}

function _createClass(Constructor, protoProps, staticProps) {
  if (protoProps) _defineProperties(Constructor.prototype, protoProps);
  if (staticProps) _defineProperties(Constructor, staticProps);
  return Constructor;
}

function _defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }

  return obj;
}

function _objectSpread(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {};
    var ownKeys = Object.keys(source);

    if (typeof Object.getOwnPropertySymbols === 'function') {
      ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {
        return Object.getOwnPropertyDescriptor(source, sym).enumerable;
      }));
    }

    ownKeys.forEach(function (key) {
      _defineProperty(target, key, source[key]);
    });
  }

  return target;
}

function _inherits(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function");
  }

  subClass.prototype = Object.create(superClass && superClass.prototype, {
    constructor: {
      value: subClass,
      writable: true,
      configurable: true
    }
  });
  if (superClass) _setPrototypeOf(subClass, superClass);
}

function _getPrototypeOf(o) {
  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {
    return o.__proto__ || Object.getPrototypeOf(o);
  };
  return _getPrototypeOf(o);
}

function _setPrototypeOf(o, p) {
  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {
    o.__proto__ = p;
    return o;
  };

  return _setPrototypeOf(o, p);
}

function _assertThisInitialized(self) {
  if (self === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }

  return self;
}

function _possibleConstructorReturn(self, call) {
  if (call && (typeof call === "object" || typeof call === "function")) {
    return call;
  }

  return _assertThisInitialized(self);
}

function _slicedToArray(arr, i) {
  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest();
}

function _arrayWithHoles(arr) {
  if (Array.isArray(arr)) return arr;
}

function _iterableToArrayLimit(arr, i) {
  var _arr = [];
  var _n = true;
  var _d = false;
  var _e = undefined;

  try {
    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {
      _arr.push(_s.value);

      if (i && _arr.length === i) break;
    }
  } catch (err) {
    _d = true;
    _e = err;
  } finally {
    try {
      if (!_n && _i["return"] != null) _i["return"]();
    } finally {
      if (_d) throw _e;
    }
  }

  return _arr;
}

function _nonIterableRest() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance");
}

var createCountUpInstance = function createCountUpInstance(el, props) {
  var decimal = props.decimal,
      decimals = props.decimals,
      duration = props.duration,
      easingFn = props.easingFn,
      end = props.end,
      formattingFn = props.formattingFn,
      prefix = props.prefix,
      separator = props.separator,
      start = props.start,
      suffix = props.suffix,
      useEasing = props.useEasing;
  return new CountUp(el, start, end, decimals, duration, {
    decimal: decimal,
    easingFn: easingFn,
    formattingFn: formattingFn,
    separator: separator,
    prefix: prefix,
    suffix: suffix,
    useEasing: useEasing,
    useGrouping: !!separator
  });
};

var CountUp$1 =
/*#__PURE__*/
function (_Component) {
  _inherits(CountUp$$1, _Component);

  function CountUp$$1() {
    var _getPrototypeOf2;

    var _this;

    _classCallCheck(this, CountUp$$1);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(CountUp$$1)).call.apply(_getPrototypeOf2, [this].concat(args)));

    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), "createInstance", function () {
      if (typeof _this.props.children === 'function') {
        // Warn when user didn't use containerRef at all
        warning(_this.containerRef.current && (_this.containerRef.current instanceof HTMLElement || _this.containerRef.current instanceof SVGTextElement), "Couldn't find attached element to hook the CountUp instance into! Try to attach \"containerRef\" from the render prop to a an HTMLElement, eg. <span ref={containerRef} />.");
      }

      return createCountUpInstance(_this.containerRef.current, _this.props);
    });

    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), "pauseResume", function () {
      var _assertThisInitialize = _assertThisInitialized(_assertThisInitialized(_this)),
          reset = _assertThisInitialize.reset,
          start = _assertThisInitialize.restart,
          update = _assertThisInitialize.update;

      var onPauseResume = _this.props.onPauseResume;

      _this.instance.pauseResume();

      onPauseResume({
        reset: reset,
        start: start,
        update: update
      });
    });

    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), "reset", function () {
      var _assertThisInitialize2 = _assertThisInitialized(_assertThisInitialized(_this)),
          pauseResume = _assertThisInitialize2.pauseResume,
          start = _assertThisInitialize2.restart,
          update = _assertThisInitialize2.update;

      var onReset = _this.props.onReset;

      _this.instance.reset();

      onReset({
        pauseResume: pauseResume,
        start: start,
        update: update
      });
    });

    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), "restart", function () {
      _this.reset();

      _this.start();
    });

    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), "start", function () {
      var _assertThisInitialize3 = _assertThisInitialized(_assertThisInitialized(_this)),
          pauseResume = _assertThisInitialize3.pauseResume,
          reset = _assertThisInitialize3.reset,
          start = _assertThisInitialize3.restart,
          update = _assertThisInitialize3.update;

      var _this$props = _this.props,
          delay = _this$props.delay,
          onEnd = _this$props.onEnd,
          onStart = _this$props.onStart;

      var run = function run() {
        return _this.instance.start(function () {
          return onEnd({
            pauseResume: pauseResume,
            reset: reset,
            start: start,
            update: update
          });
        });
      }; // Delay start if delay prop is properly set


      if (delay > 0) {
        _this.timeoutId = setTimeout(run, delay * 1000);
      } else {
        run();
      }

      onStart({
        pauseResume: pauseResume,
        reset: reset,
        update: update
      });
    });

    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), "update", function (newEnd) {
      var _assertThisInitialize4 = _assertThisInitialized(_assertThisInitialized(_this)),
          pauseResume = _assertThisInitialize4.pauseResume,
          reset = _assertThisInitialize4.reset,
          start = _assertThisInitialize4.restart;

      var onUpdate = _this.props.onUpdate;

      _this.instance.update(newEnd);

      onUpdate({
        pauseResume: pauseResume,
        reset: reset,
        start: start
      });
    });

    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), "containerRef", React__default.createRef());

    return _this;
  }

  _createClass(CountUp$$1, [{
    key: "componentDidMount",
    value: function componentDidMount() {
      var _this$props2 = this.props,
          children = _this$props2.children,
          delay = _this$props2.delay;
      this.instance = this.createInstance(); // Don't invoke start if component is used as a render prop

      if (typeof children === 'function' && delay !== 0) return; // Otherwise just start immediately

      this.start();
    }
  }, {
    key: "shouldComponentUpdate",
    value: function shouldComponentUpdate(nextProps) {
      var hasCertainPropsChanged = this.props.duration !== nextProps.duration || this.props.end !== nextProps.end || this.props.start !== nextProps.start;
      return hasCertainPropsChanged || this.props.redraw;
    }
  }, {
    key: "componentDidUpdate",
    value: function componentDidUpdate(prevProps) {
      // If duration or start has changed, there's no way to update the duration
      // or start value. So we need to re-create the CountUp instance in order to
      // restart it.
      if (this.props.duration !== prevProps.duration || this.props.start !== prevProps.start) {
        this.instance = this.createInstance();
        this.start();
      } // Only end value has changed, so reset and and re-animate with the updated
      // end value.


      if (this.props.end !== prevProps.end) {
        this.instance.reset();
        this.instance.update(this.props.end);
      }
    }
  }, {
    key: "componentWillUnmount",
    value: function componentWillUnmount() {
      if (this.timeoutId) {
        clearTimeout(this.timeoutId);
      }

      this.instance.reset();
    }
  }, {
    key: "render",
    value: function render() {
      var _this$props3 = this.props,
          children = _this$props3.children,
          className = _this$props3.className,
          style = _this$props3.style;
      var containerRef = this.containerRef,
          pauseResume = this.pauseResume,
          reset = this.reset,
          restart = this.restart,
          update = this.update;

      if (typeof children === 'function') {
        return children({
          countUpRef: containerRef,
          pauseResume: pauseResume,
          reset: reset,
          start: restart,
          update: update
        });
      }

      return React__default.createElement("span", {
        className: className,
        ref: containerRef,
        style: style
      });
    }
  }]);

  return CountUp$$1;
}(React.Component);

_defineProperty(CountUp$1, "propTypes", {
  decimal: PropTypes.string,
  decimals: PropTypes.number,
  delay: PropTypes.number,
  easingFn: PropTypes.func,
  end: PropTypes.number.isRequired,
  formattingFn: PropTypes.func,
  onEnd: PropTypes.func,
  onStart: PropTypes.func,
  prefix: PropTypes.string,
  redraw: PropTypes.bool,
  separator: PropTypes.string,
  start: PropTypes.number,
  suffix: PropTypes.string,
  style: PropTypes.object,
  useEasing: PropTypes.bool
});

_defineProperty(CountUp$1, "defaultProps", {
  decimal: '.',
  decimals: 0,
  delay: null,
  duration: null,
  easingFn: null,
  formattingFn: null,
  onEnd: function onEnd() {},
  onPauseResume: function onPauseResume() {},
  onReset: function onReset() {},
  onStart: function onStart() {},
  onUpdate: function onUpdate() {},
  prefix: '',
  redraw: false,
  separator: '',
  start: 0,
  suffix: '',
  style: undefined,
  useEasing: true
});

// since it only checks for truthy values -1 is enough to mock an element.

var NO_ELEMENT = -1;

var useCountUp = function useCountUp(props) {
  var _props = _objectSpread({}, CountUp$1.defaultProps, props);

  var start = _props.start,
      formattingFn = _props.formattingFn;

  var _useState = React.useState(typeof formattingFn === 'function' ? formattingFn(start) : start),
      _useState2 = _slicedToArray(_useState, 2),
      count = _useState2[0],
      setCount = _useState2[1];

  var countUpRef = React.useRef(null);

  var createInstance = function createInstance() {
    var countUp = createCountUpInstance(NO_ELEMENT, _props);
    var formattingFnRef = countUp.options.formattingFn;

    countUp.options.formattingFn = function () {
      var result = formattingFnRef.apply(void 0, arguments);
      setCount(result);
    };

    return countUp;
  };

  var getCountUp = function getCountUp() {
    var countUp = countUpRef.current;

    if (countUp !== null) {
      return countUp;
    }

    var newCountUp = createInstance();
    countUpRef.current = newCountUp;
    return newCountUp;
  };

  var reset = function reset() {
    var onReset = _props.onReset;
    getCountUp().reset();
    onReset({
      pauseResume: pauseResume,
      start: restart,
      update: update
    });
  };

  var restart = function restart() {
    var onStart = _props.onStart,
        onEnd = _props.onEnd;
    getCountUp().reset();
    getCountUp().start(function () {
      onEnd({
        pauseResume: pauseResume,
        reset: reset,
        start: restart,
        update: update
      });
    });
    onStart({
      pauseResume: pauseResume,
      reset: reset,
      update: update
    });
  };

  var pauseResume = function pauseResume() {
    var onPauseResume = _props.onPauseResume;
    getCountUp().pauseResume();
    onPauseResume({
      reset: reset,
      start: restart,
      update: update
    });
  };

  var update = function update(newEnd) {
    var onUpdate = _props.onUpdate;
    getCountUp().update(newEnd);
    onUpdate({
      pauseResume: pauseResume,
      reset: reset,
      start: restart
    });
  };

  React.useEffect(function () {
    var delay = _props.delay,
        onStart = _props.onStart,
        onEnd = _props.onEnd;
    var timeout = setTimeout(function () {
      onStart({
        pauseResume: pauseResume,
        reset: reset,
        update: update
      });
      getCountUp().start(function () {
        clearTimeout(timeout);
        onEnd({
          pauseResume: pauseResume,
          reset: reset,
          start: restart,
          update: update
        });
      });
    }, delay * 1000);
    return reset;
  }, []);
  return {
    countUp: count,
    start: restart,
    pauseResume: pauseResume,
    reset: reset,
    update: update
  };
};

exports.default = CountUp$1;
exports.useCountUp = useCountUp;

},{"countup.js":35,"prop-types":50,"react":undefined,"warning":58}],58:[function(require,module,exports){
(function (process){
/**
 * Copyright (c) 2014-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

'use strict';

/**
 * Similar to invariant but only logs a warning if the condition is not met.
 * This can be used to log issues in development environments in critical
 * paths. Removing the logging code for production environments will keep the
 * same logic and follow the same code paths.
 */

var __DEV__ = process.env.NODE_ENV !== 'production';

var warning = function() {};

if (__DEV__) {
  var printWarning = function printWarning(format, args) {
    var len = arguments.length;
    args = new Array(len > 1 ? len - 1 : 0);
    for (var key = 1; key < len; key++) {
      args[key - 1] = arguments[key];
    }
    var argIndex = 0;
    var message = 'Warning: ' +
      format.replace(/%s/g, function() {
        return args[argIndex++];
      });
    if (typeof console !== 'undefined') {
      console.error(message);
    }
    try {
      // --- Welcome to debugging React ---
      // This error was thrown as a convenience so that you can use this stack
      // to find the callsite that caused this warning to fire.
      throw new Error(message);
    } catch (x) {}
  }

  warning = function(condition, format, args) {
    var len = arguments.length;
    args = new Array(len > 2 ? len - 2 : 0);
    for (var key = 2; key < len; key++) {
      args[key - 2] = arguments[key];
    }
    if (format === undefined) {
      throw new Error(
          '`warning(condition, format, ...args)` requires a warning ' +
          'message argument'
      );
    }
    if (!condition) {
      printWarning.apply(null, [format].concat(args));
    }
  };
}

module.exports = warning;

}).call(this,require('_process'))

},{"_process":46}],59:[function(require,module,exports){
'use strict';

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _utils = require('./utils');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var propTypes = {
  thousandSeparator: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.oneOf([true])]),
  thousandSpacing: _propTypes2.default.oneOf(['2', '2s', '3', '4']),
  decimalSeparator: _propTypes2.default.string,
  decimalScale: _propTypes2.default.number,
  fixedDecimalScale: _propTypes2.default.bool,
  displayType: _propTypes2.default.oneOf(['input', 'text']),
  prefix: _propTypes2.default.string,
  suffix: _propTypes2.default.string,
  format: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.func]),
  removeFormatting: _propTypes2.default.func,
  mask: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.arrayOf(_propTypes2.default.string)]),
  value: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]),
  isNumericString: _propTypes2.default.bool,
  customInput: _propTypes2.default.func,
  allowNegative: _propTypes2.default.bool,
  onValueChange: _propTypes2.default.func,
  onKeyDown: _propTypes2.default.func,
  onMouseUp: _propTypes2.default.func,
  onChange: _propTypes2.default.func,
  onFocus: _propTypes2.default.func,
  onBlur: _propTypes2.default.func,
  type: _propTypes2.default.oneOf(['text', 'tel']),
  isAllowed: _propTypes2.default.func,
  renderText: _propTypes2.default.func
};

var defaultProps = {
  displayType: 'input',
  decimalSeparator: '.',
  thousandSpacing: '3',
  fixedDecimalScale: false,
  prefix: '',
  suffix: '',
  allowNegative: true,
  isNumericString: false,
  type: 'text',
  onValueChange: _utils.noop,
  onChange: _utils.noop,
  onKeyDown: _utils.noop,
  onMouseUp: _utils.noop,
  onFocus: _utils.noop,
  onBlur: _utils.noop,
  isAllowed: _utils.returnTrue
};

var CurrencyFormat = function (_React$Component) {
  _inherits(CurrencyFormat, _React$Component);

  function CurrencyFormat(props) {
    _classCallCheck(this, CurrencyFormat);

    //validate props
    var _this = _possibleConstructorReturn(this, (CurrencyFormat.__proto__ || Object.getPrototypeOf(CurrencyFormat)).call(this, props));

    _this.validateProps();

    var formattedValue = _this.formatValueProp();

    _this.state = {
      value: formattedValue,
      numAsString: _this.removeFormatting(formattedValue)
    };

    _this.onChange = _this.onChange.bind(_this);
    _this.onKeyDown = _this.onKeyDown.bind(_this);
    _this.onMouseUp = _this.onMouseUp.bind(_this);
    _this.onFocus = _this.onFocus.bind(_this);
    _this.onBlur = _this.onBlur.bind(_this);
    return _this;
  }

  _createClass(CurrencyFormat, [{
    key: 'componentDidUpdate',
    value: function componentDidUpdate(prevProps) {
      this.updateValueIfRequired(prevProps);
    }
  }, {
    key: 'updateValueIfRequired',
    value: function updateValueIfRequired(prevProps) {
      var props = this.props,
          state = this.state;


      if (prevProps !== props) {
        //validate props
        this.validateProps();

        var stateValue = state.value;

        var lastNumStr = state.numAsString || '';

        var formattedValue = props.value === undefined ? this.formatNumString(lastNumStr) : this.formatValueProp();

        if (formattedValue !== stateValue) {
          this.setState({
            value: formattedValue,
            numAsString: this.removeFormatting(formattedValue)
          });
        }
      }
    }

    /** Misc methods **/

  }, {
    key: 'getFloatString',
    value: function getFloatString() {
      var num = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';

      var _getSeparators = this.getSeparators(),
          decimalSeparator = _getSeparators.decimalSeparator;

      var numRegex = this.getNumberRegex(true);

      //remove negation for regex check
      var hasNegation = num[0] === '-';
      if (hasNegation) num = num.replace('-', '');

      num = (num.match(numRegex) || []).join('').replace(decimalSeparator, '.');

      //remove extra decimals
      var firstDecimalIndex = num.indexOf('.');

      if (firstDecimalIndex !== -1) {
        num = num.substring(0, firstDecimalIndex) + '.' + num.substring(firstDecimalIndex + 1, num.length).replace(new RegExp((0, _utils.escapeRegExp)(decimalSeparator), 'g'), '');
      }

      //add negation back
      if (hasNegation) num = '-' + num;

      return num;
    }

    //returned regex assumes decimalSeparator is as per prop

  }, {
    key: 'getNumberRegex',
    value: function getNumberRegex(g, ignoreDecimalSeparator) {
      var _props = this.props,
          format = _props.format,
          decimalScale = _props.decimalScale;

      var _getSeparators2 = this.getSeparators(),
          decimalSeparator = _getSeparators2.decimalSeparator;

      return new RegExp('\\d' + (decimalSeparator && decimalScale !== 0 && !ignoreDecimalSeparator && !format ? '|' + (0, _utils.escapeRegExp)(decimalSeparator) : ''), g ? 'g' : undefined);
    }
  }, {
    key: 'getSeparators',
    value: function getSeparators() {
      var _props2 = this.props,
          decimalSeparator = _props2.decimalSeparator,
          thousandSpacing = _props2.thousandSpacing;
      var thousandSeparator = this.props.thousandSeparator;


      if (thousandSeparator === true) {
        thousandSeparator = ',';
      }

      return {
        decimalSeparator: decimalSeparator,
        thousandSeparator: thousandSeparator,
        thousandSpacing: thousandSpacing
      };
    }
  }, {
    key: 'getMaskAtIndex',
    value: function getMaskAtIndex(index) {
      var _props$mask = this.props.mask,
          mask = _props$mask === undefined ? ' ' : _props$mask;

      if (typeof mask === 'string') {
        return mask;
      }

      return mask[index] || ' ';
    }
  }, {
    key: 'validateProps',
    value: function validateProps() {
      var mask = this.props.mask;

      //validate decimalSeparator and thousandSeparator

      var _getSeparators3 = this.getSeparators(),
          decimalSeparator = _getSeparators3.decimalSeparator,
          thousandSeparator = _getSeparators3.thousandSeparator;

      if (decimalSeparator === thousandSeparator) {
        throw new Error('\n          Decimal separator can\'t be same as thousand separator.\n\n          thousandSeparator: ' + thousandSeparator + ' (thousandSeparator = {true} is same as thousandSeparator = ",")\n          decimalSeparator: ' + decimalSeparator + ' (default value for decimalSeparator is .)\n       ');
      }

      //validate mask
      if (mask) {
        var maskAsStr = mask === 'string' ? mask : mask.toString();
        if (maskAsStr.match(/\d/g)) {
          throw new Error('\n          Mask ' + mask + ' should not contain numeric character;\n        ');
        }
      }
    }
  }, {
    key: 'splitDecimal',
    value: function splitDecimal(numStr) {
      var allowNegative = this.props.allowNegative;

      var hasNagation = numStr[0] === '-';
      var addNegation = hasNagation && allowNegative;
      numStr = numStr.replace('-', '');

      var parts = numStr.split('.');
      var beforeDecimal = parts[0];
      var afterDecimal = parts[1] || '';

      return {
        beforeDecimal: beforeDecimal,
        afterDecimal: afterDecimal,
        hasNagation: hasNagation,
        addNegation: addNegation
      };
    }

    /** Misc methods end **/

    /** caret specific methods **/

  }, {
    key: 'setPatchedCaretPosition',
    value: function setPatchedCaretPosition(el, caretPos, currentValue) {
      /* setting caret position within timeout of 0ms is required for mobile chrome,
      otherwise browser resets the caret position after we set it
      We are also setting it without timeout so that in normal browser we don't see the flickering */
      (0, _utils.setCaretPosition)(el, caretPos);
      setTimeout(function () {
        if (el.value === currentValue) (0, _utils.setCaretPosition)(el, caretPos);
      }, 0);
    }

    /* This keeps the caret within typing area so people can't type in between prefix or suffix */

  }, {
    key: 'correctCaretPosition',
    value: function correctCaretPosition(value, caretPos, direction) {
      var _props3 = this.props,
          prefix = _props3.prefix,
          suffix = _props3.suffix,
          format = _props3.format;

      //in case of format as number limit between prefix and suffix

      if (!format) {
        var hasNegation = value[0] === '-';
        return Math.min(Math.max(caretPos, prefix.length + (hasNegation ? 1 : 0)), value.length - suffix.length);
      }

      //in case if custom format method don't do anything
      if (typeof format === 'function') return caretPos;

      /* in case format is string find the closest # position from the caret position */

      //in case the caretPos have input value on it don't do anything
      if (format[caretPos] === '#' && (0, _utils.charIsNumber)(value[caretPos])) return caretPos;

      //if caretPos is just after input value don't do anything
      if (format[caretPos - 1] === '#' && (0, _utils.charIsNumber)(value[caretPos - 1])) return caretPos;

      //find the nearest caret position
      var firstHashPosition = format.indexOf('#');
      var lastHashPosition = format.lastIndexOf('#');

      //limit the cursor between the first # position and the last # position
      caretPos = Math.min(Math.max(caretPos, firstHashPosition), lastHashPosition + 1);

      var nextPos = format.substring(caretPos, format.length).indexOf('#');
      var caretLeftBound = caretPos;
      var caretRightBoud = caretPos + (nextPos === -1 ? 0 : nextPos);

      //get the position where the last number is present
      while (caretLeftBound > firstHashPosition && (format[caretLeftBound] !== '#' || !(0, _utils.charIsNumber)(value[caretLeftBound]))) {
        caretLeftBound -= 1;
      }

      var goToLeft = !(0, _utils.charIsNumber)(value[caretRightBoud]) || direction === 'left' && caretPos !== firstHashPosition || caretPos - caretLeftBound < caretRightBoud - caretPos;

      return goToLeft ? caretLeftBound + 1 : caretRightBoud;
    }
  }, {
    key: 'getCaretPosition',
    value: function getCaretPosition(inputValue, formattedValue, caretPos) {
      var format = this.props.format;

      var stateValue = this.state.value;
      var numRegex = this.getNumberRegex(true);
      var inputNumber = (inputValue.match(numRegex) || []).join('');
      var formattedNumber = (formattedValue.match(numRegex) || []).join('');
      var j = void 0,
          i = void 0;

      j = 0;

      for (i = 0; i < caretPos; i++) {
        var currentInputChar = inputValue[i] || '';
        var currentFormatChar = formattedValue[j] || '';
        //no need to increase new cursor position if formatted value does not have those characters
        //case inputValue = 1a23 and formattedValue =  123
        if (!currentInputChar.match(numRegex) && currentInputChar !== currentFormatChar) continue;

        //When we are striping out leading zeros maintain the new cursor position
        //Case inputValue = 00023 and formattedValue = 23;
        if (currentInputChar === '0' && currentFormatChar.match(numRegex) && currentFormatChar !== '0' && inputNumber.length !== formattedNumber.length) continue;

        //we are not using currentFormatChar because j can change here
        while (currentInputChar !== formattedValue[j] && j < formattedValue.length) {
          j++;
        }j++;
      }

      if (typeof format === 'string' && !stateValue) {
        //set it to the maximum value so it goes after the last number
        j = formattedValue.length;
      }

      //correct caret position if its outside of editable area
      j = this.correctCaretPosition(formattedValue, j);

      return j;
    }
    /** caret specific methods ends **/

    /** methods to remove formattting **/

  }, {
    key: 'removePrefixAndSuffix',
    value: function removePrefixAndSuffix(val) {
      var _props4 = this.props,
          format = _props4.format,
          prefix = _props4.prefix,
          suffix = _props4.suffix;

      //remove prefix and suffix

      if (!format && val) {
        var isNegative = val[0] === '-';

        //remove negation sign
        if (isNegative) val = val.substring(1, val.length);

        //remove prefix
        val = prefix && val.indexOf(prefix) === 0 ? val.substring(prefix.length, val.length) : val;

        //remove suffix
        var suffixLastIndex = val.lastIndexOf(suffix);
        val = suffix && suffixLastIndex !== -1 && suffixLastIndex === val.length - suffix.length ? val.substring(0, suffixLastIndex) : val;

        //add negation sign back
        if (isNegative) val = '-' + val;
      }

      return val;
    }
  }, {
    key: 'removePatternFormatting',
    value: function removePatternFormatting(val) {
      var format = this.props.format;

      var formatArray = format.split('#').filter(function (str) {
        return str !== '';
      });
      var start = 0;
      var numStr = '';

      for (var i = 0, ln = formatArray.length; i <= ln; i++) {
        var part = formatArray[i] || '';

        //if i is the last fragment take the index of end of the value
        //For case like +1 (911) 911 91 91 having pattern +1 (###) ### ## ##
        var index = i === ln ? val.length : val.indexOf(part, start);

        /* in any case if we don't find the pattern part in the value assume the val as numeric string
        This will be also in case if user has started typing, in any other case it will not be -1
        unless wrong prop value is provided */
        if (index === -1) {
          numStr = val;
          break;
        } else {
          numStr += val.substring(start, index);
          start = index + part.length;
        }
      }

      return (numStr.match(/\d/g) || []).join('');
    }
  }, {
    key: 'removeFormatting',
    value: function removeFormatting(val) {
      var _props5 = this.props,
          format = _props5.format,
          removeFormatting = _props5.removeFormatting;

      if (!val) return val;

      if (!format) {
        val = this.removePrefixAndSuffix(val);
        val = this.getFloatString(val);
      } else if (typeof format === 'string') {
        val = this.removePatternFormatting(val);
      } else if (typeof removeFormatting === 'function') {
        //condition need to be handled if format method is provide,
        val = removeFormatting(val);
      } else {
        val = (val.match(/\d/g) || []).join('');
      }
      return val;
    }
    /** methods to remove formattting end **/

    /*** format specific methods start ***/
    /**
     * Format when # based string is provided
     * @param  {string} numStr Numeric String
     * @return {string}        formatted Value
     */

  }, {
    key: 'formatWithPattern',
    value: function formatWithPattern(numStr) {
      var format = this.props.format;

      var hashCount = 0;
      var formattedNumberAry = format.split('');
      for (var i = 0, ln = format.length; i < ln; i++) {
        if (format[i] === '#') {
          formattedNumberAry[i] = numStr[hashCount] || this.getMaskAtIndex(hashCount);
          hashCount += 1;
        }
      }
      return formattedNumberAry.join('');
    }
    /**
     * Format the given string according to thousand separator and thousand spacing
     * @param {*} beforeDecimal 
     * @param {*} thousandSeparator 
     * @param {*} thousandSpacing 
     */

  }, {
    key: 'formatThousand',
    value: function formatThousand(beforeDecimal, thousandSeparator, thousandSpacing) {
      var digitalGroup = void 0;
      switch (thousandSpacing) {
        case _utils.thousandGroupSpacing.two:
          digitalGroup = /(\d)(?=(\d{2})+(?!\d))/g;
          break;
        case _utils.thousandGroupSpacing.twoScaled:
          digitalGroup = /(\d)(?=(((\d{2})+)(\d{1})(?!\d)))/g;
          break;
        case _utils.thousandGroupSpacing.four:
          digitalGroup = /(\d)(?=(\d{4})+(?!\d))/g;
          break;
        default:
          digitalGroup = /(\d)(?=(\d{3})+(?!\d))/g;
      }

      return beforeDecimal.replace(digitalGroup, '$1' + thousandSeparator);
    }
    /**
     * @param  {string} numStr Numeric string/floatString] It always have decimalSeparator as .
     * @return {string} formatted Value
     */

  }, {
    key: 'formatAsNumber',
    value: function formatAsNumber(numStr) {
      var _props6 = this.props,
          decimalScale = _props6.decimalScale,
          fixedDecimalScale = _props6.fixedDecimalScale,
          prefix = _props6.prefix,
          suffix = _props6.suffix;

      var _getSeparators4 = this.getSeparators(),
          thousandSeparator = _getSeparators4.thousandSeparator,
          decimalSeparator = _getSeparators4.decimalSeparator,
          thousandSpacing = _getSeparators4.thousandSpacing;

      var hasDecimalSeparator = numStr.indexOf('.') !== -1 || decimalScale && fixedDecimalScale;

      var _splitDecimal = this.splitDecimal(numStr),
          beforeDecimal = _splitDecimal.beforeDecimal,
          afterDecimal = _splitDecimal.afterDecimal,
          addNegation = _splitDecimal.addNegation; // eslint-disable-line prefer-const

      //apply decimal precision if its defined


      if (decimalScale !== undefined) afterDecimal = (0, _utils.limitToScale)(afterDecimal, decimalScale, fixedDecimalScale);

      if (thousandSeparator) {
        beforeDecimal = this.formatThousand(beforeDecimal, thousandSeparator, thousandSpacing);
      }

      //add prefix and suffix
      if (prefix) beforeDecimal = prefix + beforeDecimal;
      if (suffix) afterDecimal = afterDecimal + suffix;

      //restore negation sign
      if (addNegation) beforeDecimal = '-' + beforeDecimal;

      numStr = beforeDecimal + (hasDecimalSeparator && decimalSeparator || '') + afterDecimal;

      return numStr;
    }
  }, {
    key: 'formatNumString',
    value: function formatNumString() {
      var value = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';
      var format = this.props.format;

      var formattedValue = value;

      if (value === '') {
        formattedValue = '';
      } else if (value === '-' && !format) {
        formattedValue = '-';
        value = '';
      } else if (typeof format === 'string') {
        formattedValue = this.formatWithPattern(formattedValue);
      } else if (typeof format === 'function') {
        formattedValue = format(formattedValue);
      } else {
        formattedValue = this.formatAsNumber(formattedValue);
      }

      return formattedValue;
    }
  }, {
    key: 'formatValueProp',
    value: function formatValueProp() {
      var _props7 = this.props,
          format = _props7.format,
          decimalScale = _props7.decimalScale,
          fixedDecimalScale = _props7.fixedDecimalScale;
      var _props8 = this.props,
          value = _props8.value,
          isNumericString = _props8.isNumericString;

      // if value is not defined return empty string

      if (value === undefined) return '';

      if (typeof value === 'number') {
        value = value.toString();
        isNumericString = true;
      }

      //round the number based on decimalScale
      //format only if non formatted value is provided
      if (isNumericString && !format && typeof decimalScale === 'number') {
        value = (0, _utils.roundToPrecision)(value, decimalScale, fixedDecimalScale);
      }

      var formattedValue = isNumericString ? this.formatNumString(value) : this.formatInput(value);

      return formattedValue;
    }
  }, {
    key: 'formatNegation',
    value: function formatNegation() {
      var value = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';
      var allowNegative = this.props.allowNegative;

      var negationRegex = new RegExp('(-)');
      var doubleNegationRegex = new RegExp('(-)(.)*(-)');

      // Check number has '-' value
      var hasNegation = negationRegex.test(value);

      // Check number has 2 or more '-' values
      var removeNegation = doubleNegationRegex.test(value);

      //remove negation
      value = value.replace(/-/g, '');

      if (hasNegation && !removeNegation && allowNegative) {
        value = '-' + value;
      }

      return value;
    }
  }, {
    key: 'formatInput',
    value: function formatInput() {
      var value = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';
      var format = this.props.format;

      //format negation only if we are formatting as number

      if (!format) {
        value = this.formatNegation(value);
      }

      //remove formatting from number
      value = this.removeFormatting(value);

      return this.formatNumString(value);
    }

    /*** format specific methods end ***/

  }, {
    key: 'isCharacterAFormat',
    value: function isCharacterAFormat(caretPos, value) {
      var _props9 = this.props,
          format = _props9.format,
          prefix = _props9.prefix,
          suffix = _props9.suffix,
          decimalScale = _props9.decimalScale,
          fixedDecimalScale = _props9.fixedDecimalScale;

      var _getSeparators5 = this.getSeparators(),
          decimalSeparator = _getSeparators5.decimalSeparator;

      //check within format pattern


      if (typeof format === 'string' && format[caretPos] !== '#') return true;

      //check in number format
      if (!format && (caretPos < prefix.length || caretPos >= value.length - suffix.length || decimalScale && fixedDecimalScale && value[caretPos] === decimalSeparator)) {
        return true;
      }

      return false;
    }
  }, {
    key: 'checkIfFormatGotDeleted',
    value: function checkIfFormatGotDeleted(start, end, value) {
      for (var i = start; i < end; i++) {
        if (this.isCharacterAFormat(i, value)) return true;
      }
      return false;
    }

    /**
     * This will check if any formatting got removed by the delete or backspace and reset the value
     * It will also work as fallback if android chome keyDown handler does not work
     **/

  }, {
    key: 'correctInputValue',
    value: function correctInputValue(caretPos, lastValue, value) {
      var format = this.props.format;

      var lastNumStr = this.state.numAsString || '';

      //don't do anyhting if something got added, or if value is empty string (when whole input is cleared)
      if (value.length >= lastValue.length || !value.length) {
        return value;
      }

      var start = caretPos;
      var lastValueParts = (0, _utils.splitString)(lastValue, caretPos);
      var newValueParts = (0, _utils.splitString)(value, caretPos);
      var deletedIndex = lastValueParts[1].lastIndexOf(newValueParts[1]);
      var diff = deletedIndex !== -1 ? lastValueParts[1].substring(0, deletedIndex) : '';
      var end = start + diff.length;

      //if format got deleted reset the value to last value
      if (this.checkIfFormatGotDeleted(start, end, lastValue)) {
        value = lastValue;
      }

      //for numbers check if beforeDecimal got deleted and there is nothing after decimal,
      //clear all numbers in such case while keeping the - sign
      if (!format) {
        var numericString = this.removeFormatting(value);

        var _splitDecimal2 = this.splitDecimal(numericString),
            beforeDecimal = _splitDecimal2.beforeDecimal,
            afterDecimal = _splitDecimal2.afterDecimal,
            addNegation = _splitDecimal2.addNegation; // eslint-disable-line prefer-const

        //clear only if something got deleted


        if (numericString.length < lastNumStr.length && beforeDecimal === '' && !parseFloat(afterDecimal)) {
          return addNegation ? '-' : '';
        }
      }

      return value;
    }
  }, {
    key: 'onChange',
    value: function onChange(e) {
      e.persist();
      var el = e.target;
      var inputValue = el.value;
      var state = this.state,
          props = this.props;
      var isAllowed = props.isAllowed;

      var lastValue = state.value || '';

      /*Max of selectionStart and selectionEnd is taken for the patch of pixel and other mobile device caret bug*/
      var currentCaretPosition = Math.max(el.selectionStart, el.selectionEnd);

      inputValue = this.correctInputValue(currentCaretPosition, lastValue, inputValue);

      var formattedValue = this.formatInput(inputValue) || '';
      var numAsString = this.removeFormatting(formattedValue);

      var valueObj = {
        formattedValue: formattedValue,
        value: numAsString,
        floatValue: parseFloat(numAsString)
      };

      if (!isAllowed(valueObj)) {
        formattedValue = lastValue;
      }

      //set the value imperatively, this is required for IE fix
      el.value = formattedValue;

      //get the caret position
      var caretPos = this.getCaretPosition(inputValue, formattedValue, currentCaretPosition);

      //set caret position
      this.setPatchedCaretPosition(el, caretPos, formattedValue);

      //change the state
      if (formattedValue !== lastValue) {
        this.setState({ value: formattedValue, numAsString: numAsString }, function () {
          props.onValueChange(valueObj);
          props.onChange(e);
        });
      } else {
        props.onChange(e);
      }
    }
  }, {
    key: 'onBlur',
    value: function onBlur(e) {
      var props = this.props,
          state = this.state;
      var format = props.format,
          onBlur = props.onBlur;
      var numAsString = state.numAsString;

      var lastValue = state.value;
      if (!format) {
        numAsString = (0, _utils.fixLeadingZero)(numAsString);
        var formattedValue = this.formatNumString(numAsString);
        var valueObj = {
          formattedValue: formattedValue,
          value: numAsString,
          floatValue: parseFloat(numAsString)
        };

        //change the state
        if (formattedValue !== lastValue) {
          // the event needs to be persisted because its properties can be accessed in an asynchronous way
          e.persist();
          this.setState({ value: formattedValue, numAsString: numAsString }, function () {
            props.onValueChange(valueObj);
            onBlur(e);
          });
          return;
        }
      }
      onBlur(e);
    }
  }, {
    key: 'onKeyDown',
    value: function onKeyDown(e) {
      var el = e.target;
      var key = e.key;
      var selectionEnd = el.selectionEnd,
          value = el.value;
      var selectionStart = el.selectionStart;

      var expectedCaretPosition = void 0;
      var _props10 = this.props,
          decimalScale = _props10.decimalScale,
          fixedDecimalScale = _props10.fixedDecimalScale,
          prefix = _props10.prefix,
          suffix = _props10.suffix,
          format = _props10.format,
          onKeyDown = _props10.onKeyDown;

      var ignoreDecimalSeparator = decimalScale !== undefined && fixedDecimalScale;
      var numRegex = this.getNumberRegex(false, ignoreDecimalSeparator);
      var negativeRegex = new RegExp('-');
      var isPatternFormat = typeof format === 'string';

      //Handle backspace and delete against non numerical/decimal characters or arrow keys
      if (key === 'ArrowLeft' || key === 'Backspace') {
        expectedCaretPosition = selectionStart - 1;
      } else if (key === 'ArrowRight') {
        expectedCaretPosition = selectionStart + 1;
      } else if (key === 'Delete') {
        expectedCaretPosition = selectionStart;
      }

      //if expectedCaretPosition is not set it means we don't want to Handle keyDown
      //also if multiple characters are selected don't handle
      if (expectedCaretPosition === undefined || selectionStart !== selectionEnd) {
        onKeyDown(e);
        return;
      }

      var newCaretPosition = expectedCaretPosition;
      var leftBound = isPatternFormat ? format.indexOf('#') : prefix.length;
      var rightBound = isPatternFormat ? format.lastIndexOf('#') + 1 : value.length - suffix.length;

      if (key === 'ArrowLeft' || key === 'ArrowRight') {
        var direction = key === 'ArrowLeft' ? 'left' : 'right';
        newCaretPosition = this.correctCaretPosition(value, expectedCaretPosition, direction);
      } else if (key === 'Delete' && !numRegex.test(value[expectedCaretPosition]) && !negativeRegex.test(value[expectedCaretPosition])) {
        while (!numRegex.test(value[newCaretPosition]) && newCaretPosition < rightBound) {
          newCaretPosition++;
        }
      } else if (key === 'Backspace' && !numRegex.test(value[expectedCaretPosition]) && !negativeRegex.test(value[expectedCaretPosition])) {
        while (!numRegex.test(value[newCaretPosition - 1]) && newCaretPosition > leftBound) {
          newCaretPosition--;
        }
        newCaretPosition = this.correctCaretPosition(value, newCaretPosition, 'left');
      }

      if (newCaretPosition !== expectedCaretPosition || expectedCaretPosition < leftBound || expectedCaretPosition > rightBound) {
        e.preventDefault();
        this.setPatchedCaretPosition(el, newCaretPosition, value);
      }

      /* NOTE: this is just required for unit test as we need to get the newCaretPosition,
              Remove this when you find different solution */
      if (e.isUnitTestRun) {
        this.setPatchedCaretPosition(el, newCaretPosition, value);
      }

      this.props.onKeyDown(e);
    }

    /** required to handle the caret position when click anywhere within the input **/

  }, {
    key: 'onMouseUp',
    value: function onMouseUp(e) {
      var el = e.target;
      var selectionStart = el.selectionStart,
          selectionEnd = el.selectionEnd,
          value = el.value;


      if (selectionStart === selectionEnd) {
        var caretPostion = this.correctCaretPosition(value, selectionStart);
        if (caretPostion !== selectionStart) {
          this.setPatchedCaretPosition(el, caretPostion, value);
        }
      }

      this.props.onMouseUp(e);
    }
  }, {
    key: 'onFocus',
    value: function onFocus(e) {
      var _this2 = this;

      // Workaround Chrome and Safari bug https://bugs.chromium.org/p/chromium/issues/detail?id=779328
      // (onFocus event target selectionStart is always 0 before setTimeout)
      e.persist();
      setTimeout(function () {
        var el = e.target;
        var selectionStart = el.selectionStart,
            value = el.value;


        var caretPosition = _this2.correctCaretPosition(value, selectionStart);
        if (caretPosition !== selectionStart) {
          _this2.setPatchedCaretPosition(el, caretPosition, value);
        }

        _this2.props.onFocus(e);
      });
    }
  }, {
    key: 'render',
    value: function render() {
      var _props11 = this.props,
          type = _props11.type,
          displayType = _props11.displayType,
          customInput = _props11.customInput,
          renderText = _props11.renderText;
      var value = this.state.value;


      var otherProps = (0, _utils.omit)(this.props, propTypes);

      var inputProps = _extends({}, otherProps, {
        type: type,
        value: value,
        onChange: this.onChange,
        onKeyDown: this.onKeyDown,
        onMouseUp: this.onMouseUp,
        onFocus: this.onFocus,
        onBlur: this.onBlur
      });

      if (displayType === 'text') {
        return renderText ? renderText(value) || null : _react2.default.createElement(
          'span',
          otherProps,
          value
        );
      } else if (customInput) {
        var CustomInput = customInput;
        return _react2.default.createElement(CustomInput, inputProps);
      }

      return _react2.default.createElement('input', inputProps);
    }
  }]);

  return CurrencyFormat;
}(_react2.default.Component);

CurrencyFormat.propTypes = propTypes;
CurrencyFormat.defaultProps = defaultProps;

module.exports = CurrencyFormat;
},{"./utils":60,"prop-types":50,"react":undefined}],60:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.noop = noop;
exports.returnTrue = returnTrue;
exports.charIsNumber = charIsNumber;
exports.escapeRegExp = escapeRegExp;
exports.fixLeadingZero = fixLeadingZero;
exports.splitString = splitString;
exports.limitToScale = limitToScale;
exports.roundToPrecision = roundToPrecision;
exports.omit = omit;
exports.setCaretPosition = setCaretPosition;


// basic noop function
function noop() {}
function returnTrue() {
  return true;
}

function charIsNumber(char) {
  return !!(char || '').match(/\d/);
}

function escapeRegExp(str) {
  return str.replace(/[\-\[\]\/\{\}\(\)\*\+\?\.\\\^\$\|]/g, "\\$&");
}

function fixLeadingZero(numStr) {
  if (!numStr) return numStr;
  var isNegative = numStr[0] === '-';
  if (isNegative) numStr = numStr.substring(1, numStr.length);
  var parts = numStr.split('.');
  var beforeDecimal = parts[0].replace(/^0+/, '') || '0';
  var afterDecimal = parts[1] || '';

  return '' + (isNegative ? '-' : '') + beforeDecimal + (afterDecimal ? '.' + afterDecimal : '');
}

function splitString(str, index) {
  return [str.substring(0, index), str.substring(index)];
}

/**
 * limit decimal numbers to given scale
 * Not used .fixedTo because that will break with big numbers
 */
function limitToScale(numStr, scale, fixedDecimalScale) {
  var str = '';
  var filler = fixedDecimalScale ? '0' : '';
  for (var i = 0; i <= scale - 1; i++) {
    str += numStr[i] || filler;
  }
  return str;
}

/**
 * This method is required to round prop value to given scale.
 * Not used .round or .fixedTo because that will break with big numbers
 */
function roundToPrecision(numStr, scale, fixedDecimalScale) {
  var numberParts = numStr.split('.');
  var roundedDecimalParts = parseFloat('0.' + (numberParts[1] || '0')).toFixed(scale).split('.');
  var intPart = numberParts[0].split('').reverse().reduce(function (roundedStr, current, idx) {
    if (roundedStr.length > idx) {
      return (Number(roundedStr[0]) + Number(current)).toString() + roundedStr.substring(1, roundedStr.length);
    }
    return current + roundedStr;
  }, roundedDecimalParts[0]);

  var decimalPart = limitToScale(roundedDecimalParts[1] || '', (numberParts[1] || '').length, fixedDecimalScale);

  return intPart + (decimalPart ? '.' + decimalPart : '');
}

function omit(obj, keyMaps) {
  var filteredObj = {};
  Object.keys(obj).forEach(function (key) {
    if (!keyMaps[key]) filteredObj[key] = obj[key];
  });
  return filteredObj;
}

/** set the caret positon in an input field **/
function setCaretPosition(el, caretPos) {
  el.value = el.value;
  // ^ this is used to not only get "focus", but
  // to make sure we don't have it everything -selected-
  // (it causes an issue in chrome, and having it doesn't hurt any other browser)
  if (el !== null) {
    if (el.createTextRange) {
      var range = el.createTextRange();
      range.move('character', caretPos);
      range.select();
      return true;
    }
    // (el.selectionStart === 0 added for Firefox bug)
    if (el.selectionStart || el.selectionStart === 0) {
      el.focus();
      el.setSelectionRange(caretPos, caretPos);
      return true;
    }

    // fail city, fortunately this never happens (as far as I've tested) :)
    el.focus();
    return false;
  }
}

var thousandGroupSpacing = exports.thousandGroupSpacing = {
  two: '2',
  twoScaled: '2s',
  three: '3',
  four: '4'
};
},{}],61:[function(require,module,exports){
/*
  Used as main file in package.json
*/

/* eslint-disable no-var */
/* eslint-env node */

var DayPicker = require('./lib/src/DayPicker');
var DateUtils = require('./lib/src/DateUtils');
var LocaleUtils = require('./lib/src/LocaleUtils');
var ModifiersUtils = require('./lib/src/ModifiersUtils');
var Weekday = require('./lib/src/Weekday');
var Navbar = require('./lib/src/Navbar');
var PropTypes = require('./lib/src/PropTypes');

module.exports = DayPicker;
module.exports.DateUtils = DateUtils;
module.exports.LocaleUtils = LocaleUtils;
module.exports.ModifiersUtils = ModifiersUtils;
module.exports.WeekdayPropTypes = Weekday.propTypes;
module.exports.NavbarPropTypes = Navbar.propTypes;
module.exports.PropTypes = PropTypes;

},{"./lib/src/DateUtils":63,"./lib/src/DayPicker":65,"./lib/src/LocaleUtils":67,"./lib/src/ModifiersUtils":68,"./lib/src/Navbar":70,"./lib/src/PropTypes":71,"./lib/src/Weekday":72}],62:[function(require,module,exports){
(function (process){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _LocaleUtils = require('./LocaleUtils');

var _LocaleUtils2 = _interopRequireDefault(_LocaleUtils);

var _keys = require('./keys');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Caption = function (_Component) {
  _inherits(Caption, _Component);

  function Caption(props) {
    _classCallCheck(this, Caption);

    var _this = _possibleConstructorReturn(this, (Caption.__proto__ || Object.getPrototypeOf(Caption)).call(this, props));

    _this.handleKeyUp = _this.handleKeyUp.bind(_this);
    return _this;
  }

  _createClass(Caption, [{
    key: 'shouldComponentUpdate',
    value: function shouldComponentUpdate(nextProps) {
      return nextProps.locale !== this.props.locale || nextProps.classNames !== this.props.classNames || nextProps.date.getMonth() !== this.props.date.getMonth() || nextProps.date.getFullYear() !== this.props.date.getFullYear();
    }
  }, {
    key: 'handleKeyUp',
    value: function handleKeyUp(e) {
      if (e.keyCode === _keys.ENTER) {
        this.props.onClick(e);
      }
    }
  }, {
    key: 'render',
    value: function render() {
      var _props = this.props,
          classNames = _props.classNames,
          date = _props.date,
          months = _props.months,
          locale = _props.locale,
          localeUtils = _props.localeUtils,
          onClick = _props.onClick;

      return _react2.default.createElement(
        'div',
        { className: classNames.caption, role: 'heading' },
        _react2.default.createElement(
          'div',
          { onClick: onClick, onKeyUp: this.handleKeyUp },
          months ? months[date.getMonth()] + ' ' + date.getFullYear() : localeUtils.formatMonthTitle(date, locale)
        )
      );
    }
  }]);

  return Caption;
}(_react.Component);

Caption.defaultProps = {
  localeUtils: _LocaleUtils2.default
};
exports.default = Caption;
Caption.propTypes = process.env.NODE_ENV !== "production" ? {
  date: _propTypes2.default.instanceOf(Date),
  months: _propTypes2.default.arrayOf(_propTypes2.default.string),
  locale: _propTypes2.default.string,
  localeUtils: _propTypes2.default.object,
  onClick: _propTypes2.default.func,
  classNames: _propTypes2.default.shape({
    caption: _propTypes2.default.string.isRequired
  }).isRequired
} : {};

}).call(this,require('_process'))

},{"./LocaleUtils":67,"./keys":75,"_process":46,"prop-types":50,"react":undefined}],63:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.clone = clone;
exports.isDate = isDate;
exports.addMonths = addMonths;
exports.isSameDay = isSameDay;
exports.isSameMonth = isSameMonth;
exports.isDayBefore = isDayBefore;
exports.isDayAfter = isDayAfter;
exports.isPastDay = isPastDay;
exports.isFutureDay = isFutureDay;
exports.isDayBetween = isDayBetween;
exports.addDayToRange = addDayToRange;
exports.isDayInRange = isDayInRange;
exports.getWeekNumber = getWeekNumber;
/**
 * Clone a date object.
 *
 * @export
 * @param  {Date} d The date to clone
 * @return {Date} The cloned date
 */
function clone(d) {
  return new Date(d.getTime());
}

/**
 * Return `true` if the passed value is a valid JavaScript Date object.
 *
 * @export
 * @param {any} value
 * @returns {Boolean}
 */
function isDate(value) {
  return value instanceof Date && !isNaN(value.valueOf());
}

/**
 * Return `d` as a new date with `n` months added.
 *
 * @export
 * @param {[type]} d
 * @param {[type]} n
 */
function addMonths(d, n) {
  var newDate = clone(d);
  newDate.setMonth(d.getMonth() + n);
  return newDate;
}

/**
 * Return `true` if two dates are the same day, ignoring the time.
 *
 * @export
 * @param  {Date}  d1
 * @param  {Date}  d2
 * @return {Boolean}
 */
function isSameDay(d1, d2) {
  if (!d1 || !d2) {
    return false;
  }
  return d1.getDate() === d2.getDate() && d1.getMonth() === d2.getMonth() && d1.getFullYear() === d2.getFullYear();
}

/**
 * Return `true` if two dates fall in the same month.
 *
 * @export
 * @param  {Date}  d1
 * @param  {Date}  d2
 * @return {Boolean}
 */
function isSameMonth(d1, d2) {
  if (!d1 || !d2) {
    return false;
  }
  return d1.getMonth() === d2.getMonth() && d1.getFullYear() === d2.getFullYear();
}

/**
 * Returns `true` if the first day is before the second day.
 *
 * @export
 * @param {Date} d1
 * @param {Date} d2
 * @returns {Boolean}
 */
function isDayBefore(d1, d2) {
  var day1 = clone(d1).setHours(0, 0, 0, 0);
  var day2 = clone(d2).setHours(0, 0, 0, 0);
  return day1 < day2;
}

/**
 * Returns `true` if the first day is after the second day.
 *
 * @export
 * @param {Date} d1
 * @param {Date} d2
 * @returns {Boolean}
 */
function isDayAfter(d1, d2) {
  var day1 = clone(d1).setHours(0, 0, 0, 0);
  var day2 = clone(d2).setHours(0, 0, 0, 0);
  return day1 > day2;
}

/**
 * Return `true` if a day is in the past, e.g. yesterday or any day
 * before yesterday.
 *
 * @export
 * @param  {Date}  d
 * @return {Boolean}
 */
function isPastDay(d) {
  var today = new Date();
  today.setHours(0, 0, 0, 0);
  return isDayBefore(d, today);
}

/**
 * Return `true` if a day is in the future, e.g. tomorrow or any day
 * after tomorrow.
 *
 * @export
 * @param  {Date}  d
 * @return {Boolean}
 */
function isFutureDay(d) {
  var tomorrow = new Date(new Date().getTime() + 24 * 60 * 60 * 1000);
  tomorrow.setHours(0, 0, 0, 0);
  return d >= tomorrow;
}

/**
 * Return `true` if day `d` is between days `d1` and `d2`,
 * without including them.
 *
 * @export
 * @param  {Date}  d
 * @param  {Date}  d1
 * @param  {Date}  d2
 * @return {Boolean}
 */
function isDayBetween(d, d1, d2) {
  var date = clone(d);
  date.setHours(0, 0, 0, 0);
  return isDayAfter(date, d1) && isDayBefore(date, d2) || isDayAfter(date, d2) && isDayBefore(date, d1);
}

/**
 * Add a day to a range and return a new range. A range is an object with
 * `from` and `to` days.
 *
 * @export
 * @param {Date} day
 * @param {Object} range
 * @return {Object} Returns a new range object
 */
function addDayToRange(day) {
  var range = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : { from: null, to: null };
  var from = range.from,
      to = range.to;

  if (!from) {
    from = day;
  } else if (from && to && isSameDay(from, to) && isSameDay(day, from)) {
    from = null;
    to = null;
  } else if (to && isDayBefore(day, from)) {
    from = day;
  } else if (to && isSameDay(day, to)) {
    from = day;
    to = day;
  } else {
    to = day;
    if (isDayBefore(to, from)) {
      to = from;
      from = day;
    }
  }

  return { from: from, to: to };
}

/**
 * Return `true` if a day is included in a range of days.
 *
 * @export
 * @param  {Date}  day
 * @param  {Object}  range
 * @return {Boolean}
 */
function isDayInRange(day, range) {
  var from = range.from,
      to = range.to;

  return from && isSameDay(day, from) || to && isSameDay(day, to) || from && to && isDayBetween(day, from, to);
}

/**
 * Return the year's week number (as per ISO, i.e. with the week starting from monday)
 * for the given day.
 *
 * @export
 * @param {Date} day
 * @returns {Number}
 */
function getWeekNumber(day) {
  var date = clone(day);
  date.setHours(0, 0, 0);
  date.setDate(date.getDate() + 4 - (date.getDay() || 7));
  return Math.ceil(((date - new Date(date.getFullYear(), 0, 1)) / 8.64e7 + 1) / 7);
}

exports.default = {
  addDayToRange: addDayToRange,
  addMonths: addMonths,
  clone: clone,
  getWeekNumber: getWeekNumber,
  isDate: isDate,
  isDayAfter: isDayAfter,
  isDayBefore: isDayBefore,
  isDayBetween: isDayBetween,
  isDayInRange: isDayInRange,
  isFutureDay: isFutureDay,
  isPastDay: isPastDay,
  isSameDay: isSameDay,
  isSameMonth: isSameMonth
};

},{}],64:[function(require,module,exports){
(function (process){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _DateUtils = require('./DateUtils');

var _Helpers = require('./Helpers');

var _classNames = require('./classNames');

var _classNames2 = _interopRequireDefault(_classNames);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /* eslint-disable jsx-a11y/no-static-element-interactions, react/forbid-prop-types */

function handleEvent(handler, day, modifiers) {
  if (!handler) {
    return undefined;
  }
  return function (e) {
    e.persist();
    handler(day, modifiers, e);
  };
}

var Day = function (_Component) {
  _inherits(Day, _Component);

  function Day() {
    _classCallCheck(this, Day);

    return _possibleConstructorReturn(this, (Day.__proto__ || Object.getPrototypeOf(Day)).apply(this, arguments));
  }

  _createClass(Day, [{
    key: 'shouldComponentUpdate',
    value: function shouldComponentUpdate(nextProps) {
      var _this2 = this;

      var propNames = Object.keys(this.props);
      var nextPropNames = Object.keys(nextProps);
      if (propNames.length !== nextPropNames.length) {
        return true;
      }
      return propNames.some(function (name) {
        if (name === 'modifiers' || name === 'modifiersStyles' || name === 'classNames') {
          var prop = _this2.props[name];
          var nextProp = nextProps[name];
          var modifiers = Object.keys(prop);
          var nextModifiers = Object.keys(nextProp);
          if (modifiers.length !== nextModifiers.length) {
            return true;
          }
          return modifiers.some(function (mod) {
            return !(0, _Helpers.hasOwnProp)(nextProp, mod) || prop[mod] !== nextProp[mod];
          });
        }
        if (name === 'day') {
          return !(0, _DateUtils.isSameDay)(_this2.props[name], nextProps[name]);
        }
        return !(0, _Helpers.hasOwnProp)(nextProps, name) || _this2.props[name] !== nextProps[name];
      });
    }
  }, {
    key: 'render',
    value: function render() {
      var _props = this.props,
          classNames = _props.classNames,
          modifiersStyles = _props.modifiersStyles,
          day = _props.day,
          tabIndex = _props.tabIndex,
          empty = _props.empty,
          modifiers = _props.modifiers,
          onMouseEnter = _props.onMouseEnter,
          onMouseLeave = _props.onMouseLeave,
          onMouseUp = _props.onMouseUp,
          onMouseDown = _props.onMouseDown,
          onClick = _props.onClick,
          onKeyDown = _props.onKeyDown,
          onTouchStart = _props.onTouchStart,
          onTouchEnd = _props.onTouchEnd,
          onFocus = _props.onFocus,
          ariaLabel = _props.ariaLabel,
          ariaDisabled = _props.ariaDisabled,
          ariaSelected = _props.ariaSelected,
          children = _props.children;


      var className = classNames.day;
      if (classNames !== _classNames2.default) {
        // When using CSS modules prefix the modifier as required by the BEM syntax
        className += ' ' + Object.keys(modifiers).join(' ');
      } else {
        className += Object.keys(modifiers).map(function (modifier) {
          return ' ' + className + '--' + modifier;
        }).join('');
      }

      var style = void 0;
      if (modifiersStyles) {
        Object.keys(modifiers).filter(function (modifier) {
          return !!modifiersStyles[modifier];
        }).forEach(function (modifier) {
          style = _extends({}, style, modifiersStyles[modifier]);
        });
      }

      if (empty) {
        return _react2.default.createElement('div', { 'aria-disabled': true, className: className, style: style });
      }
      return _react2.default.createElement(
        'div',
        {
          className: className,
          tabIndex: tabIndex,
          style: style,
          role: 'gridcell',
          'aria-label': ariaLabel,
          'aria-disabled': ariaDisabled,
          'aria-selected': ariaSelected,
          onClick: handleEvent(onClick, day, modifiers),
          onKeyDown: handleEvent(onKeyDown, day, modifiers),
          onMouseEnter: handleEvent(onMouseEnter, day, modifiers),
          onMouseLeave: handleEvent(onMouseLeave, day, modifiers),
          onMouseUp: handleEvent(onMouseUp, day, modifiers),
          onMouseDown: handleEvent(onMouseDown, day, modifiers),
          onTouchEnd: handleEvent(onTouchEnd, day, modifiers),
          onTouchStart: handleEvent(onTouchStart, day, modifiers),
          onFocus: handleEvent(onFocus, day, modifiers)
        },
        children
      );
    }
  }]);

  return Day;
}(_react.Component);

Day.defaultProps = {
  tabIndex: -1
};
Day.defaultProps = {
  modifiers: {},
  modifiersStyles: {},
  empty: false
};
exports.default = Day;
Day.propTypes = process.env.NODE_ENV !== "production" ? {
  classNames: _propTypes2.default.shape({
    day: _propTypes2.default.string.isRequired
  }).isRequired,

  day: _propTypes2.default.instanceOf(Date).isRequired,
  children: _propTypes2.default.node.isRequired,

  ariaDisabled: _propTypes2.default.bool,
  ariaLabel: _propTypes2.default.string,
  ariaSelected: _propTypes2.default.bool,
  empty: _propTypes2.default.bool,
  modifiers: _propTypes2.default.object,
  modifiersStyles: _propTypes2.default.object,
  onClick: _propTypes2.default.func,
  onKeyDown: _propTypes2.default.func,
  onMouseEnter: _propTypes2.default.func,
  onMouseLeave: _propTypes2.default.func,
  onMouseDown: _propTypes2.default.func,
  onMouseUp: _propTypes2.default.func,
  onTouchEnd: _propTypes2.default.func,
  onTouchStart: _propTypes2.default.func,
  onFocus: _propTypes2.default.func,
  tabIndex: _propTypes2.default.number
} : {};

}).call(this,require('_process'))

},{"./DateUtils":63,"./Helpers":66,"./classNames":74,"_process":46,"prop-types":50,"react":undefined}],65:[function(require,module,exports){
(function (process){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ModifiersUtils = exports.LocaleUtils = exports.DateUtils = exports.DayPicker = undefined;

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _Caption = require('./Caption');

var _Caption2 = _interopRequireDefault(_Caption);

var _Navbar = require('./Navbar');

var _Navbar2 = _interopRequireDefault(_Navbar);

var _Month = require('./Month');

var _Month2 = _interopRequireDefault(_Month);

var _Weekday = require('./Weekday');

var _Weekday2 = _interopRequireDefault(_Weekday);

var _Helpers = require('./Helpers');

var Helpers = _interopRequireWildcard(_Helpers);

var _DateUtils = require('./DateUtils');

var DateUtils = _interopRequireWildcard(_DateUtils);

var _LocaleUtils = require('./LocaleUtils');

var LocaleUtils = _interopRequireWildcard(_LocaleUtils);

var _ModifiersUtils = require('./ModifiersUtils');

var ModifiersUtils = _interopRequireWildcard(_ModifiersUtils);

var _classNames = require('./classNames');

var _classNames2 = _interopRequireDefault(_classNames);

var _keys = require('./keys');

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var DayPicker = exports.DayPicker = function (_Component) {
  _inherits(DayPicker, _Component);

  function DayPicker(props) {
    _classCallCheck(this, DayPicker);

    var _this = _possibleConstructorReturn(this, (DayPicker.__proto__ || Object.getPrototypeOf(DayPicker)).call(this, props));

    _this.dayPicker = null;

    _this.showNextMonth = function (callback) {
      if (!_this.allowNextMonth()) {
        return;
      }
      var deltaMonths = _this.props.pagedNavigation ? _this.props.numberOfMonths : 1;
      var nextMonth = DateUtils.addMonths(_this.state.currentMonth, deltaMonths);
      _this.showMonth(nextMonth, callback);
    };

    _this.showPreviousMonth = function (callback) {
      if (!_this.allowPreviousMonth()) {
        return;
      }
      var deltaMonths = _this.props.pagedNavigation ? _this.props.numberOfMonths : 1;
      var previousMonth = DateUtils.addMonths(_this.state.currentMonth, -deltaMonths);
      _this.showMonth(previousMonth, callback);
    };

    _this.handleKeyDown = function (e) {
      e.persist();

      switch (e.keyCode) {
        case _keys.LEFT:
          if (_this.props.dir === 'rtl') {
            _this.showNextMonth();
          } else {
            _this.showPreviousMonth();
          }
          Helpers.cancelEvent(e);
          break;
        case _keys.RIGHT:
          if (_this.props.dir === 'rtl') {
            _this.showPreviousMonth();
          } else {
            _this.showNextMonth();
          }
          Helpers.cancelEvent(e);
          break;
        case _keys.UP:
          _this.showPreviousYear();
          Helpers.cancelEvent(e);
          break;
        case _keys.DOWN:
          _this.showNextYear();
          Helpers.cancelEvent(e);
          break;
        default:
          break;
      }

      if (_this.props.onKeyDown) {
        _this.props.onKeyDown(e);
      }
    };

    _this.handleDayKeyDown = function (day, modifiers, e) {
      e.persist();

      switch (e.keyCode) {
        case _keys.LEFT:
          Helpers.cancelEvent(e);
          if (_this.props.dir === 'rtl') {
            _this.focusNextDay(e.target);
          } else {
            _this.focusPreviousDay(e.target);
          }
          break;
        case _keys.RIGHT:
          Helpers.cancelEvent(e);
          if (_this.props.dir === 'rtl') {
            _this.focusPreviousDay(e.target);
          } else {
            _this.focusNextDay(e.target);
          }
          break;
        case _keys.UP:
          Helpers.cancelEvent(e);
          _this.focusPreviousWeek(e.target);
          break;
        case _keys.DOWN:
          Helpers.cancelEvent(e);
          _this.focusNextWeek(e.target);
          break;
        case _keys.ENTER:
        case _keys.SPACE:
          Helpers.cancelEvent(e);
          if (_this.props.onDayClick) {
            _this.handleDayClick(day, modifiers, e);
          }
          break;
        default:
          break;
      }
      if (_this.props.onDayKeyDown) {
        _this.props.onDayKeyDown(day, modifiers, e);
      }
    };

    _this.handleDayClick = function (day, modifiers, e) {
      e.persist();

      if (modifiers[_this.props.classNames.outside] && _this.props.enableOutsideDaysClick) {
        _this.handleOutsideDayClick(day);
      }
      if (_this.props.onDayClick) {
        _this.props.onDayClick(day, modifiers, e);
      }
    };

    _this.handleTodayButtonClick = function (e) {
      var today = new Date();
      var month = new Date(today.getFullYear(), today.getMonth());
      _this.showMonth(month);
      e.target.blur();
      if (_this.props.onTodayButtonClick) {
        e.persist();
        _this.props.onTodayButtonClick(new Date(today.getFullYear(), today.getMonth(), today.getDate()), ModifiersUtils.getModifiersForDay(today, _this.props.modifiers), e);
      }
    };

    var currentMonth = _this.getCurrentMonthFromProps(props);
    _this.state = { currentMonth: currentMonth };
    return _this;
  }

  _createClass(DayPicker, [{
    key: 'componentDidUpdate',
    value: function componentDidUpdate(prevProps) {
      // Changing the `month` props means changing the current displayed month
      if (prevProps.month !== this.props.month && !DateUtils.isSameMonth(prevProps.month, this.props.month)) {
        var currentMonth = this.getCurrentMonthFromProps(this.props);
        // eslint-disable-next-line react/no-did-update-set-state
        this.setState({ currentMonth: currentMonth });
      }
    }

    /**
     * Return the month to be shown in the calendar based on the component props.
     *
     * @param {Object} props
     * @returns Date
     * @memberof DayPicker
     * @private
     */

  }, {
    key: 'getCurrentMonthFromProps',
    value: function getCurrentMonthFromProps(props) {
      var initialMonth = Helpers.startOfMonth(props.month || props.initialMonth);
      var currentMonth = initialMonth;

      if (props.pagedNavigation && props.numberOfMonths > 1 && props.fromMonth) {
        var fromMonth = Helpers.startOfMonth(props.fromMonth);
        var diffInMonths = Helpers.getMonthsDiff(fromMonth, currentMonth);
        currentMonth = DateUtils.addMonths(fromMonth, Math.floor(diffInMonths / props.numberOfMonths) * props.numberOfMonths);
      } else if (props.toMonth && props.numberOfMonths > 1 && Helpers.getMonthsDiff(currentMonth, props.toMonth) <= 0) {
        currentMonth = DateUtils.addMonths(Helpers.startOfMonth(props.toMonth), 1 - this.props.numberOfMonths);
      }
      return currentMonth;
    }
  }, {
    key: 'getNextNavigableMonth',
    value: function getNextNavigableMonth() {
      return DateUtils.addMonths(this.state.currentMonth, this.props.numberOfMonths);
    }
  }, {
    key: 'getPreviousNavigableMonth',
    value: function getPreviousNavigableMonth() {
      return DateUtils.addMonths(this.state.currentMonth, -1);
    }
  }, {
    key: 'allowPreviousMonth',
    value: function allowPreviousMonth() {
      var previousMonth = DateUtils.addMonths(this.state.currentMonth, -1);
      return this.allowMonth(previousMonth);
    }
  }, {
    key: 'allowNextMonth',
    value: function allowNextMonth() {
      var nextMonth = DateUtils.addMonths(this.state.currentMonth, this.props.numberOfMonths);
      return this.allowMonth(nextMonth);
    }
  }, {
    key: 'allowMonth',
    value: function allowMonth(d) {
      var _props = this.props,
          fromMonth = _props.fromMonth,
          toMonth = _props.toMonth,
          canChangeMonth = _props.canChangeMonth;

      if (!canChangeMonth || fromMonth && Helpers.getMonthsDiff(fromMonth, d) < 0 || toMonth && Helpers.getMonthsDiff(toMonth, d) > 0) {
        return false;
      }
      return true;
    }
  }, {
    key: 'allowYearChange',
    value: function allowYearChange() {
      return this.props.canChangeMonth;
    }
  }, {
    key: 'showMonth',
    value: function showMonth(d, callback) {
      var _this2 = this;

      if (!this.allowMonth(d)) {
        return;
      }
      this.setState({ currentMonth: Helpers.startOfMonth(d) }, function () {
        if (callback) {
          callback();
        }
        if (_this2.props.onMonthChange) {
          _this2.props.onMonthChange(_this2.state.currentMonth);
        }
      });
    }
  }, {
    key: 'showNextYear',
    value: function showNextYear() {
      if (!this.allowYearChange()) {
        return;
      }
      var nextMonth = DateUtils.addMonths(this.state.currentMonth, 12);
      this.showMonth(nextMonth);
    }
  }, {
    key: 'showPreviousYear',
    value: function showPreviousYear() {
      if (!this.allowYearChange()) {
        return;
      }
      var nextMonth = DateUtils.addMonths(this.state.currentMonth, -12);
      this.showMonth(nextMonth);
    }
  }, {
    key: 'focusFirstDayOfMonth',
    value: function focusFirstDayOfMonth() {
      Helpers.getDayNodes(this.dayPicker, this.props.classNames)[0].focus();
    }
  }, {
    key: 'focusLastDayOfMonth',
    value: function focusLastDayOfMonth() {
      var dayNodes = Helpers.getDayNodes(this.dayPicker, this.props.classNames);
      dayNodes[dayNodes.length - 1].focus();
    }
  }, {
    key: 'focusPreviousDay',
    value: function focusPreviousDay(dayNode) {
      var _this3 = this;

      var dayNodes = Helpers.getDayNodes(this.dayPicker, this.props.classNames);
      var dayNodeIndex = Helpers.nodeListToArray(dayNodes).indexOf(dayNode);
      if (dayNodeIndex === -1) return;
      if (dayNodeIndex === 0) {
        this.showPreviousMonth(function () {
          return _this3.focusLastDayOfMonth();
        });
      } else {
        dayNodes[dayNodeIndex - 1].focus();
      }
    }
  }, {
    key: 'focusNextDay',
    value: function focusNextDay(dayNode) {
      var _this4 = this;

      var dayNodes = Helpers.getDayNodes(this.dayPicker, this.props.classNames);
      var dayNodeIndex = Helpers.nodeListToArray(dayNodes).indexOf(dayNode);
      if (dayNodeIndex === -1) return;
      if (dayNodeIndex === dayNodes.length - 1) {
        this.showNextMonth(function () {
          return _this4.focusFirstDayOfMonth();
        });
      } else {
        dayNodes[dayNodeIndex + 1].focus();
      }
    }
  }, {
    key: 'focusNextWeek',
    value: function focusNextWeek(dayNode) {
      var _this5 = this;

      var dayNodes = Helpers.getDayNodes(this.dayPicker, this.props.classNames);
      var dayNodeIndex = Helpers.nodeListToArray(dayNodes).indexOf(dayNode);
      var isInLastWeekOfMonth = dayNodeIndex > dayNodes.length - 8;

      if (isInLastWeekOfMonth) {
        this.showNextMonth(function () {
          var daysAfterIndex = dayNodes.length - dayNodeIndex;
          var nextMonthDayNodeIndex = 7 - daysAfterIndex;
          Helpers.getDayNodes(_this5.dayPicker, _this5.props.classNames)[nextMonthDayNodeIndex].focus();
        });
      } else {
        dayNodes[dayNodeIndex + 7].focus();
      }
    }
  }, {
    key: 'focusPreviousWeek',
    value: function focusPreviousWeek(dayNode) {
      var _this6 = this;

      var dayNodes = Helpers.getDayNodes(this.dayPicker, this.props.classNames);
      var dayNodeIndex = Helpers.nodeListToArray(dayNodes).indexOf(dayNode);
      var isInFirstWeekOfMonth = dayNodeIndex <= 6;

      if (isInFirstWeekOfMonth) {
        this.showPreviousMonth(function () {
          var previousMonthDayNodes = Helpers.getDayNodes(_this6.dayPicker, _this6.props.classNames);
          var startOfLastWeekOfMonth = previousMonthDayNodes.length - 7;
          var previousMonthDayNodeIndex = startOfLastWeekOfMonth + dayNodeIndex;
          previousMonthDayNodes[previousMonthDayNodeIndex].focus();
        });
      } else {
        dayNodes[dayNodeIndex - 7].focus();
      }
    }

    // Event handlers

  }, {
    key: 'handleOutsideDayClick',
    value: function handleOutsideDayClick(day) {
      var currentMonth = this.state.currentMonth;
      var numberOfMonths = this.props.numberOfMonths;

      var diffInMonths = Helpers.getMonthsDiff(currentMonth, day);
      if (diffInMonths > 0 && diffInMonths >= numberOfMonths) {
        this.showNextMonth();
      } else if (diffInMonths < 0) {
        this.showPreviousMonth();
      }
    }
  }, {
    key: 'renderNavbar',
    value: function renderNavbar() {
      var _props2 = this.props,
          labels = _props2.labels,
          locale = _props2.locale,
          localeUtils = _props2.localeUtils,
          canChangeMonth = _props2.canChangeMonth,
          navbarElement = _props2.navbarElement,
          attributes = _objectWithoutProperties(_props2, ['labels', 'locale', 'localeUtils', 'canChangeMonth', 'navbarElement']);

      if (!canChangeMonth) return null;

      var props = {
        month: this.state.currentMonth,
        classNames: this.props.classNames,
        className: this.props.classNames.navBar,
        nextMonth: this.getNextNavigableMonth(),
        previousMonth: this.getPreviousNavigableMonth(),
        showPreviousButton: this.allowPreviousMonth(),
        showNextButton: this.allowNextMonth(),
        onNextClick: this.showNextMonth,
        onPreviousClick: this.showPreviousMonth,
        dir: attributes.dir,
        labels: labels,
        locale: locale,
        localeUtils: localeUtils
      };
      return _react2.default.isValidElement(navbarElement) ? _react2.default.cloneElement(navbarElement, props) : _react2.default.createElement(navbarElement, props);
    }
  }, {
    key: 'renderMonths',
    value: function renderMonths() {
      var months = [];
      var firstDayOfWeek = Helpers.getFirstDayOfWeekFromProps(this.props);
      for (var i = 0; i < this.props.numberOfMonths; i += 1) {
        var month = DateUtils.addMonths(this.state.currentMonth, i);
        months.push(_react2.default.createElement(_Month2.default, _extends({
          key: i
        }, this.props, {
          month: month,
          firstDayOfWeek: firstDayOfWeek,
          onDayKeyDown: this.handleDayKeyDown,
          onDayClick: this.handleDayClick
        })));
      }

      if (this.props.reverseMonths) {
        months.reverse();
      }
      return months;
    }
  }, {
    key: 'renderFooter',
    value: function renderFooter() {
      if (this.props.todayButton) {
        return _react2.default.createElement(
          'div',
          { className: this.props.classNames.footer },
          this.renderTodayButton()
        );
      }
      return null;
    }
  }, {
    key: 'renderTodayButton',
    value: function renderTodayButton() {
      return _react2.default.createElement(
        'button',
        {
          type: 'button',
          tabIndex: 0,
          className: this.props.classNames.todayButton,
          'aria-label': this.props.todayButton,
          onClick: this.handleTodayButtonClick
        },
        this.props.todayButton
      );
    }
  }, {
    key: 'render',
    value: function render() {
      var _this7 = this;

      var className = this.props.classNames.container;

      if (!this.props.onDayClick) {
        className = className + ' ' + this.props.classNames.interactionDisabled;
      }
      if (this.props.className) {
        className = className + ' ' + this.props.className;
      }
      return _react2.default.createElement(
        'div',
        _extends({}, this.props.containerProps, {
          className: className,
          ref: function ref(el) {
            return _this7.dayPicker = el;
          },
          lang: this.props.locale
        }),
        _react2.default.createElement(
          'div',
          {
            className: this.props.classNames.wrapper,
            tabIndex: this.props.canChangeMonth && typeof this.props.tabIndex !== 'undefined' ? this.props.tabIndex : -1,
            onKeyDown: this.handleKeyDown,
            onFocus: this.props.onFocus,
            onBlur: this.props.onBlur
          },
          this.renderNavbar(),
          _react2.default.createElement(
            'div',
            { className: this.props.classNames.months },
            this.renderMonths()
          ),
          this.renderFooter()
        )
      );
    }
  }]);

  return DayPicker;
}(_react.Component);

DayPicker.VERSION = '7.3.0';
DayPicker.defaultProps = {
  classNames: _classNames2.default,
  tabIndex: 0,
  initialMonth: new Date(),
  numberOfMonths: 1,
  labels: {
    previousMonth: 'Previous Month',
    nextMonth: 'Next Month'
  },
  locale: 'en',
  localeUtils: LocaleUtils,
  showOutsideDays: false,
  enableOutsideDaysClick: true,
  fixedWeeks: false,
  canChangeMonth: true,
  reverseMonths: false,
  pagedNavigation: false,
  showWeekNumbers: false,
  showWeekDays: true,
  renderDay: function renderDay(day) {
    return day.getDate();
  },
  renderWeek: function renderWeek(weekNumber) {
    return weekNumber;
  },
  weekdayElement: _react2.default.createElement(_Weekday2.default, null),
  navbarElement: _react2.default.createElement(_Navbar2.default, { classNames: _classNames2.default }),
  captionElement: _react2.default.createElement(_Caption2.default, { classNames: _classNames2.default })
};
DayPicker.propTypes = process.env.NODE_ENV !== "production" ? {
  // Rendering months
  initialMonth: _propTypes2.default.instanceOf(Date),
  month: _propTypes2.default.instanceOf(Date),
  numberOfMonths: _propTypes2.default.number,
  fromMonth: _propTypes2.default.instanceOf(Date),
  toMonth: _propTypes2.default.instanceOf(Date),
  canChangeMonth: _propTypes2.default.bool,
  reverseMonths: _propTypes2.default.bool,
  pagedNavigation: _propTypes2.default.bool,
  todayButton: _propTypes2.default.string,
  showWeekNumbers: _propTypes2.default.bool,
  showWeekDays: _propTypes2.default.bool,

  // Modifiers
  selectedDays: _propTypes2.default.oneOfType([_propTypes2.default.object, _propTypes2.default.func, _propTypes2.default.array]),
  disabledDays: _propTypes2.default.oneOfType([_propTypes2.default.object, _propTypes2.default.func, _propTypes2.default.array]),

  modifiers: _propTypes2.default.object,
  modifiersStyles: _propTypes2.default.object,

  // Localization
  dir: _propTypes2.default.string,
  firstDayOfWeek: _propTypes2.default.oneOf([0, 1, 2, 3, 4, 5, 6]),
  labels: _propTypes2.default.shape({
    nextMonth: _propTypes2.default.string.isRequired,
    previousMonth: _propTypes2.default.string.isRequired
  }),
  locale: _propTypes2.default.string,
  localeUtils: _propTypes2.default.shape({
    formatMonthTitle: _propTypes2.default.func,
    formatWeekdayShort: _propTypes2.default.func,
    formatWeekdayLong: _propTypes2.default.func,
    getFirstDayOfWeek: _propTypes2.default.func
  }),
  months: _propTypes2.default.arrayOf(_propTypes2.default.string),
  weekdaysLong: _propTypes2.default.arrayOf(_propTypes2.default.string),
  weekdaysShort: _propTypes2.default.arrayOf(_propTypes2.default.string),

  // Customization
  showOutsideDays: _propTypes2.default.bool,
  enableOutsideDaysClick: _propTypes2.default.bool,
  fixedWeeks: _propTypes2.default.bool,

  // CSS and HTML
  classNames: _propTypes2.default.shape({
    body: _propTypes2.default.string,
    container: _propTypes2.default.string,
    day: _propTypes2.default.string.isRequired,
    disabled: _propTypes2.default.string.isRequired,
    footer: _propTypes2.default.string,
    interactionDisabled: _propTypes2.default.string,
    months: _propTypes2.default.string,
    month: _propTypes2.default.string,
    navBar: _propTypes2.default.string,
    outside: _propTypes2.default.string.isRequired,
    selected: _propTypes2.default.string.isRequired,
    today: _propTypes2.default.string.isRequired,
    todayButton: _propTypes2.default.string,
    week: _propTypes2.default.string,
    wrapper: _propTypes2.default.string
  }),
  className: _propTypes2.default.string,
  containerProps: _propTypes2.default.object,
  tabIndex: _propTypes2.default.number,

  // Custom elements
  renderDay: _propTypes2.default.func,
  renderWeek: _propTypes2.default.func,
  weekdayElement: _propTypes2.default.oneOfType([_propTypes2.default.element, _propTypes2.default.func, _propTypes2.default.instanceOf(_react.Component)]),
  navbarElement: _propTypes2.default.oneOfType([_propTypes2.default.element, _propTypes2.default.func, _propTypes2.default.instanceOf(_react.Component)]),
  captionElement: _propTypes2.default.oneOfType([_propTypes2.default.element, _propTypes2.default.func, _propTypes2.default.instanceOf(_react.Component)]),

  // Events
  onBlur: _propTypes2.default.func,
  onFocus: _propTypes2.default.func,
  onKeyDown: _propTypes2.default.func,
  onDayClick: _propTypes2.default.func,
  onDayKeyDown: _propTypes2.default.func,
  onDayMouseEnter: _propTypes2.default.func,
  onDayMouseLeave: _propTypes2.default.func,
  onDayMouseDown: _propTypes2.default.func,
  onDayMouseUp: _propTypes2.default.func,
  onDayTouchStart: _propTypes2.default.func,
  onDayTouchEnd: _propTypes2.default.func,
  onDayFocus: _propTypes2.default.func,
  onMonthChange: _propTypes2.default.func,
  onCaptionClick: _propTypes2.default.func,
  onWeekClick: _propTypes2.default.func,
  onTodayButtonClick: _propTypes2.default.func
} : {};


DayPicker.DateUtils = DateUtils;
DayPicker.LocaleUtils = LocaleUtils;
DayPicker.ModifiersUtils = ModifiersUtils;

exports.DateUtils = DateUtils;
exports.LocaleUtils = LocaleUtils;
exports.ModifiersUtils = ModifiersUtils;
exports.default = DayPicker;

}).call(this,require('_process'))

},{"./Caption":62,"./DateUtils":63,"./Helpers":66,"./LocaleUtils":67,"./ModifiersUtils":68,"./Month":69,"./Navbar":70,"./Weekday":72,"./classNames":74,"./keys":75,"_process":46,"prop-types":50,"react":undefined}],66:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

exports.cancelEvent = cancelEvent;
exports.getFirstDayOfMonth = getFirstDayOfMonth;
exports.getDaysInMonth = getDaysInMonth;
exports.getModifiersFromProps = getModifiersFromProps;
exports.getFirstDayOfWeekFromProps = getFirstDayOfWeekFromProps;
exports.isRangeOfDates = isRangeOfDates;
exports.getMonthsDiff = getMonthsDiff;
exports.getWeekArray = getWeekArray;
exports.startOfMonth = startOfMonth;
exports.getDayNodes = getDayNodes;
exports.nodeListToArray = nodeListToArray;
exports.hasOwnProp = hasOwnProp;

var _DateUtils = require('./DateUtils');

var _LocaleUtils = require('./LocaleUtils');

var _classNames = require('./classNames');

var _classNames2 = _interopRequireDefault(_classNames);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function cancelEvent(e) {
  e.preventDefault();
  e.stopPropagation();
}

function getFirstDayOfMonth(d) {
  return new Date(d.getFullYear(), d.getMonth(), 1, 12);
}

function getDaysInMonth(d) {
  var resultDate = getFirstDayOfMonth(d);

  resultDate.setMonth(resultDate.getMonth() + 1);
  resultDate.setDate(resultDate.getDate() - 1);

  return resultDate.getDate();
}

function getModifiersFromProps(props) {
  var modifiers = _extends({}, props.modifiers);
  if (props.selectedDays) {
    modifiers[props.classNames.selected] = props.selectedDays;
  }
  if (props.disabledDays) {
    modifiers[props.classNames.disabled] = props.disabledDays;
  }
  return modifiers;
}

function getFirstDayOfWeekFromProps(props) {
  var firstDayOfWeek = props.firstDayOfWeek,
      _props$locale = props.locale,
      locale = _props$locale === undefined ? 'en' : _props$locale,
      _props$localeUtils = props.localeUtils,
      localeUtils = _props$localeUtils === undefined ? {} : _props$localeUtils;

  if (!isNaN(firstDayOfWeek)) {
    return firstDayOfWeek;
  }
  if (localeUtils.getFirstDayOfWeek) {
    return localeUtils.getFirstDayOfWeek(locale);
  }
  return 0;
}

function isRangeOfDates(value) {
  return !!(value && value.from && value.to);
}

function getMonthsDiff(d1, d2) {
  return d2.getMonth() - d1.getMonth() + 12 * (d2.getFullYear() - d1.getFullYear());
}

function getWeekArray(d) {
  var firstDayOfWeek = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : (0, _LocaleUtils.getFirstDayOfWeek)();
  var fixedWeeks = arguments[2];

  var daysInMonth = getDaysInMonth(d);
  var dayArray = [];

  var week = [];
  var weekArray = [];

  for (var i = 1; i <= daysInMonth; i += 1) {
    dayArray.push(new Date(d.getFullYear(), d.getMonth(), i, 12));
  }

  dayArray.forEach(function (day) {
    if (week.length > 0 && day.getDay() === firstDayOfWeek) {
      weekArray.push(week);
      week = [];
    }
    week.push(day);
    if (dayArray.indexOf(day) === dayArray.length - 1) {
      weekArray.push(week);
    }
  });

  // unshift days to start the first week
  var firstWeek = weekArray[0];
  for (var _i = 7 - firstWeek.length; _i > 0; _i -= 1) {
    var outsideDate = (0, _DateUtils.clone)(firstWeek[0]);
    outsideDate.setDate(firstWeek[0].getDate() - 1);
    firstWeek.unshift(outsideDate);
  }

  // push days until the end of the last week
  var lastWeek = weekArray[weekArray.length - 1];
  for (var _i2 = lastWeek.length; _i2 < 7; _i2 += 1) {
    var _outsideDate = (0, _DateUtils.clone)(lastWeek[lastWeek.length - 1]);
    _outsideDate.setDate(lastWeek[lastWeek.length - 1].getDate() + 1);
    lastWeek.push(_outsideDate);
  }

  // add extra weeks to reach 6 weeks
  if (fixedWeeks && weekArray.length < 6) {
    var lastExtraWeek = void 0;

    for (var _i3 = weekArray.length; _i3 < 6; _i3 += 1) {
      lastExtraWeek = weekArray[weekArray.length - 1];
      var lastDay = lastExtraWeek[lastExtraWeek.length - 1];
      var extraWeek = [];

      for (var j = 0; j < 7; j += 1) {
        var _outsideDate2 = (0, _DateUtils.clone)(lastDay);
        _outsideDate2.setDate(lastDay.getDate() + j + 1);
        extraWeek.push(_outsideDate2);
      }

      weekArray.push(extraWeek);
    }
  }

  return weekArray;
}

function startOfMonth(d) {
  var newDate = (0, _DateUtils.clone)(d);
  newDate.setDate(1);
  newDate.setHours(12, 0, 0, 0); // always set noon to avoid time zone issues
  return newDate;
}

function getDayNodes(node, classNames) {
  var outsideClassName = void 0;
  if (classNames === _classNames2.default) {
    // When using CSS modules prefix the modifier as required by the BEM syntax
    outsideClassName = classNames.day + '--' + classNames.outside;
  } else {
    outsideClassName = '' + classNames.outside;
  }
  var dayQuery = classNames.day.replace(/ /g, '.');
  var outsideDayQuery = outsideClassName.replace(/ /g, '.');
  var selector = '.' + dayQuery + ':not(.' + outsideDayQuery + ')';
  return node.querySelectorAll(selector);
}

function nodeListToArray(nodeList) {
  return Array.prototype.slice.call(nodeList, 0);
}

function hasOwnProp(obj, prop) {
  return Object.prototype.hasOwnProperty.call(obj, prop);
}

},{"./DateUtils":63,"./LocaleUtils":67,"./classNames":74}],67:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.formatDay = formatDay;
exports.formatMonthTitle = formatMonthTitle;
exports.formatWeekdayShort = formatWeekdayShort;
exports.formatWeekdayLong = formatWeekdayLong;
exports.getFirstDayOfWeek = getFirstDayOfWeek;
exports.getMonths = getMonths;
var WEEKDAYS_LONG = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];

var WEEKDAYS_SHORT = ['Su', 'Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa'];

var MONTHS = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];

function formatDay(day) {
  return day.toDateString();
}

function formatMonthTitle(d) {
  return MONTHS[d.getMonth()] + ' ' + d.getFullYear();
}

function formatWeekdayShort(i) {
  return WEEKDAYS_SHORT[i];
}

function formatWeekdayLong(i) {
  return WEEKDAYS_LONG[i];
}

function getFirstDayOfWeek() {
  return 0;
}

function getMonths() {
  return MONTHS;
}

exports.default = {
  formatDay: formatDay,
  formatMonthTitle: formatMonthTitle,
  formatWeekdayShort: formatWeekdayShort,
  formatWeekdayLong: formatWeekdayLong,
  getFirstDayOfWeek: getFirstDayOfWeek,
  getMonths: getMonths
};

},{}],68:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.dayMatchesModifier = dayMatchesModifier;
exports.getModifiersForDay = getModifiersForDay;

var _DateUtils = require('./DateUtils');

var _Helpers = require('./Helpers');

/**
 * Return `true` if a date matches the specified modifier.
 *
 * @export
 * @param {Date} day
 * @param {Any} modifier
 * @return {Boolean}
 */
function dayMatchesModifier(day, modifier) {
  if (!modifier) {
    return false;
  }
  var arr = Array.isArray(modifier) ? modifier : [modifier];
  return arr.some(function (mod) {
    if (!mod) {
      return false;
    }
    if (mod instanceof Date) {
      return (0, _DateUtils.isSameDay)(day, mod);
    }
    if ((0, _Helpers.isRangeOfDates)(mod)) {
      return (0, _DateUtils.isDayInRange)(day, mod);
    }
    if (mod.after && mod.before && (0, _DateUtils.isDayAfter)(mod.before, mod.after)) {
      return (0, _DateUtils.isDayAfter)(day, mod.after) && (0, _DateUtils.isDayBefore)(day, mod.before);
    }
    if (mod.after && mod.before && ((0, _DateUtils.isDayAfter)(mod.after, mod.before) || (0, _DateUtils.isSameDay)(mod.after, mod.before))) {
      return (0, _DateUtils.isDayAfter)(day, mod.after) || (0, _DateUtils.isDayBefore)(day, mod.before);
    }
    if (mod.after) {
      return (0, _DateUtils.isDayAfter)(day, mod.after);
    }
    if (mod.before) {
      return (0, _DateUtils.isDayBefore)(day, mod.before);
    }
    if (mod.daysOfWeek) {
      return mod.daysOfWeek.some(function (dayOfWeek) {
        return day.getDay() === dayOfWeek;
      });
    }
    if (typeof mod === 'function') {
      return mod(day);
    }
    return false;
  });
}

/**
 * Return the modifiers matching the given day for the given
 * object of modifiers.
 *
 * @export
 * @param {Date} day
 * @param {Object} [modifiersObj={}]
 * @return {Array}
 */
function getModifiersForDay(day) {
  var modifiersObj = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

  return Object.keys(modifiersObj).reduce(function (modifiers, modifierName) {
    var value = modifiersObj[modifierName];
    if (dayMatchesModifier(day, value)) {
      modifiers.push(modifierName);
    }
    return modifiers;
  }, []);
}

exports.default = { dayMatchesModifier: dayMatchesModifier, getModifiersForDay: getModifiersForDay };

},{"./DateUtils":63,"./Helpers":66}],69:[function(require,module,exports){
(function (process){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _Weekdays = require('./Weekdays');

var _Weekdays2 = _interopRequireDefault(_Weekdays);

var _Day = require('./Day');

var _Day2 = _interopRequireDefault(_Day);

var _keys = require('./keys');

var _ModifiersUtils = require('./ModifiersUtils');

var ModifiersUtils = _interopRequireWildcard(_ModifiersUtils);

var _Helpers = require('./Helpers');

var Helpers = _interopRequireWildcard(_Helpers);

var _DateUtils = require('./DateUtils');

var DateUtils = _interopRequireWildcard(_DateUtils);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Month = function (_Component) {
  _inherits(Month, _Component);

  function Month() {
    var _ref;

    var _temp, _this, _ret;

    _classCallCheck(this, Month);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = Month.__proto__ || Object.getPrototypeOf(Month)).call.apply(_ref, [this].concat(args))), _this), _this.renderDay = function (day) {
      var monthNumber = _this.props.month.getMonth();
      var propModifiers = Helpers.getModifiersFromProps(_this.props);
      var dayModifiers = ModifiersUtils.getModifiersForDay(day, propModifiers);
      if (DateUtils.isSameDay(day, new Date()) && !Object.prototype.hasOwnProperty.call(propModifiers, _this.props.classNames.today)) {
        dayModifiers.push(_this.props.classNames.today);
      }
      if (day.getMonth() !== monthNumber) {
        dayModifiers.push(_this.props.classNames.outside);
      }

      var isOutside = day.getMonth() !== monthNumber;
      var tabIndex = -1;
      // Focus on the first day of the month
      if (_this.props.onDayClick && !isOutside && day.getDate() === 1) {
        tabIndex = _this.props.tabIndex; // eslint-disable-line prefer-destructuring
      }
      var key = '' + day.getFullYear() + day.getMonth() + day.getDate();
      var modifiers = {};
      dayModifiers.forEach(function (modifier) {
        modifiers[modifier] = true;
      });

      return _react2.default.createElement(
        _Day2.default,
        {
          key: '' + (isOutside ? 'outside-' : '') + key,
          classNames: _this.props.classNames,
          day: day,
          modifiers: modifiers,
          modifiersStyles: _this.props.modifiersStyles,
          empty: isOutside && !_this.props.showOutsideDays && !_this.props.fixedWeeks,
          tabIndex: tabIndex,
          ariaLabel: _this.props.localeUtils.formatDay(day, _this.props.locale),
          ariaDisabled: isOutside || dayModifiers.indexOf('disabled') > -1,
          ariaSelected: dayModifiers.indexOf('selected') > -1,
          onClick: _this.props.onDayClick,
          onFocus: _this.props.onDayFocus,
          onKeyDown: _this.props.onDayKeyDown,
          onMouseEnter: _this.props.onDayMouseEnter,
          onMouseLeave: _this.props.onDayMouseLeave,
          onMouseDown: _this.props.onDayMouseDown,
          onMouseUp: _this.props.onDayMouseUp,
          onTouchEnd: _this.props.onDayTouchEnd,
          onTouchStart: _this.props.onDayTouchStart
        },
        _this.props.renderDay(day, modifiers)
      );
    }, _temp), _possibleConstructorReturn(_this, _ret);
  }

  _createClass(Month, [{
    key: 'render',
    value: function render() {
      var _this2 = this;

      var _props = this.props,
          classNames = _props.classNames,
          month = _props.month,
          months = _props.months,
          fixedWeeks = _props.fixedWeeks,
          captionElement = _props.captionElement,
          weekdayElement = _props.weekdayElement,
          locale = _props.locale,
          localeUtils = _props.localeUtils,
          weekdaysLong = _props.weekdaysLong,
          weekdaysShort = _props.weekdaysShort,
          firstDayOfWeek = _props.firstDayOfWeek,
          onCaptionClick = _props.onCaptionClick,
          showWeekNumbers = _props.showWeekNumbers,
          showWeekDays = _props.showWeekDays,
          onWeekClick = _props.onWeekClick;


      var captionProps = {
        date: month,
        classNames: classNames,
        months: months,
        localeUtils: localeUtils,
        locale: locale,
        onClick: onCaptionClick ? function (e) {
          return onCaptionClick(month, e);
        } : undefined
      };
      var caption = _react2.default.isValidElement(captionElement) ? _react2.default.cloneElement(captionElement, captionProps) : _react2.default.createElement(captionElement, captionProps);

      var weeks = Helpers.getWeekArray(month, firstDayOfWeek, fixedWeeks);
      return _react2.default.createElement(
        'div',
        { className: classNames.month, role: 'grid' },
        caption,
        showWeekDays && _react2.default.createElement(_Weekdays2.default, {
          classNames: classNames,
          weekdaysShort: weekdaysShort,
          weekdaysLong: weekdaysLong,
          firstDayOfWeek: firstDayOfWeek,
          showWeekNumbers: showWeekNumbers,
          locale: locale,
          localeUtils: localeUtils,
          weekdayElement: weekdayElement
        }),
        _react2.default.createElement(
          'div',
          { className: classNames.body, role: 'rowgroup' },
          weeks.map(function (week) {
            var weekNumber = void 0;
            if (showWeekNumbers) {
              weekNumber = DateUtils.getWeekNumber(week[6]);
            }
            return _react2.default.createElement(
              'div',
              {
                key: week[0].getTime(),
                className: classNames.week,
                role: 'row'
              },
              showWeekNumbers && _react2.default.createElement(
                'div',
                {
                  className: classNames.weekNumber,
                  tabIndex: onWeekClick ? 0 : -1,
                  role: 'gridcell',
                  onClick: onWeekClick ? function (e) {
                    return onWeekClick(weekNumber, week, e);
                  } : undefined,
                  onKeyUp: onWeekClick ? function (e) {
                    return e.keyCode === _keys.ENTER && onWeekClick(weekNumber, week, e);
                  } : undefined
                },
                _this2.props.renderWeek(weekNumber, week, month)
              ),
              week.map(_this2.renderDay)
            );
          })
        )
      );
    }
  }]);

  return Month;
}(_react.Component);

exports.default = Month;
Month.propTypes = process.env.NODE_ENV !== "production" ? {
  classNames: _propTypes2.default.shape({
    body: _propTypes2.default.string.isRequired,
    month: _propTypes2.default.string.isRequired,
    outside: _propTypes2.default.string.isRequired,
    today: _propTypes2.default.string.isRequired,
    week: _propTypes2.default.string.isRequired
  }).isRequired,
  tabIndex: _propTypes2.default.number,

  month: _propTypes2.default.instanceOf(Date).isRequired,
  months: _propTypes2.default.arrayOf(_propTypes2.default.string),

  modifiersStyles: _propTypes2.default.object,

  showWeekDays: _propTypes2.default.bool,
  showOutsideDays: _propTypes2.default.bool,

  renderDay: _propTypes2.default.func.isRequired,
  renderWeek: _propTypes2.default.func.isRequired,

  captionElement: _propTypes2.default.oneOfType([_propTypes2.default.element, _propTypes2.default.func, _propTypes2.default.instanceOf(_react2.default.Component)]).isRequired,
  weekdayElement: _propTypes2.default.oneOfType([_propTypes2.default.element, _propTypes2.default.func, _propTypes2.default.instanceOf(_react2.default.Component)]),

  fixedWeeks: _propTypes2.default.bool,
  showWeekNumbers: _propTypes2.default.bool,

  locale: _propTypes2.default.string.isRequired,
  localeUtils: _propTypes2.default.object.isRequired,
  weekdaysLong: _propTypes2.default.arrayOf(_propTypes2.default.string),
  weekdaysShort: _propTypes2.default.arrayOf(_propTypes2.default.string),
  firstDayOfWeek: _propTypes2.default.number.isRequired,

  onCaptionClick: _propTypes2.default.func,
  onDayClick: _propTypes2.default.func,
  onDayFocus: _propTypes2.default.func,
  onDayKeyDown: _propTypes2.default.func,
  onDayMouseEnter: _propTypes2.default.func,
  onDayMouseLeave: _propTypes2.default.func,
  onDayMouseDown: _propTypes2.default.func,
  onDayMouseUp: _propTypes2.default.func,
  onDayTouchEnd: _propTypes2.default.func,
  onDayTouchStart: _propTypes2.default.func,
  onWeekClick: _propTypes2.default.func
} : {};

}).call(this,require('_process'))

},{"./DateUtils":63,"./Day":64,"./Helpers":66,"./ModifiersUtils":68,"./Weekdays":73,"./keys":75,"_process":46,"prop-types":50,"react":undefined}],70:[function(require,module,exports){
(function (process){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _classNames = require('./classNames');

var _classNames2 = _interopRequireDefault(_classNames);

var _keys = require('./keys');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Navbar = function (_Component) {
  _inherits(Navbar, _Component);

  function Navbar() {
    var _ref;

    var _temp, _this, _ret;

    _classCallCheck(this, Navbar);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = Navbar.__proto__ || Object.getPrototypeOf(Navbar)).call.apply(_ref, [this].concat(args))), _this), _this.handleNextClick = function () {
      if (_this.props.onNextClick) {
        _this.props.onNextClick();
      }
    }, _this.handlePreviousClick = function () {
      if (_this.props.onPreviousClick) {
        _this.props.onPreviousClick();
      }
    }, _this.handleNextKeyDown = function (e) {
      if (e.keyCode !== _keys.ENTER && e.keyCode !== _keys.SPACE) {
        return;
      }
      e.preventDefault();
      _this.handleNextClick();
    }, _this.handlePreviousKeyDown = function (e) {
      if (e.keyCode !== _keys.ENTER && e.keyCode !== _keys.SPACE) {
        return;
      }
      e.preventDefault();
      _this.handlePreviousClick();
    }, _temp), _possibleConstructorReturn(_this, _ret);
  }

  _createClass(Navbar, [{
    key: 'shouldComponentUpdate',
    value: function shouldComponentUpdate(nextProps) {
      return nextProps.labels !== this.props.labels || nextProps.dir !== this.props.dir || this.props.showPreviousButton !== nextProps.showPreviousButton || this.props.showNextButton !== nextProps.showNextButton;
    }
  }, {
    key: 'render',
    value: function render() {
      var _props = this.props,
          classNames = _props.classNames,
          className = _props.className,
          showPreviousButton = _props.showPreviousButton,
          showNextButton = _props.showNextButton,
          labels = _props.labels,
          dir = _props.dir;


      var previousClickHandler = void 0;
      var nextClickHandler = void 0;
      var previousKeyDownHandler = void 0;
      var nextKeyDownHandler = void 0;
      var shouldShowPrevious = void 0;
      var shouldShowNext = void 0;

      if (dir === 'rtl') {
        previousClickHandler = this.handleNextClick;
        nextClickHandler = this.handlePreviousClick;
        previousKeyDownHandler = this.handleNextKeyDown;
        nextKeyDownHandler = this.handlePreviousKeyDown;
        shouldShowNext = showPreviousButton;
        shouldShowPrevious = showNextButton;
      } else {
        previousClickHandler = this.handlePreviousClick;
        nextClickHandler = this.handleNextClick;
        previousKeyDownHandler = this.handlePreviousKeyDown;
        nextKeyDownHandler = this.handleNextKeyDown;
        shouldShowNext = showNextButton;
        shouldShowPrevious = showPreviousButton;
      }

      var previousClassName = shouldShowPrevious ? classNames.navButtonPrev : classNames.navButtonPrev + ' ' + classNames.navButtonInteractionDisabled;

      var nextClassName = shouldShowNext ? classNames.navButtonNext : classNames.navButtonNext + ' ' + classNames.navButtonInteractionDisabled;

      var previousButton = _react2.default.createElement('span', {
        tabIndex: '0',
        role: 'button',
        'aria-label': labels.previousMonth,
        key: 'previous',
        className: previousClassName,
        onKeyDown: shouldShowPrevious ? previousKeyDownHandler : undefined,
        onClick: shouldShowPrevious ? previousClickHandler : undefined
      });

      var nextButton = _react2.default.createElement('span', {
        tabIndex: '0',
        role: 'button',
        'aria-label': labels.nextMonth,
        key: 'right',
        className: nextClassName,
        onKeyDown: shouldShowNext ? nextKeyDownHandler : undefined,
        onClick: shouldShowNext ? nextClickHandler : undefined
      });

      return _react2.default.createElement(
        'div',
        { className: className || classNames.navBar },
        dir === 'rtl' ? [nextButton, previousButton] : [previousButton, nextButton]
      );
    }
  }]);

  return Navbar;
}(_react.Component);

Navbar.defaultProps = {
  classNames: _classNames2.default,
  dir: 'ltr',
  labels: {
    previousMonth: 'Previous Month',
    nextMonth: 'Next Month'
  },
  showPreviousButton: true,
  showNextButton: true
};
exports.default = Navbar;
Navbar.propTypes = process.env.NODE_ENV !== "production" ? {
  classNames: _propTypes2.default.shape({
    navBar: _propTypes2.default.string.isRequired,
    navButtonPrev: _propTypes2.default.string.isRequired,
    navButtonNext: _propTypes2.default.string.isRequired
  }),
  className: _propTypes2.default.string,
  showPreviousButton: _propTypes2.default.bool,
  showNextButton: _propTypes2.default.bool,
  onPreviousClick: _propTypes2.default.func,
  onNextClick: _propTypes2.default.func,
  dir: _propTypes2.default.string,
  labels: _propTypes2.default.shape({
    previousMonth: _propTypes2.default.string.isRequired,
    nextMonth: _propTypes2.default.string.isRequired
  })
} : {};

}).call(this,require('_process'))

},{"./classNames":74,"./keys":75,"_process":46,"prop-types":50,"react":undefined}],71:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ModifierPropType = undefined;

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var PrimitiveTypes = {
  localeUtils: _propTypes2.default.shape({
    formatMonthTitle: _propTypes2.default.func,
    formatWeekdayShort: _propTypes2.default.func,
    formatWeekdayLong: _propTypes2.default.func,
    getFirstDayOfWeek: _propTypes2.default.func
  }),
  range: _propTypes2.default.shape({
    from: _propTypes2.default.instanceOf(Date),
    to: _propTypes2.default.instanceOf(Date)
  }),
  after: _propTypes2.default.shape({
    after: _propTypes2.default.instanceOf(Date)
  }),
  before: _propTypes2.default.shape({
    before: _propTypes2.default.instanceOf(Date)
  })
};

var ModifierPropType = exports.ModifierPropType = _propTypes2.default.oneOfType([PrimitiveTypes.after, PrimitiveTypes.before, PrimitiveTypes.range, _propTypes2.default.func, _propTypes2.default.array]);

exports.default = PrimitiveTypes;

},{"prop-types":50}],72:[function(require,module,exports){
(function (process){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Weekday = function (_Component) {
  _inherits(Weekday, _Component);

  function Weekday() {
    _classCallCheck(this, Weekday);

    return _possibleConstructorReturn(this, (Weekday.__proto__ || Object.getPrototypeOf(Weekday)).apply(this, arguments));
  }

  _createClass(Weekday, [{
    key: 'shouldComponentUpdate',
    value: function shouldComponentUpdate(nextProps) {
      return this.props !== nextProps;
    }
  }, {
    key: 'render',
    value: function render() {
      var _props = this.props,
          weekday = _props.weekday,
          className = _props.className,
          weekdaysLong = _props.weekdaysLong,
          weekdaysShort = _props.weekdaysShort,
          localeUtils = _props.localeUtils,
          locale = _props.locale;

      var title = void 0;
      if (weekdaysLong) {
        title = weekdaysLong[weekday];
      } else {
        title = localeUtils.formatWeekdayLong(weekday, locale);
      }
      var content = void 0;
      if (weekdaysShort) {
        content = weekdaysShort[weekday];
      } else {
        content = localeUtils.formatWeekdayShort(weekday, locale);
      }

      return _react2.default.createElement(
        'div',
        { className: className, role: 'columnheader' },
        _react2.default.createElement(
          'abbr',
          { title: title },
          content
        )
      );
    }
  }]);

  return Weekday;
}(_react.Component);

exports.default = Weekday;
Weekday.propTypes = process.env.NODE_ENV !== "production" ? {
  weekday: _propTypes2.default.number,
  className: _propTypes2.default.string,
  locale: _propTypes2.default.string,
  localeUtils: _propTypes2.default.object,

  weekdaysLong: _propTypes2.default.arrayOf(_propTypes2.default.string),
  weekdaysShort: _propTypes2.default.arrayOf(_propTypes2.default.string)
} : {};

}).call(this,require('_process'))

},{"_process":46,"prop-types":50,"react":undefined}],73:[function(require,module,exports){
(function (process){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Weekdays = function (_Component) {
  _inherits(Weekdays, _Component);

  function Weekdays() {
    _classCallCheck(this, Weekdays);

    return _possibleConstructorReturn(this, (Weekdays.__proto__ || Object.getPrototypeOf(Weekdays)).apply(this, arguments));
  }

  _createClass(Weekdays, [{
    key: 'shouldComponentUpdate',
    value: function shouldComponentUpdate(nextProps) {
      return this.props !== nextProps;
    }
  }, {
    key: 'render',
    value: function render() {
      var _props = this.props,
          classNames = _props.classNames,
          firstDayOfWeek = _props.firstDayOfWeek,
          showWeekNumbers = _props.showWeekNumbers,
          weekdaysLong = _props.weekdaysLong,
          weekdaysShort = _props.weekdaysShort,
          locale = _props.locale,
          localeUtils = _props.localeUtils,
          weekdayElement = _props.weekdayElement;

      var days = [];
      for (var i = 0; i < 7; i += 1) {
        var weekday = (i + firstDayOfWeek) % 7;
        var elementProps = {
          key: i,
          className: classNames.weekday,
          weekday: weekday,
          weekdaysLong: weekdaysLong,
          weekdaysShort: weekdaysShort,
          localeUtils: localeUtils,
          locale: locale
        };
        var element = _react2.default.isValidElement(weekdayElement) ? _react2.default.cloneElement(weekdayElement, elementProps) : _react2.default.createElement(weekdayElement, elementProps);
        days.push(element);
      }

      return _react2.default.createElement(
        'div',
        { className: classNames.weekdays, role: 'rowgroup' },
        _react2.default.createElement(
          'div',
          { className: classNames.weekdaysRow, role: 'row' },
          showWeekNumbers && _react2.default.createElement('div', { className: classNames.weekday }),
          days
        )
      );
    }
  }]);

  return Weekdays;
}(_react.Component);

exports.default = Weekdays;
Weekdays.propTypes = process.env.NODE_ENV !== "production" ? {
  classNames: _propTypes2.default.shape({
    weekday: _propTypes2.default.string.isRequired,
    weekdays: _propTypes2.default.string.isRequired,
    weekdaysRow: _propTypes2.default.string.isRequired
  }).isRequired,

  firstDayOfWeek: _propTypes2.default.number.isRequired,
  weekdaysLong: _propTypes2.default.arrayOf(_propTypes2.default.string),
  weekdaysShort: _propTypes2.default.arrayOf(_propTypes2.default.string),
  showWeekNumbers: _propTypes2.default.bool,
  locale: _propTypes2.default.string.isRequired,
  localeUtils: _propTypes2.default.object.isRequired,
  weekdayElement: _propTypes2.default.oneOfType([_propTypes2.default.element, _propTypes2.default.func, _propTypes2.default.instanceOf(_react2.default.Component)])
} : {};

}).call(this,require('_process'))

},{"_process":46,"prop-types":50,"react":undefined}],74:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
// Proxy object to map classnames when css modules are not used

exports.default = {
  container: 'DayPicker',
  wrapper: 'DayPicker-wrapper',
  interactionDisabled: 'DayPicker--interactionDisabled',
  months: 'DayPicker-Months',
  month: 'DayPicker-Month',

  navBar: 'DayPicker-NavBar',
  navButtonPrev: 'DayPicker-NavButton DayPicker-NavButton--prev',
  navButtonNext: 'DayPicker-NavButton DayPicker-NavButton--next',
  navButtonInteractionDisabled: 'DayPicker-NavButton--interactionDisabled',

  caption: 'DayPicker-Caption',
  weekdays: 'DayPicker-Weekdays',
  weekdaysRow: 'DayPicker-WeekdaysRow',
  weekday: 'DayPicker-Weekday',
  body: 'DayPicker-Body',
  week: 'DayPicker-Week',
  weekNumber: 'DayPicker-WeekNumber',
  day: 'DayPicker-Day',
  footer: 'DayPicker-Footer',
  todayButton: 'DayPicker-TodayButton',

  // default modifiers
  today: 'today',
  selected: 'selected',
  disabled: 'disabled',
  outside: 'outside'
};

},{}],75:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
var LEFT = exports.LEFT = 37;
var UP = exports.UP = 38;
var RIGHT = exports.RIGHT = 39;
var DOWN = exports.DOWN = 40;
var ENTER = exports.ENTER = 13;
var SPACE = exports.SPACE = 32;
var ESC = exports.ESC = 27;
var TAB = exports.TAB = 9;

},{}],76:[function(require,module,exports){
(function (process){
/** @license React v16.8.6
 * react-is.development.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

'use strict';



if (process.env.NODE_ENV !== "production") {
  (function() {
'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

// The Symbol used to tag the ReactElement-like types. If there is no native Symbol
// nor polyfill, then a plain number is used for performance.
var hasSymbol = typeof Symbol === 'function' && Symbol.for;

var REACT_ELEMENT_TYPE = hasSymbol ? Symbol.for('react.element') : 0xeac7;
var REACT_PORTAL_TYPE = hasSymbol ? Symbol.for('react.portal') : 0xeaca;
var REACT_FRAGMENT_TYPE = hasSymbol ? Symbol.for('react.fragment') : 0xeacb;
var REACT_STRICT_MODE_TYPE = hasSymbol ? Symbol.for('react.strict_mode') : 0xeacc;
var REACT_PROFILER_TYPE = hasSymbol ? Symbol.for('react.profiler') : 0xead2;
var REACT_PROVIDER_TYPE = hasSymbol ? Symbol.for('react.provider') : 0xeacd;
var REACT_CONTEXT_TYPE = hasSymbol ? Symbol.for('react.context') : 0xeace;
var REACT_ASYNC_MODE_TYPE = hasSymbol ? Symbol.for('react.async_mode') : 0xeacf;
var REACT_CONCURRENT_MODE_TYPE = hasSymbol ? Symbol.for('react.concurrent_mode') : 0xeacf;
var REACT_FORWARD_REF_TYPE = hasSymbol ? Symbol.for('react.forward_ref') : 0xead0;
var REACT_SUSPENSE_TYPE = hasSymbol ? Symbol.for('react.suspense') : 0xead1;
var REACT_MEMO_TYPE = hasSymbol ? Symbol.for('react.memo') : 0xead3;
var REACT_LAZY_TYPE = hasSymbol ? Symbol.for('react.lazy') : 0xead4;

function isValidElementType(type) {
  return typeof type === 'string' || typeof type === 'function' ||
  // Note: its typeof might be other than 'symbol' or 'number' if it's a polyfill.
  type === REACT_FRAGMENT_TYPE || type === REACT_CONCURRENT_MODE_TYPE || type === REACT_PROFILER_TYPE || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || typeof type === 'object' && type !== null && (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE);
}

/**
 * Forked from fbjs/warning:
 * https://github.com/facebook/fbjs/blob/e66ba20ad5be433eb54423f2b097d829324d9de6/packages/fbjs/src/__forks__/warning.js
 *
 * Only change is we use console.warn instead of console.error,
 * and do nothing when 'console' is not supported.
 * This really simplifies the code.
 * ---
 * Similar to invariant but only logs a warning if the condition is not met.
 * This can be used to log issues in development environments in critical
 * paths. Removing the logging code for production environments will keep the
 * same logic and follow the same code paths.
 */

var lowPriorityWarning = function () {};

{
  var printWarning = function (format) {
    for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
      args[_key - 1] = arguments[_key];
    }

    var argIndex = 0;
    var message = 'Warning: ' + format.replace(/%s/g, function () {
      return args[argIndex++];
    });
    if (typeof console !== 'undefined') {
      console.warn(message);
    }
    try {
      // --- Welcome to debugging React ---
      // This error was thrown as a convenience so that you can use this stack
      // to find the callsite that caused this warning to fire.
      throw new Error(message);
    } catch (x) {}
  };

  lowPriorityWarning = function (condition, format) {
    if (format === undefined) {
      throw new Error('`lowPriorityWarning(condition, format, ...args)` requires a warning ' + 'message argument');
    }
    if (!condition) {
      for (var _len2 = arguments.length, args = Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {
        args[_key2 - 2] = arguments[_key2];
      }

      printWarning.apply(undefined, [format].concat(args));
    }
  };
}

var lowPriorityWarning$1 = lowPriorityWarning;

function typeOf(object) {
  if (typeof object === 'object' && object !== null) {
    var $$typeof = object.$$typeof;
    switch ($$typeof) {
      case REACT_ELEMENT_TYPE:
        var type = object.type;

        switch (type) {
          case REACT_ASYNC_MODE_TYPE:
          case REACT_CONCURRENT_MODE_TYPE:
          case REACT_FRAGMENT_TYPE:
          case REACT_PROFILER_TYPE:
          case REACT_STRICT_MODE_TYPE:
          case REACT_SUSPENSE_TYPE:
            return type;
          default:
            var $$typeofType = type && type.$$typeof;

            switch ($$typeofType) {
              case REACT_CONTEXT_TYPE:
              case REACT_FORWARD_REF_TYPE:
              case REACT_PROVIDER_TYPE:
                return $$typeofType;
              default:
                return $$typeof;
            }
        }
      case REACT_LAZY_TYPE:
      case REACT_MEMO_TYPE:
      case REACT_PORTAL_TYPE:
        return $$typeof;
    }
  }

  return undefined;
}

// AsyncMode is deprecated along with isAsyncMode
var AsyncMode = REACT_ASYNC_MODE_TYPE;
var ConcurrentMode = REACT_CONCURRENT_MODE_TYPE;
var ContextConsumer = REACT_CONTEXT_TYPE;
var ContextProvider = REACT_PROVIDER_TYPE;
var Element = REACT_ELEMENT_TYPE;
var ForwardRef = REACT_FORWARD_REF_TYPE;
var Fragment = REACT_FRAGMENT_TYPE;
var Lazy = REACT_LAZY_TYPE;
var Memo = REACT_MEMO_TYPE;
var Portal = REACT_PORTAL_TYPE;
var Profiler = REACT_PROFILER_TYPE;
var StrictMode = REACT_STRICT_MODE_TYPE;
var Suspense = REACT_SUSPENSE_TYPE;

var hasWarnedAboutDeprecatedIsAsyncMode = false;

// AsyncMode should be deprecated
function isAsyncMode(object) {
  {
    if (!hasWarnedAboutDeprecatedIsAsyncMode) {
      hasWarnedAboutDeprecatedIsAsyncMode = true;
      lowPriorityWarning$1(false, 'The ReactIs.isAsyncMode() alias has been deprecated, ' + 'and will be removed in React 17+. Update your code to use ' + 'ReactIs.isConcurrentMode() instead. It has the exact same API.');
    }
  }
  return isConcurrentMode(object) || typeOf(object) === REACT_ASYNC_MODE_TYPE;
}
function isConcurrentMode(object) {
  return typeOf(object) === REACT_CONCURRENT_MODE_TYPE;
}
function isContextConsumer(object) {
  return typeOf(object) === REACT_CONTEXT_TYPE;
}
function isContextProvider(object) {
  return typeOf(object) === REACT_PROVIDER_TYPE;
}
function isElement(object) {
  return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;
}
function isForwardRef(object) {
  return typeOf(object) === REACT_FORWARD_REF_TYPE;
}
function isFragment(object) {
  return typeOf(object) === REACT_FRAGMENT_TYPE;
}
function isLazy(object) {
  return typeOf(object) === REACT_LAZY_TYPE;
}
function isMemo(object) {
  return typeOf(object) === REACT_MEMO_TYPE;
}
function isPortal(object) {
  return typeOf(object) === REACT_PORTAL_TYPE;
}
function isProfiler(object) {
  return typeOf(object) === REACT_PROFILER_TYPE;
}
function isStrictMode(object) {
  return typeOf(object) === REACT_STRICT_MODE_TYPE;
}
function isSuspense(object) {
  return typeOf(object) === REACT_SUSPENSE_TYPE;
}

exports.typeOf = typeOf;
exports.AsyncMode = AsyncMode;
exports.ConcurrentMode = ConcurrentMode;
exports.ContextConsumer = ContextConsumer;
exports.ContextProvider = ContextProvider;
exports.Element = Element;
exports.ForwardRef = ForwardRef;
exports.Fragment = Fragment;
exports.Lazy = Lazy;
exports.Memo = Memo;
exports.Portal = Portal;
exports.Profiler = Profiler;
exports.StrictMode = StrictMode;
exports.Suspense = Suspense;
exports.isValidElementType = isValidElementType;
exports.isAsyncMode = isAsyncMode;
exports.isConcurrentMode = isConcurrentMode;
exports.isContextConsumer = isContextConsumer;
exports.isContextProvider = isContextProvider;
exports.isElement = isElement;
exports.isForwardRef = isForwardRef;
exports.isFragment = isFragment;
exports.isLazy = isLazy;
exports.isMemo = isMemo;
exports.isPortal = isPortal;
exports.isProfiler = isProfiler;
exports.isStrictMode = isStrictMode;
exports.isSuspense = isSuspense;
  })();
}

}).call(this,require('_process'))

},{"_process":46}],77:[function(require,module,exports){
/** @license React v16.8.6
 * react-is.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

'use strict';Object.defineProperty(exports,"__esModule",{value:!0});
var b="function"===typeof Symbol&&Symbol.for,c=b?Symbol.for("react.element"):60103,d=b?Symbol.for("react.portal"):60106,e=b?Symbol.for("react.fragment"):60107,f=b?Symbol.for("react.strict_mode"):60108,g=b?Symbol.for("react.profiler"):60114,h=b?Symbol.for("react.provider"):60109,k=b?Symbol.for("react.context"):60110,l=b?Symbol.for("react.async_mode"):60111,m=b?Symbol.for("react.concurrent_mode"):60111,n=b?Symbol.for("react.forward_ref"):60112,p=b?Symbol.for("react.suspense"):60113,q=b?Symbol.for("react.memo"):
60115,r=b?Symbol.for("react.lazy"):60116;function t(a){if("object"===typeof a&&null!==a){var u=a.$$typeof;switch(u){case c:switch(a=a.type,a){case l:case m:case e:case g:case f:case p:return a;default:switch(a=a&&a.$$typeof,a){case k:case n:case h:return a;default:return u}}case r:case q:case d:return u}}}function v(a){return t(a)===m}exports.typeOf=t;exports.AsyncMode=l;exports.ConcurrentMode=m;exports.ContextConsumer=k;exports.ContextProvider=h;exports.Element=c;exports.ForwardRef=n;
exports.Fragment=e;exports.Lazy=r;exports.Memo=q;exports.Portal=d;exports.Profiler=g;exports.StrictMode=f;exports.Suspense=p;exports.isValidElementType=function(a){return"string"===typeof a||"function"===typeof a||a===e||a===m||a===g||a===f||a===p||"object"===typeof a&&null!==a&&(a.$$typeof===r||a.$$typeof===q||a.$$typeof===h||a.$$typeof===k||a.$$typeof===n)};exports.isAsyncMode=function(a){return v(a)||t(a)===l};exports.isConcurrentMode=v;exports.isContextConsumer=function(a){return t(a)===k};
exports.isContextProvider=function(a){return t(a)===h};exports.isElement=function(a){return"object"===typeof a&&null!==a&&a.$$typeof===c};exports.isForwardRef=function(a){return t(a)===n};exports.isFragment=function(a){return t(a)===e};exports.isLazy=function(a){return t(a)===r};exports.isMemo=function(a){return t(a)===q};exports.isPortal=function(a){return t(a)===d};exports.isProfiler=function(a){return t(a)===g};exports.isStrictMode=function(a){return t(a)===f};
exports.isSuspense=function(a){return t(a)===p};

},{}],78:[function(require,module,exports){
(function (process){
'use strict';

if (process.env.NODE_ENV === 'production') {
  module.exports = require('./cjs/react-is.production.min.js');
} else {
  module.exports = require('./cjs/react-is.development.js');
}

}).call(this,require('_process'))

},{"./cjs/react-is.development.js":76,"./cjs/react-is.production.min.js":77,"_process":46}],79:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

function componentWillMount() {
  // Call this.constructor.gDSFP to support sub-classes.
  var state = this.constructor.getDerivedStateFromProps(this.props, this.state);
  if (state !== null && state !== undefined) {
    this.setState(state);
  }
}

function componentWillReceiveProps(nextProps) {
  // Call this.constructor.gDSFP to support sub-classes.
  // Use the setState() updater to ensure state isn't stale in certain edge cases.
  function updater(prevState) {
    var state = this.constructor.getDerivedStateFromProps(nextProps, prevState);
    return state !== null && state !== undefined ? state : null;
  }
  // Binding "this" is important for shallow renderer support.
  this.setState(updater.bind(this));
}

function componentWillUpdate(nextProps, nextState) {
  try {
    var prevProps = this.props;
    var prevState = this.state;
    this.props = nextProps;
    this.state = nextState;
    this.__reactInternalSnapshotFlag = true;
    this.__reactInternalSnapshot = this.getSnapshotBeforeUpdate(
      prevProps,
      prevState
    );
  } finally {
    this.props = prevProps;
    this.state = prevState;
  }
}

// React may warn about cWM/cWRP/cWU methods being deprecated.
// Add a flag to suppress these warnings for this special case.
componentWillMount.__suppressDeprecationWarning = true;
componentWillReceiveProps.__suppressDeprecationWarning = true;
componentWillUpdate.__suppressDeprecationWarning = true;

function polyfill(Component) {
  var prototype = Component.prototype;

  if (!prototype || !prototype.isReactComponent) {
    throw new Error('Can only polyfill class components');
  }

  if (
    typeof Component.getDerivedStateFromProps !== 'function' &&
    typeof prototype.getSnapshotBeforeUpdate !== 'function'
  ) {
    return Component;
  }

  // If new component APIs are defined, "unsafe" lifecycles won't be called.
  // Error if any of these lifecycles are present,
  // Because they would work differently between older and newer (16.3+) versions of React.
  var foundWillMountName = null;
  var foundWillReceivePropsName = null;
  var foundWillUpdateName = null;
  if (typeof prototype.componentWillMount === 'function') {
    foundWillMountName = 'componentWillMount';
  } else if (typeof prototype.UNSAFE_componentWillMount === 'function') {
    foundWillMountName = 'UNSAFE_componentWillMount';
  }
  if (typeof prototype.componentWillReceiveProps === 'function') {
    foundWillReceivePropsName = 'componentWillReceiveProps';
  } else if (typeof prototype.UNSAFE_componentWillReceiveProps === 'function') {
    foundWillReceivePropsName = 'UNSAFE_componentWillReceiveProps';
  }
  if (typeof prototype.componentWillUpdate === 'function') {
    foundWillUpdateName = 'componentWillUpdate';
  } else if (typeof prototype.UNSAFE_componentWillUpdate === 'function') {
    foundWillUpdateName = 'UNSAFE_componentWillUpdate';
  }
  if (
    foundWillMountName !== null ||
    foundWillReceivePropsName !== null ||
    foundWillUpdateName !== null
  ) {
    var componentName = Component.displayName || Component.name;
    var newApiName =
      typeof Component.getDerivedStateFromProps === 'function'
        ? 'getDerivedStateFromProps()'
        : 'getSnapshotBeforeUpdate()';

    throw Error(
      'Unsafe legacy lifecycles will not be called for components using new component APIs.\n\n' +
        componentName +
        ' uses ' +
        newApiName +
        ' but also contains the following legacy lifecycles:' +
        (foundWillMountName !== null ? '\n  ' + foundWillMountName : '') +
        (foundWillReceivePropsName !== null
          ? '\n  ' + foundWillReceivePropsName
          : '') +
        (foundWillUpdateName !== null ? '\n  ' + foundWillUpdateName : '') +
        '\n\nThe above lifecycles should be removed. Learn more about this warning here:\n' +
        'https://fb.me/react-async-component-lifecycle-hooks'
    );
  }

  // React <= 16.2 does not support static getDerivedStateFromProps.
  // As a workaround, use cWM and cWRP to invoke the new static lifecycle.
  // Newer versions of React will ignore these lifecycles if gDSFP exists.
  if (typeof Component.getDerivedStateFromProps === 'function') {
    prototype.componentWillMount = componentWillMount;
    prototype.componentWillReceiveProps = componentWillReceiveProps;
  }

  // React <= 16.2 does not support getSnapshotBeforeUpdate.
  // As a workaround, use cWU to invoke the new lifecycle.
  // Newer versions of React will ignore that lifecycle if gSBU exists.
  if (typeof prototype.getSnapshotBeforeUpdate === 'function') {
    if (typeof prototype.componentDidUpdate !== 'function') {
      throw new Error(
        'Cannot polyfill getSnapshotBeforeUpdate() for components that do not define componentDidUpdate() on the prototype'
      );
    }

    prototype.componentWillUpdate = componentWillUpdate;

    var componentDidUpdate = prototype.componentDidUpdate;

    prototype.componentDidUpdate = function componentDidUpdatePolyfill(
      prevProps,
      prevState,
      maybeSnapshot
    ) {
      // 16.3+ will not execute our will-update method;
      // It will pass a snapshot value to did-update though.
      // Older versions will require our polyfilled will-update value.
      // We need to handle both cases, but can't just check for the presence of "maybeSnapshot",
      // Because for <= 15.x versions this might be a "prevContext" object.
      // We also can't just check "__reactInternalSnapshot",
      // Because get-snapshot might return a falsy value.
      // So check for the explicit __reactInternalSnapshotFlag flag to determine behavior.
      var snapshot = this.__reactInternalSnapshotFlag
        ? this.__reactInternalSnapshot
        : maybeSnapshot;

      componentDidUpdate.call(this, prevProps, prevState, snapshot);
    };
  }

  return Component;
}

exports.polyfill = polyfill;

},{}],80:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.bodyOpenClassName = exports.portalClassName = undefined;

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require("react");

var _react2 = _interopRequireDefault(_react);

var _reactDom = require("react-dom");

var _reactDom2 = _interopRequireDefault(_reactDom);

var _propTypes = require("prop-types");

var _propTypes2 = _interopRequireDefault(_propTypes);

var _ModalPortal = require("./ModalPortal");

var _ModalPortal2 = _interopRequireDefault(_ModalPortal);

var _ariaAppHider = require("../helpers/ariaAppHider");

var ariaAppHider = _interopRequireWildcard(_ariaAppHider);

var _safeHTMLElement = require("../helpers/safeHTMLElement");

var _safeHTMLElement2 = _interopRequireDefault(_safeHTMLElement);

var _reactLifecyclesCompat = require("react-lifecycles-compat");

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var portalClassName = exports.portalClassName = "ReactModalPortal";
var bodyOpenClassName = exports.bodyOpenClassName = "ReactModal__Body--open";

var isReact16 = _reactDom2.default.createPortal !== undefined;

var getCreatePortal = function getCreatePortal() {
  return isReact16 ? _reactDom2.default.createPortal : _reactDom2.default.unstable_renderSubtreeIntoContainer;
};

function getParentElement(parentSelector) {
  return parentSelector();
}

var Modal = function (_Component) {
  _inherits(Modal, _Component);

  function Modal() {
    var _ref;

    var _temp, _this, _ret;

    _classCallCheck(this, Modal);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = Modal.__proto__ || Object.getPrototypeOf(Modal)).call.apply(_ref, [this].concat(args))), _this), _this.removePortal = function () {
      !isReact16 && _reactDom2.default.unmountComponentAtNode(_this.node);
      var parent = getParentElement(_this.props.parentSelector);
      parent.removeChild(_this.node);
    }, _this.portalRef = function (ref) {
      _this.portal = ref;
    }, _this.renderPortal = function (props) {
      var createPortal = getCreatePortal();
      var portal = createPortal(_this, _react2.default.createElement(_ModalPortal2.default, _extends({ defaultStyles: Modal.defaultStyles }, props)), _this.node);
      _this.portalRef(portal);
    }, _temp), _possibleConstructorReturn(_this, _ret);
  }

  _createClass(Modal, [{
    key: "componentDidMount",
    value: function componentDidMount() {
      if (!_safeHTMLElement.canUseDOM) return;

      if (!isReact16) {
        this.node = document.createElement("div");
      }
      this.node.className = this.props.portalClassName;

      var parent = getParentElement(this.props.parentSelector);
      parent.appendChild(this.node);

      !isReact16 && this.renderPortal(this.props);
    }
  }, {
    key: "getSnapshotBeforeUpdate",
    value: function getSnapshotBeforeUpdate(prevProps) {
      var prevParent = getParentElement(prevProps.parentSelector);
      var nextParent = getParentElement(this.props.parentSelector);
      return { prevParent: prevParent, nextParent: nextParent };
    }
  }, {
    key: "componentDidUpdate",
    value: function componentDidUpdate(prevProps, _, snapshot) {
      if (!_safeHTMLElement.canUseDOM) return;
      var _props = this.props,
          isOpen = _props.isOpen,
          portalClassName = _props.portalClassName;


      if (prevProps.portalClassName !== portalClassName) {
        this.node.className = portalClassName;
      }

      var prevParent = snapshot.prevParent,
          nextParent = snapshot.nextParent;

      if (nextParent !== prevParent) {
        prevParent.removeChild(this.node);
        nextParent.appendChild(this.node);
      }

      // Stop unnecessary renders if modal is remaining closed
      if (!prevProps.isOpen && !isOpen) return;

      !isReact16 && this.renderPortal(this.props);
    }
  }, {
    key: "componentWillUnmount",
    value: function componentWillUnmount() {
      if (!_safeHTMLElement.canUseDOM || !this.node || !this.portal) return;

      var state = this.portal.state;
      var now = Date.now();
      var closesAt = state.isOpen && this.props.closeTimeoutMS && (state.closesAt || now + this.props.closeTimeoutMS);

      if (closesAt) {
        if (!state.beforeClose) {
          this.portal.closeWithTimeout();
        }

        setTimeout(this.removePortal, closesAt - now);
      } else {
        this.removePortal();
      }
    }
  }, {
    key: "render",
    value: function render() {
      if (!_safeHTMLElement.canUseDOM || !isReact16) {
        return null;
      }

      if (!this.node && isReact16) {
        this.node = document.createElement("div");
      }

      var createPortal = getCreatePortal();
      return createPortal(_react2.default.createElement(_ModalPortal2.default, _extends({
        ref: this.portalRef,
        defaultStyles: Modal.defaultStyles
      }, this.props)), this.node);
    }
  }], [{
    key: "setAppElement",
    value: function setAppElement(element) {
      ariaAppHider.setElement(element);
    }

    /* eslint-disable react/no-unused-prop-types */

    /* eslint-enable react/no-unused-prop-types */

  }]);

  return Modal;
}(_react.Component);

Modal.propTypes = {
  isOpen: _propTypes2.default.bool.isRequired,
  style: _propTypes2.default.shape({
    content: _propTypes2.default.object,
    overlay: _propTypes2.default.object
  }),
  portalClassName: _propTypes2.default.string,
  bodyOpenClassName: _propTypes2.default.string,
  htmlOpenClassName: _propTypes2.default.string,
  className: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.shape({
    base: _propTypes2.default.string.isRequired,
    afterOpen: _propTypes2.default.string.isRequired,
    beforeClose: _propTypes2.default.string.isRequired
  })]),
  overlayClassName: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.shape({
    base: _propTypes2.default.string.isRequired,
    afterOpen: _propTypes2.default.string.isRequired,
    beforeClose: _propTypes2.default.string.isRequired
  })]),
  appElement: _propTypes2.default.instanceOf(_safeHTMLElement2.default),
  onAfterOpen: _propTypes2.default.func,
  onRequestClose: _propTypes2.default.func,
  closeTimeoutMS: _propTypes2.default.number,
  ariaHideApp: _propTypes2.default.bool,
  shouldFocusAfterRender: _propTypes2.default.bool,
  shouldCloseOnOverlayClick: _propTypes2.default.bool,
  shouldReturnFocusAfterClose: _propTypes2.default.bool,
  parentSelector: _propTypes2.default.func,
  aria: _propTypes2.default.object,
  data: _propTypes2.default.object,
  role: _propTypes2.default.string,
  contentLabel: _propTypes2.default.string,
  shouldCloseOnEsc: _propTypes2.default.bool,
  overlayRef: _propTypes2.default.func,
  contentRef: _propTypes2.default.func
};
Modal.defaultProps = {
  isOpen: false,
  portalClassName: portalClassName,
  bodyOpenClassName: bodyOpenClassName,
  role: "dialog",
  ariaHideApp: true,
  closeTimeoutMS: 0,
  shouldFocusAfterRender: true,
  shouldCloseOnEsc: true,
  shouldCloseOnOverlayClick: true,
  shouldReturnFocusAfterClose: true,
  parentSelector: function parentSelector() {
    return document.body;
  }
};
Modal.defaultStyles = {
  overlay: {
    position: "fixed",
    top: 0,
    left: 0,
    right: 0,
    bottom: 0,
    backgroundColor: "rgba(255, 255, 255, 0.75)"
  },
  content: {
    position: "absolute",
    top: "40px",
    left: "40px",
    right: "40px",
    bottom: "40px",
    border: "1px solid #ccc",
    background: "#fff",
    overflow: "auto",
    WebkitOverflowScrolling: "touch",
    borderRadius: "4px",
    outline: "none",
    padding: "20px"
  }
};


(0, _reactLifecyclesCompat.polyfill)(Modal);

exports.default = Modal;
},{"../helpers/ariaAppHider":82,"../helpers/safeHTMLElement":85,"./ModalPortal":81,"prop-types":50,"react":undefined,"react-dom":undefined,"react-lifecycles-compat":79}],81:[function(require,module,exports){
(function (process){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require("react");

var _react2 = _interopRequireDefault(_react);

var _propTypes = require("prop-types");

var _propTypes2 = _interopRequireDefault(_propTypes);

var _focusManager = require("../helpers/focusManager");

var focusManager = _interopRequireWildcard(_focusManager);

var _scopeTab = require("../helpers/scopeTab");

var _scopeTab2 = _interopRequireDefault(_scopeTab);

var _ariaAppHider = require("../helpers/ariaAppHider");

var ariaAppHider = _interopRequireWildcard(_ariaAppHider);

var _classList = require("../helpers/classList");

var classList = _interopRequireWildcard(_classList);

var _safeHTMLElement = require("../helpers/safeHTMLElement");

var _safeHTMLElement2 = _interopRequireDefault(_safeHTMLElement);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

// so that our CSS is statically analyzable
var CLASS_NAMES = {
  overlay: "ReactModal__Overlay",
  content: "ReactModal__Content"
};

var TAB_KEY = 9;
var ESC_KEY = 27;

var ariaHiddenInstances = 0;

var ModalPortal = function (_Component) {
  _inherits(ModalPortal, _Component);

  function ModalPortal(props) {
    _classCallCheck(this, ModalPortal);

    var _this = _possibleConstructorReturn(this, (ModalPortal.__proto__ || Object.getPrototypeOf(ModalPortal)).call(this, props));

    _this.setOverlayRef = function (overlay) {
      _this.overlay = overlay;
      _this.props.overlayRef && _this.props.overlayRef(overlay);
    };

    _this.setContentRef = function (content) {
      _this.content = content;
      _this.props.contentRef && _this.props.contentRef(content);
    };

    _this.afterClose = function () {
      var _this$props = _this.props,
          appElement = _this$props.appElement,
          ariaHideApp = _this$props.ariaHideApp,
          htmlOpenClassName = _this$props.htmlOpenClassName,
          bodyOpenClassName = _this$props.bodyOpenClassName;

      // Remove classes.

      bodyOpenClassName && classList.remove(document.body, bodyOpenClassName);

      htmlOpenClassName && classList.remove(document.getElementsByTagName("html")[0], htmlOpenClassName);

      // Reset aria-hidden attribute if all modals have been removed
      if (ariaHideApp && ariaHiddenInstances > 0) {
        ariaHiddenInstances -= 1;

        if (ariaHiddenInstances === 0) {
          ariaAppHider.show(appElement);
        }
      }

      if (_this.props.shouldFocusAfterRender) {
        if (_this.props.shouldReturnFocusAfterClose) {
          focusManager.returnFocus();
          focusManager.teardownScopedFocus();
        } else {
          focusManager.popWithoutFocus();
        }
      }

      if (_this.props.onAfterClose) {
        _this.props.onAfterClose();
      }
    };

    _this.open = function () {
      _this.beforeOpen();
      if (_this.state.afterOpen && _this.state.beforeClose) {
        clearTimeout(_this.closeTimer);
        _this.setState({ beforeClose: false });
      } else {
        if (_this.props.shouldFocusAfterRender) {
          focusManager.setupScopedFocus(_this.node);
          focusManager.markForFocusLater();
        }

        _this.setState({ isOpen: true }, function () {
          _this.setState({ afterOpen: true });

          if (_this.props.isOpen && _this.props.onAfterOpen) {
            _this.props.onAfterOpen();
          }
        });
      }
    };

    _this.close = function () {
      if (_this.props.closeTimeoutMS > 0) {
        _this.closeWithTimeout();
      } else {
        _this.closeWithoutTimeout();
      }
    };

    _this.focusContent = function () {
      return _this.content && !_this.contentHasFocus() && _this.content.focus();
    };

    _this.closeWithTimeout = function () {
      var closesAt = Date.now() + _this.props.closeTimeoutMS;
      _this.setState({ beforeClose: true, closesAt: closesAt }, function () {
        _this.closeTimer = setTimeout(_this.closeWithoutTimeout, _this.state.closesAt - Date.now());
      });
    };

    _this.closeWithoutTimeout = function () {
      _this.setState({
        beforeClose: false,
        isOpen: false,
        afterOpen: false,
        closesAt: null
      }, _this.afterClose);
    };

    _this.handleKeyDown = function (event) {
      if (event.keyCode === TAB_KEY) {
        (0, _scopeTab2.default)(_this.content, event);
      }

      if (_this.props.shouldCloseOnEsc && event.keyCode === ESC_KEY) {
        event.stopPropagation();
        _this.requestClose(event);
      }
    };

    _this.handleOverlayOnClick = function (event) {
      if (_this.shouldClose === null) {
        _this.shouldClose = true;
      }

      if (_this.shouldClose && _this.props.shouldCloseOnOverlayClick) {
        if (_this.ownerHandlesClose()) {
          _this.requestClose(event);
        } else {
          _this.focusContent();
        }
      }
      _this.shouldClose = null;
    };

    _this.handleContentOnMouseUp = function () {
      _this.shouldClose = false;
    };

    _this.handleOverlayOnMouseDown = function (event) {
      if (!_this.props.shouldCloseOnOverlayClick && event.target == _this.overlay) {
        event.preventDefault();
      }
    };

    _this.handleContentOnClick = function () {
      _this.shouldClose = false;
    };

    _this.handleContentOnMouseDown = function () {
      _this.shouldClose = false;
    };

    _this.requestClose = function (event) {
      return _this.ownerHandlesClose() && _this.props.onRequestClose(event);
    };

    _this.ownerHandlesClose = function () {
      return _this.props.onRequestClose;
    };

    _this.shouldBeClosed = function () {
      return !_this.state.isOpen && !_this.state.beforeClose;
    };

    _this.contentHasFocus = function () {
      return document.activeElement === _this.content || _this.content.contains(document.activeElement);
    };

    _this.buildClassName = function (which, additional) {
      var classNames = (typeof additional === "undefined" ? "undefined" : _typeof(additional)) === "object" ? additional : {
        base: CLASS_NAMES[which],
        afterOpen: CLASS_NAMES[which] + "--after-open",
        beforeClose: CLASS_NAMES[which] + "--before-close"
      };
      var className = classNames.base;
      if (_this.state.afterOpen) {
        className = className + " " + classNames.afterOpen;
      }
      if (_this.state.beforeClose) {
        className = className + " " + classNames.beforeClose;
      }
      return typeof additional === "string" && additional ? className + " " + additional : className;
    };

    _this.attributesFromObject = function (prefix, items) {
      return Object.keys(items).reduce(function (acc, name) {
        acc[prefix + "-" + name] = items[name];
        return acc;
      }, {});
    };

    _this.state = {
      afterOpen: false,
      beforeClose: false
    };

    _this.shouldClose = null;
    _this.moveFromContentToOverlay = null;
    return _this;
  }

  _createClass(ModalPortal, [{
    key: "componentDidMount",
    value: function componentDidMount() {
      if (this.props.isOpen) {
        this.open();
      }
    }
  }, {
    key: "componentDidUpdate",
    value: function componentDidUpdate(prevProps, prevState) {
      if (process.env.NODE_ENV !== "production") {
        if (prevProps.bodyOpenClassName !== this.props.bodyOpenClassName) {
          // eslint-disable-next-line no-console
          console.warn('React-Modal: "bodyOpenClassName" prop has been modified. ' + "This may cause unexpected behavior when multiple modals are open.");
        }
        if (prevProps.htmlOpenClassName !== this.props.htmlOpenClassName) {
          // eslint-disable-next-line no-console
          console.warn('React-Modal: "htmlOpenClassName" prop has been modified. ' + "This may cause unexpected behavior when multiple modals are open.");
        }
      }

      if (this.props.isOpen && !prevProps.isOpen) {
        this.open();
      } else if (!this.props.isOpen && prevProps.isOpen) {
        this.close();
      }

      // Focus only needs to be set once when the modal is being opened
      if (this.props.shouldFocusAfterRender && this.state.isOpen && !prevState.isOpen) {
        this.focusContent();
      }
    }
  }, {
    key: "componentWillUnmount",
    value: function componentWillUnmount() {
      this.afterClose();
      clearTimeout(this.closeTimer);
    }
  }, {
    key: "beforeOpen",
    value: function beforeOpen() {
      var _props = this.props,
          appElement = _props.appElement,
          ariaHideApp = _props.ariaHideApp,
          htmlOpenClassName = _props.htmlOpenClassName,
          bodyOpenClassName = _props.bodyOpenClassName;

      // Add classes.

      bodyOpenClassName && classList.add(document.body, bodyOpenClassName);

      htmlOpenClassName && classList.add(document.getElementsByTagName("html")[0], htmlOpenClassName);

      if (ariaHideApp) {
        ariaHiddenInstances += 1;
        ariaAppHider.hide(appElement);
      }
    }

    // Don't steal focus from inner elements

  }, {
    key: "render",
    value: function render() {
      var _props2 = this.props,
          className = _props2.className,
          overlayClassName = _props2.overlayClassName,
          defaultStyles = _props2.defaultStyles;

      var contentStyles = className ? {} : defaultStyles.content;
      var overlayStyles = overlayClassName ? {} : defaultStyles.overlay;

      return this.shouldBeClosed() ? null : _react2.default.createElement(
        "div",
        {
          ref: this.setOverlayRef,
          className: this.buildClassName("overlay", overlayClassName),
          style: _extends({}, overlayStyles, this.props.style.overlay),
          onClick: this.handleOverlayOnClick,
          onMouseDown: this.handleOverlayOnMouseDown
        },
        _react2.default.createElement(
          "div",
          _extends({
            ref: this.setContentRef,
            style: _extends({}, contentStyles, this.props.style.content),
            className: this.buildClassName("content", className),
            tabIndex: "-1",
            onKeyDown: this.handleKeyDown,
            onMouseDown: this.handleContentOnMouseDown,
            onMouseUp: this.handleContentOnMouseUp,
            onClick: this.handleContentOnClick,
            role: this.props.role,
            "aria-label": this.props.contentLabel
          }, this.attributesFromObject("aria", this.props.aria || {}), this.attributesFromObject("data", this.props.data || {}), {
            "data-testid": this.props.testId
          }),
          this.props.children
        )
      );
    }
  }]);

  return ModalPortal;
}(_react.Component);

ModalPortal.defaultProps = {
  style: {
    overlay: {},
    content: {}
  },
  defaultStyles: {}
};
ModalPortal.propTypes = {
  isOpen: _propTypes2.default.bool.isRequired,
  defaultStyles: _propTypes2.default.shape({
    content: _propTypes2.default.object,
    overlay: _propTypes2.default.object
  }),
  style: _propTypes2.default.shape({
    content: _propTypes2.default.object,
    overlay: _propTypes2.default.object
  }),
  className: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.object]),
  overlayClassName: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.object]),
  bodyOpenClassName: _propTypes2.default.string,
  htmlOpenClassName: _propTypes2.default.string,
  ariaHideApp: _propTypes2.default.bool,
  appElement: _propTypes2.default.instanceOf(_safeHTMLElement2.default),
  onAfterOpen: _propTypes2.default.func,
  onAfterClose: _propTypes2.default.func,
  onRequestClose: _propTypes2.default.func,
  closeTimeoutMS: _propTypes2.default.number,
  shouldFocusAfterRender: _propTypes2.default.bool,
  shouldCloseOnOverlayClick: _propTypes2.default.bool,
  shouldReturnFocusAfterClose: _propTypes2.default.bool,
  role: _propTypes2.default.string,
  contentLabel: _propTypes2.default.string,
  aria: _propTypes2.default.object,
  data: _propTypes2.default.object,
  children: _propTypes2.default.node,
  shouldCloseOnEsc: _propTypes2.default.bool,
  overlayRef: _propTypes2.default.func,
  contentRef: _propTypes2.default.func,
  testId: _propTypes2.default.string
};
exports.default = ModalPortal;
module.exports = exports["default"];
}).call(this,require('_process'))

},{"../helpers/ariaAppHider":82,"../helpers/classList":83,"../helpers/focusManager":84,"../helpers/safeHTMLElement":85,"../helpers/scopeTab":86,"_process":46,"prop-types":50,"react":undefined}],82:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.assertNodeList = assertNodeList;
exports.setElement = setElement;
exports.validateElement = validateElement;
exports.hide = hide;
exports.show = show;
exports.documentNotReadyOrSSRTesting = documentNotReadyOrSSRTesting;
exports.resetForTesting = resetForTesting;

var _warning = require("warning");

var _warning2 = _interopRequireDefault(_warning);

var _safeHTMLElement = require("./safeHTMLElement");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var globalElement = null;

function assertNodeList(nodeList, selector) {
  if (!nodeList || !nodeList.length) {
    throw new Error("react-modal: No elements were found for selector " + selector + ".");
  }
}

function setElement(element) {
  var useElement = element;
  if (typeof useElement === "string" && _safeHTMLElement.canUseDOM) {
    var el = document.querySelectorAll(useElement);
    assertNodeList(el, useElement);
    useElement = "length" in el ? el[0] : el;
  }
  globalElement = useElement || globalElement;
  return globalElement;
}

function validateElement(appElement) {
  if (!appElement && !globalElement) {
    (0, _warning2.default)(false, ["react-modal: App element is not defined.", "Please use `Modal.setAppElement(el)` or set `appElement={el}`.", "This is needed so screen readers don't see main content", "when modal is opened. It is not recommended, but you can opt-out", "by setting `ariaHideApp={false}`."].join(" "));

    return false;
  }

  return true;
}

function hide(appElement) {
  if (validateElement(appElement)) {
    (appElement || globalElement).setAttribute("aria-hidden", "true");
  }
}

function show(appElement) {
  if (validateElement(appElement)) {
    (appElement || globalElement).removeAttribute("aria-hidden");
  }
}

function documentNotReadyOrSSRTesting() {
  globalElement = null;
}

function resetForTesting() {
  globalElement = null;
}
},{"./safeHTMLElement":85,"warning":127}],83:[function(require,module,exports){
(function (process){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.dumpClassLists = dumpClassLists;
var htmlClassList = {};
var docBodyClassList = {};

function dumpClassLists() {
  if (process.env.NODE_ENV !== "production") {
    var classes = document.getElementsByTagName("html")[0].className;
    var buffer = "Show tracked classes:\n\n";

    buffer += "<html /> (" + classes + "):\n";
    for (var x in htmlClassList) {
      buffer += "  " + x + " " + htmlClassList[x] + "\n";
    }

    classes = document.body.className;

    // eslint-disable-next-line max-len
    buffer += "\n\ndoc.body (" + classes + "):\n";
    for (var _x in docBodyClassList) {
      buffer += "  " + _x + " " + docBodyClassList[_x] + "\n";
    }

    buffer += "\n";

    // eslint-disable-next-line no-console
    console.log(buffer);
  }
}

/**
 * Track the number of reference of a class.
 * @param {object} poll The poll to receive the reference.
 * @param {string} className The class name.
 * @return {string}
 */
var incrementReference = function incrementReference(poll, className) {
  if (!poll[className]) {
    poll[className] = 0;
  }
  poll[className] += 1;
  return className;
};

/**
 * Drop the reference of a class.
 * @param {object} poll The poll to receive the reference.
 * @param {string} className The class name.
 * @return {string}
 */
var decrementReference = function decrementReference(poll, className) {
  if (poll[className]) {
    poll[className] -= 1;
  }
  return className;
};

/**
 * Track a class and add to the given class list.
 * @param {Object} classListRef A class list of an element.
 * @param {Object} poll         The poll to be used.
 * @param {Array}  classes      The list of classes to be tracked.
 */
var trackClass = function trackClass(classListRef, poll, classes) {
  classes.forEach(function (className) {
    incrementReference(poll, className);
    classListRef.add(className);
  });
};

/**
 * Untrack a class and remove from the given class list if the reference
 * reaches 0.
 * @param {Object} classListRef A class list of an element.
 * @param {Object} poll         The poll to be used.
 * @param {Array}  classes      The list of classes to be untracked.
 */
var untrackClass = function untrackClass(classListRef, poll, classes) {
  classes.forEach(function (className) {
    decrementReference(poll, className);
    poll[className] === 0 && classListRef.remove(className);
  });
};

/**
 * Public inferface to add classes to the document.body.
 * @param {string} bodyClass The class string to be added.
 *                           It may contain more then one class
 *                           with ' ' as separator.
 */
var add = exports.add = function add(element, classString) {
  return trackClass(element.classList, element.nodeName.toLowerCase() == "html" ? htmlClassList : docBodyClassList, classString.split(" "));
};

/**
 * Public inferface to remove classes from the document.body.
 * @param {string} bodyClass The class string to be added.
 *                           It may contain more then one class
 *                           with ' ' as separator.
 */
var remove = exports.remove = function remove(element, classString) {
  return untrackClass(element.classList, element.nodeName.toLowerCase() == "html" ? htmlClassList : docBodyClassList, classString.split(" "));
};
}).call(this,require('_process'))

},{"_process":46}],84:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.handleBlur = handleBlur;
exports.handleFocus = handleFocus;
exports.markForFocusLater = markForFocusLater;
exports.returnFocus = returnFocus;
exports.popWithoutFocus = popWithoutFocus;
exports.setupScopedFocus = setupScopedFocus;
exports.teardownScopedFocus = teardownScopedFocus;

var _tabbable = require("../helpers/tabbable");

var _tabbable2 = _interopRequireDefault(_tabbable);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var focusLaterElements = [];
var modalElement = null;
var needToFocus = false;

function handleBlur() {
  needToFocus = true;
}

function handleFocus() {
  if (needToFocus) {
    needToFocus = false;
    if (!modalElement) {
      return;
    }
    // need to see how jQuery shims document.on('focusin') so we don't need the
    // setTimeout, firefox doesn't support focusin, if it did, we could focus
    // the element outside of a setTimeout. Side-effect of this implementation
    // is that the document.body gets focus, and then we focus our element right
    // after, seems fine.
    setTimeout(function () {
      if (modalElement.contains(document.activeElement)) {
        return;
      }
      var el = (0, _tabbable2.default)(modalElement)[0] || modalElement;
      el.focus();
    }, 0);
  }
}

function markForFocusLater() {
  focusLaterElements.push(document.activeElement);
}

/* eslint-disable no-console */
function returnFocus() {
  var toFocus = null;
  try {
    if (focusLaterElements.length !== 0) {
      toFocus = focusLaterElements.pop();
      toFocus.focus();
    }
    return;
  } catch (e) {
    console.warn(["You tried to return focus to", toFocus, "but it is not in the DOM anymore"].join(" "));
  }
}
/* eslint-enable no-console */

function popWithoutFocus() {
  focusLaterElements.length > 0 && focusLaterElements.pop();
}

function setupScopedFocus(element) {
  modalElement = element;

  if (window.addEventListener) {
    window.addEventListener("blur", handleBlur, false);
    document.addEventListener("focus", handleFocus, true);
  } else {
    window.attachEvent("onBlur", handleBlur);
    document.attachEvent("onFocus", handleFocus);
  }
}

function teardownScopedFocus() {
  modalElement = null;

  if (window.addEventListener) {
    window.removeEventListener("blur", handleBlur);
    document.removeEventListener("focus", handleFocus);
  } else {
    window.detachEvent("onBlur", handleBlur);
    document.detachEvent("onFocus", handleFocus);
  }
}
},{"../helpers/tabbable":87}],85:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.canUseDOM = undefined;

var _exenv = require("exenv");

var _exenv2 = _interopRequireDefault(_exenv);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var EE = _exenv2.default;

var SafeHTMLElement = EE.canUseDOM ? window.HTMLElement : {};

var canUseDOM = exports.canUseDOM = EE.canUseDOM;

exports.default = SafeHTMLElement;
},{"exenv":36}],86:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = scopeTab;

var _tabbable = require("./tabbable");

var _tabbable2 = _interopRequireDefault(_tabbable);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function scopeTab(node, event) {
  var tabbable = (0, _tabbable2.default)(node);

  if (!tabbable.length) {
    // Do nothing, since there are no elements that can receive focus.
    event.preventDefault();
    return;
  }

  var shiftKey = event.shiftKey;
  var head = tabbable[0];
  var tail = tabbable[tabbable.length - 1];

  // proceed with default browser behavior on tab.
  // Focus on last element on shift + tab.
  if (node === document.activeElement) {
    if (!shiftKey) return;
    target = tail;
  }

  var target;
  if (tail === document.activeElement && !shiftKey) {
    target = head;
  }

  if (head === document.activeElement && shiftKey) {
    target = tail;
  }

  if (target) {
    event.preventDefault();
    target.focus();
    return;
  }

  // Safari radio issue.
  //
  // Safari does not move the focus to the radio button,
  // so we need to force it to really walk through all elements.
  //
  // This is very error prone, since we are trying to guess
  // if it is a safari browser from the first occurence between
  // chrome or safari.
  //
  // The chrome user agent contains the first ocurrence
  // as the 'chrome/version' and later the 'safari/version'.
  var checkSafari = /(\bChrome\b|\bSafari\b)\//.exec(navigator.userAgent);
  var isSafariDesktop = checkSafari != null && checkSafari[1] != "Chrome" && /\biPod\b|\biPad\b/g.exec(navigator.userAgent) == null;

  // If we are not in safari desktop, let the browser control
  // the focus
  if (!isSafariDesktop) return;

  var x = tabbable.indexOf(document.activeElement);

  if (x > -1) {
    x += shiftKey ? -1 : 1;
  }

  // If the tabbable element does not exist,
  // focus head/tail based on shiftKey
  if (typeof tabbable[x] === "undefined") {
    event.preventDefault();
    target = shiftKey ? tail : head;
    target.focus();
    return;
  }

  event.preventDefault();

  tabbable[x].focus();
}
module.exports = exports["default"];
},{"./tabbable":87}],87:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = findTabbableDescendants;
/*!
 * Adapted from jQuery UI core
 *
 * http://jqueryui.com
 *
 * Copyright 2014 jQuery Foundation and other contributors
 * Released under the MIT license.
 * http://jquery.org/license
 *
 * http://api.jqueryui.com/category/ui-core/
 */

var tabbableNode = /input|select|textarea|button|object/;

function hidesContents(element) {
  var zeroSize = element.offsetWidth <= 0 && element.offsetHeight <= 0;

  // If the node is empty, this is good enough
  if (zeroSize && !element.innerHTML) return true;

  // Otherwise we need to check some styles
  var style = window.getComputedStyle(element);
  return zeroSize ? style.getPropertyValue("overflow") !== "visible" : style.getPropertyValue("display") == "none";
}

function visible(element) {
  var parentElement = element;
  while (parentElement) {
    if (parentElement === document.body) break;
    if (hidesContents(parentElement)) return false;
    parentElement = parentElement.parentNode;
  }
  return true;
}

function focusable(element, isTabIndexNotNaN) {
  var nodeName = element.nodeName.toLowerCase();
  var res = tabbableNode.test(nodeName) && !element.disabled || (nodeName === "a" ? element.href || isTabIndexNotNaN : isTabIndexNotNaN);
  return res && visible(element);
}

function tabbable(element) {
  var tabIndex = element.getAttribute("tabindex");
  if (tabIndex === null) tabIndex = undefined;
  var isTabIndexNaN = isNaN(tabIndex);
  return (isTabIndexNaN || tabIndex >= 0) && focusable(element, !isTabIndexNaN);
}

function findTabbableDescendants(element) {
  return [].slice.call(element.querySelectorAll("*"), 0).filter(tabbable);
}
module.exports = exports["default"];
},{}],88:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _Modal = require("./components/Modal");

var _Modal2 = _interopRequireDefault(_Modal);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = _Modal2.default;
module.exports = exports["default"];
},{"./components/Modal":80}],89:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _classnames = require('classnames');

var _classnames2 = _interopRequireDefault(_classnames);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _resizeObserverPolyfill = require('resize-observer-polyfill');

var _resizeObserverPolyfill2 = _interopRequireDefault(_resizeObserverPolyfill);

var _utils = require('./utils');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /* eslint no-debugger: "warn" */


/**
 * Predefined constants
 * @type {Object}
 */
var constants = {
  orientation: {
    horizontal: {
      dimension: 'width',
      direction: 'left',
      reverseDirection: 'right',
      coordinate: 'x'
    },
    vertical: {
      dimension: 'height',
      direction: 'top',
      reverseDirection: 'bottom',
      coordinate: 'y'
    }
  }
};

var Slider = function (_Component) {
  _inherits(Slider, _Component);

  function Slider(props, context) {
    _classCallCheck(this, Slider);

    var _this = _possibleConstructorReturn(this, (Slider.__proto__ || Object.getPrototypeOf(Slider)).call(this, props, context));

    _this.handleFormat = function (value) {
      var format = _this.props.format;

      return format ? format(value) : value;
    };

    _this.handleUpdate = function () {
      if (!_this.slider) {
        // for shallow rendering
        return;
      }
      var orientation = _this.props.orientation;

      var dimension = (0, _utils.capitalize)(constants.orientation[orientation].dimension);
      var sliderPos = _this.slider['offset' + dimension];
      var handlePos = _this.handle['offset' + dimension];

      _this.setState({
        limit: sliderPos - handlePos,
        grab: handlePos / 2
      });
    };

    _this.handleStart = function (e) {
      var onChangeStart = _this.props.onChangeStart;

      document.addEventListener('mousemove', _this.handleDrag);
      document.addEventListener('mouseup', _this.handleEnd);
      _this.setState({
        active: true
      }, function () {
        onChangeStart && onChangeStart(e);
      });
    };

    _this.handleDrag = function (e) {
      e.stopPropagation();
      var onChange = _this.props.onChange;
      var _e$target = e.target,
          className = _e$target.className,
          classList = _e$target.classList,
          dataset = _e$target.dataset;

      if (!onChange || className === 'rangeslider__labels') return;

      var value = _this.position(e);

      if (classList && classList.contains('rangeslider__label-item') && dataset.value) {
        value = parseFloat(dataset.value);
      }

      onChange && onChange(value, e);
    };

    _this.handleEnd = function (e) {
      var onChangeComplete = _this.props.onChangeComplete;

      _this.setState({
        active: false
      }, function () {
        onChangeComplete && onChangeComplete(e);
      });
      document.removeEventListener('mousemove', _this.handleDrag);
      document.removeEventListener('mouseup', _this.handleEnd);
    };

    _this.handleKeyDown = function (e) {
      e.preventDefault();
      var keyCode = e.keyCode;
      var _this$props = _this.props,
          value = _this$props.value,
          min = _this$props.min,
          max = _this$props.max,
          step = _this$props.step,
          onChange = _this$props.onChange;

      var sliderValue = void 0;

      switch (keyCode) {
        case 38:
        case 39:
          sliderValue = value + step > max ? max : value + step;
          onChange && onChange(sliderValue, e);
          break;
        case 37:
        case 40:
          sliderValue = value - step < min ? min : value - step;
          onChange && onChange(sliderValue, e);
          break;
      }
    };

    _this.getPositionFromValue = function (value) {
      var limit = _this.state.limit;
      var _this$props2 = _this.props,
          min = _this$props2.min,
          max = _this$props2.max;

      var diffMaxMin = max - min;
      var diffValMin = value - min;
      var percentage = diffValMin / diffMaxMin;
      var pos = Math.round(percentage * limit);

      return pos;
    };

    _this.getValueFromPosition = function (pos) {
      var limit = _this.state.limit;
      var _this$props3 = _this.props,
          orientation = _this$props3.orientation,
          min = _this$props3.min,
          max = _this$props3.max,
          step = _this$props3.step;

      var percentage = (0, _utils.clamp)(pos, 0, limit) / (limit || 1);
      var baseVal = step * Math.round(percentage * (max - min) / step);
      var value = orientation === 'horizontal' ? baseVal + min : max - baseVal;

      return (0, _utils.clamp)(value, min, max);
    };

    _this.position = function (e) {
      var grab = _this.state.grab;
      var _this$props4 = _this.props,
          orientation = _this$props4.orientation,
          reverse = _this$props4.reverse;


      var node = _this.slider;
      var coordinateStyle = constants.orientation[orientation].coordinate;
      var directionStyle = reverse ? constants.orientation[orientation].reverseDirection : constants.orientation[orientation].direction;
      var clientCoordinateStyle = 'client' + (0, _utils.capitalize)(coordinateStyle);
      var coordinate = !e.touches ? e[clientCoordinateStyle] : e.touches[0][clientCoordinateStyle];
      var direction = node.getBoundingClientRect()[directionStyle];
      var pos = reverse ? direction - coordinate - grab : coordinate - direction - grab;
      var value = _this.getValueFromPosition(pos);

      return value;
    };

    _this.coordinates = function (pos) {
      var _this$state = _this.state,
          limit = _this$state.limit,
          grab = _this$state.grab;
      var orientation = _this.props.orientation;

      var value = _this.getValueFromPosition(pos);
      var position = _this.getPositionFromValue(value);
      var handlePos = orientation === 'horizontal' ? position + grab : position;
      var fillPos = orientation === 'horizontal' ? handlePos : limit - handlePos;

      return {
        fill: fillPos,
        handle: handlePos,
        label: handlePos
      };
    };

    _this.renderLabels = function (labels) {
      return _react2.default.createElement(
        'ul',
        {
          ref: function ref(sl) {
            _this.labels = sl;
          },
          className: (0, _classnames2.default)('rangeslider__labels')
        },
        labels
      );
    };

    _this.state = {
      active: false,
      limit: 0,
      grab: 0
    };
    return _this;
  }

  _createClass(Slider, [{
    key: 'componentDidMount',
    value: function componentDidMount() {
      this.handleUpdate();
      var resizeObserver = new _resizeObserverPolyfill2.default(this.handleUpdate);
      resizeObserver.observe(this.slider);
    }

    /**
     * Format label/tooltip value
     * @param  {Number} - value
     * @return {Formatted Number}
     */


    /**
     * Update slider state on change
     * @return {void}
     */


    /**
     * Attach event listeners to mousemove/mouseup events
     * @return {void}
     */


    /**
     * Handle drag/mousemove event
     * @param  {Object} e - Event object
     * @return {void}
     */


    /**
     * Detach event listeners to mousemove/mouseup events
     * @return {void}
     */


    /**
     * Support for key events on the slider handle
     * @param  {Object} e - Event object
     * @return {void}
     */


    /**
     * Calculate position of slider based on its value
     * @param  {number} value - Current value of slider
     * @return {position} pos - Calculated position of slider based on value
     */


    /**
     * Translate position of slider to slider value
     * @param  {number} pos - Current position/coordinates of slider
     * @return {number} value - Slider value
     */


    /**
     * Calculate position of slider based on value
     * @param  {Object} e - Event object
     * @return {number} value - Slider value
     */


    /**
     * Grab coordinates of slider
     * @param  {Object} pos - Position object
     * @return {Object} - Slider fill/handle coordinates
     */

  }, {
    key: 'render',
    value: function render() {
      var _this2 = this;

      var _props = this.props,
          value = _props.value,
          orientation = _props.orientation,
          className = _props.className,
          tooltip = _props.tooltip,
          reverse = _props.reverse,
          labels = _props.labels,
          min = _props.min,
          max = _props.max,
          handleLabel = _props.handleLabel;
      var active = this.state.active;

      var dimension = constants.orientation[orientation].dimension;
      var direction = reverse ? constants.orientation[orientation].reverseDirection : constants.orientation[orientation].direction;
      var position = this.getPositionFromValue(value);
      var coords = this.coordinates(position);
      var fillStyle = _defineProperty({}, dimension, coords.fill + 'px');
      var handleStyle = _defineProperty({}, direction, coords.handle + 'px');
      var showTooltip = tooltip && active;

      var labelItems = [];
      var labelKeys = Object.keys(labels);

      if (labelKeys.length > 0) {
        labelKeys = labelKeys.sort(function (a, b) {
          return reverse ? a - b : b - a;
        });

        var _iteratorNormalCompletion = true;
        var _didIteratorError = false;
        var _iteratorError = undefined;

        try {
          for (var _iterator = labelKeys[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
            var key = _step.value;

            var labelPosition = this.getPositionFromValue(key);
            var labelCoords = this.coordinates(labelPosition);
            var labelStyle = _defineProperty({}, direction, labelCoords.label + 'px');

            labelItems.push(_react2.default.createElement(
              'li',
              {
                key: key,
                className: (0, _classnames2.default)('rangeslider__label-item'),
                'data-value': key,
                onMouseDown: this.handleDrag,
                onTouchStart: this.handleStart,
                onTouchEnd: this.handleEnd,
                style: labelStyle
              },
              this.props.labels[key]
            ));
          }
        } catch (err) {
          _didIteratorError = true;
          _iteratorError = err;
        } finally {
          try {
            if (!_iteratorNormalCompletion && _iterator.return) {
              _iterator.return();
            }
          } finally {
            if (_didIteratorError) {
              throw _iteratorError;
            }
          }
        }
      }

      return _react2.default.createElement(
        'div',
        {
          ref: function ref(s) {
            _this2.slider = s;
          },
          className: (0, _classnames2.default)('rangeslider', 'rangeslider-' + orientation, { 'rangeslider-reverse': reverse }, className),
          onMouseDown: this.handleDrag,
          onMouseUp: this.handleEnd,
          onTouchStart: this.handleStart,
          onTouchEnd: this.handleEnd,
          'aria-valuemin': min,
          'aria-valuemax': max,
          'aria-valuenow': value,
          'aria-orientation': orientation
        },
        _react2.default.createElement('div', { className: 'rangeslider__fill', style: fillStyle }),
        _react2.default.createElement(
          'div',
          {
            ref: function ref(sh) {
              _this2.handle = sh;
            },
            className: 'rangeslider__handle',
            onMouseDown: this.handleStart,
            onTouchMove: this.handleDrag,
            onTouchEnd: this.handleEnd,
            onKeyDown: this.handleKeyDown,
            style: handleStyle,
            tabIndex: 0
          },
          showTooltip ? _react2.default.createElement(
            'div',
            {
              ref: function ref(st) {
                _this2.tooltip = st;
              },
              className: 'rangeslider__handle-tooltip'
            },
            _react2.default.createElement(
              'span',
              null,
              this.handleFormat(value)
            )
          ) : null,
          _react2.default.createElement(
            'div',
            { className: 'rangeslider__handle-label' },
            handleLabel
          )
        ),
        labels ? this.renderLabels(labelItems) : null
      );
    }
  }]);

  return Slider;
}(_react.Component);

Slider.propTypes = {
  min: _propTypes2.default.number,
  max: _propTypes2.default.number,
  step: _propTypes2.default.number,
  value: _propTypes2.default.number,
  orientation: _propTypes2.default.string,
  tooltip: _propTypes2.default.bool,
  reverse: _propTypes2.default.bool,
  labels: _propTypes2.default.object,
  handleLabel: _propTypes2.default.string,
  format: _propTypes2.default.func,
  onChangeStart: _propTypes2.default.func,
  onChange: _propTypes2.default.func,
  onChangeComplete: _propTypes2.default.func
};
Slider.defaultProps = {
  min: 0,
  max: 100,
  step: 1,
  value: 0,
  orientation: 'horizontal',
  tooltip: true,
  reverse: false,
  labels: {},
  handleLabel: ''
};
exports.default = Slider;
},{"./utils":91,"classnames":undefined,"prop-types":50,"react":undefined,"resize-observer-polyfill":122}],90:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _Rangeslider = require('./Rangeslider');

var _Rangeslider2 = _interopRequireDefault(_Rangeslider);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = _Rangeslider2.default;
},{"./Rangeslider":89}],91:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.capitalize = capitalize;
exports.clamp = clamp;
/**
 * Capitalize first letter of string
 * @private
 * @param  {string} - String
 * @return {string} - String with first letter capitalized
 */
function capitalize(str) {
  return str.charAt(0).toUpperCase() + str.substr(1);
}

/**
 * Clamp position between a range
 * @param  {number} - Value to be clamped
 * @param  {number} - Minimum value in range
 * @param  {number} - Maximum value in range
 * @return {number} - Clamped value
 */
function clamp(value, min, max) {
  return Math.min(Math.max(value, min), max);
}
},{}],92:[function(require,module,exports){
"use strict";

exports.__esModule = true;

var _warning = require("warning");

var _warning2 = _interopRequireDefault(_warning);

var _react = require("react");

var _react2 = _interopRequireDefault(_react);

var _propTypes = require("prop-types");

var _propTypes2 = _interopRequireDefault(_propTypes);

var _history = require("history");

var _Router = require("./Router");

var _Router2 = _interopRequireDefault(_Router);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

/**
 * The public API for a <Router> that uses HTML5 history.
 */
var BrowserRouter = function (_React$Component) {
  _inherits(BrowserRouter, _React$Component);

  function BrowserRouter() {
    var _temp, _this, _ret;

    _classCallCheck(this, BrowserRouter);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = _possibleConstructorReturn(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this.history = (0, _history.createBrowserHistory)(_this.props), _temp), _possibleConstructorReturn(_this, _ret);
  }

  BrowserRouter.prototype.componentWillMount = function componentWillMount() {
    (0, _warning2.default)(!this.props.history, "<BrowserRouter> ignores the history prop. To use a custom history, " + "use `import { Router }` instead of `import { BrowserRouter as Router }`.");
  };

  BrowserRouter.prototype.render = function render() {
    return _react2.default.createElement(_Router2.default, { history: this.history, children: this.props.children });
  };

  return BrowserRouter;
}(_react2.default.Component);

BrowserRouter.propTypes = {
  basename: _propTypes2.default.string,
  forceRefresh: _propTypes2.default.bool,
  getUserConfirmation: _propTypes2.default.func,
  keyLength: _propTypes2.default.number,
  children: _propTypes2.default.node
};
exports.default = BrowserRouter;
},{"./Router":100,"history":39,"prop-types":50,"react":undefined,"warning":106}],93:[function(require,module,exports){
"use strict";

exports.__esModule = true;

var _warning = require("warning");

var _warning2 = _interopRequireDefault(_warning);

var _react = require("react");

var _react2 = _interopRequireDefault(_react);

var _propTypes = require("prop-types");

var _propTypes2 = _interopRequireDefault(_propTypes);

var _history = require("history");

var _Router = require("./Router");

var _Router2 = _interopRequireDefault(_Router);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

/**
 * The public API for a <Router> that uses window.location.hash.
 */
var HashRouter = function (_React$Component) {
  _inherits(HashRouter, _React$Component);

  function HashRouter() {
    var _temp, _this, _ret;

    _classCallCheck(this, HashRouter);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = _possibleConstructorReturn(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this.history = (0, _history.createHashHistory)(_this.props), _temp), _possibleConstructorReturn(_this, _ret);
  }

  HashRouter.prototype.componentWillMount = function componentWillMount() {
    (0, _warning2.default)(!this.props.history, "<HashRouter> ignores the history prop. To use a custom history, " + "use `import { Router }` instead of `import { HashRouter as Router }`.");
  };

  HashRouter.prototype.render = function render() {
    return _react2.default.createElement(_Router2.default, { history: this.history, children: this.props.children });
  };

  return HashRouter;
}(_react2.default.Component);

HashRouter.propTypes = {
  basename: _propTypes2.default.string,
  getUserConfirmation: _propTypes2.default.func,
  hashType: _propTypes2.default.oneOf(["hashbang", "noslash", "slash"]),
  children: _propTypes2.default.node
};
exports.default = HashRouter;
},{"./Router":100,"history":39,"prop-types":50,"react":undefined,"warning":106}],94:[function(require,module,exports){
"use strict";

exports.__esModule = true;

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _react = require("react");

var _react2 = _interopRequireDefault(_react);

var _propTypes = require("prop-types");

var _propTypes2 = _interopRequireDefault(_propTypes);

var _invariant = require("invariant");

var _invariant2 = _interopRequireDefault(_invariant);

var _history = require("history");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var isModifiedEvent = function isModifiedEvent(event) {
  return !!(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey);
};

/**
 * The public API for rendering a history-aware <a>.
 */

var Link = function (_React$Component) {
  _inherits(Link, _React$Component);

  function Link() {
    var _temp, _this, _ret;

    _classCallCheck(this, Link);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = _possibleConstructorReturn(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this.handleClick = function (event) {
      if (_this.props.onClick) _this.props.onClick(event);

      if (!event.defaultPrevented && // onClick prevented default
      event.button === 0 && // ignore everything but left clicks
      !_this.props.target && // let browser handle "target=_blank" etc.
      !isModifiedEvent(event) // ignore clicks with modifier keys
      ) {
          event.preventDefault();

          var history = _this.context.router.history;
          var _this$props = _this.props,
              replace = _this$props.replace,
              to = _this$props.to;


          if (replace) {
            history.replace(to);
          } else {
            history.push(to);
          }
        }
    }, _temp), _possibleConstructorReturn(_this, _ret);
  }

  Link.prototype.render = function render() {
    var _props = this.props,
        replace = _props.replace,
        to = _props.to,
        innerRef = _props.innerRef,
        props = _objectWithoutProperties(_props, ["replace", "to", "innerRef"]); // eslint-disable-line no-unused-vars

    (0, _invariant2.default)(this.context.router, "You should not use <Link> outside a <Router>");

    (0, _invariant2.default)(to !== undefined, 'You must specify the "to" property');

    var history = this.context.router.history;

    var location = typeof to === "string" ? (0, _history.createLocation)(to, null, null, history.location) : to;

    var href = history.createHref(location);
    return _react2.default.createElement("a", _extends({}, props, { onClick: this.handleClick, href: href, ref: innerRef }));
  };

  return Link;
}(_react2.default.Component);

Link.propTypes = {
  onClick: _propTypes2.default.func,
  target: _propTypes2.default.string,
  replace: _propTypes2.default.bool,
  to: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.object]).isRequired,
  innerRef: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.func])
};
Link.defaultProps = {
  replace: false
};
Link.contextTypes = {
  router: _propTypes2.default.shape({
    history: _propTypes2.default.shape({
      push: _propTypes2.default.func.isRequired,
      replace: _propTypes2.default.func.isRequired,
      createHref: _propTypes2.default.func.isRequired
    }).isRequired
  }).isRequired
};
exports.default = Link;
},{"history":39,"invariant":41,"prop-types":50,"react":undefined}],95:[function(require,module,exports){
"use strict";

exports.__esModule = true;

var _MemoryRouter = require("react-router/MemoryRouter");

var _MemoryRouter2 = _interopRequireDefault(_MemoryRouter);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = _MemoryRouter2.default; // Written in this round about way for babel-transform-imports
},{"react-router/MemoryRouter":108}],96:[function(require,module,exports){
"use strict";

exports.__esModule = true;

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

var _react = require("react");

var _react2 = _interopRequireDefault(_react);

var _propTypes = require("prop-types");

var _propTypes2 = _interopRequireDefault(_propTypes);

var _Route = require("./Route");

var _Route2 = _interopRequireDefault(_Route);

var _Link = require("./Link");

var _Link2 = _interopRequireDefault(_Link);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

/**
 * A <Link> wrapper that knows if it's "active" or not.
 */
var NavLink = function NavLink(_ref) {
  var to = _ref.to,
      exact = _ref.exact,
      strict = _ref.strict,
      location = _ref.location,
      activeClassName = _ref.activeClassName,
      className = _ref.className,
      activeStyle = _ref.activeStyle,
      style = _ref.style,
      getIsActive = _ref.isActive,
      ariaCurrent = _ref["aria-current"],
      rest = _objectWithoutProperties(_ref, ["to", "exact", "strict", "location", "activeClassName", "className", "activeStyle", "style", "isActive", "aria-current"]);

  var path = (typeof to === "undefined" ? "undefined" : _typeof(to)) === "object" ? to.pathname : to;

  // Regex taken from: https://github.com/pillarjs/path-to-regexp/blob/master/index.js#L202
  var escapedPath = path && path.replace(/([.+*?=^!:${}()[\]|/\\])/g, "\\$1");

  return _react2.default.createElement(_Route2.default, {
    path: escapedPath,
    exact: exact,
    strict: strict,
    location: location,
    children: function children(_ref2) {
      var location = _ref2.location,
          match = _ref2.match;

      var isActive = !!(getIsActive ? getIsActive(match, location) : match);

      return _react2.default.createElement(_Link2.default, _extends({
        to: to,
        className: isActive ? [className, activeClassName].filter(function (i) {
          return i;
        }).join(" ") : className,
        style: isActive ? _extends({}, style, activeStyle) : style,
        "aria-current": isActive && ariaCurrent || null
      }, rest));
    }
  });
};

NavLink.propTypes = {
  to: _Link2.default.propTypes.to,
  exact: _propTypes2.default.bool,
  strict: _propTypes2.default.bool,
  location: _propTypes2.default.object,
  activeClassName: _propTypes2.default.string,
  className: _propTypes2.default.string,
  activeStyle: _propTypes2.default.object,
  style: _propTypes2.default.object,
  isActive: _propTypes2.default.func,
  "aria-current": _propTypes2.default.oneOf(["page", "step", "location", "date", "time", "true"])
};

NavLink.defaultProps = {
  activeClassName: "active",
  "aria-current": "page"
};

exports.default = NavLink;
},{"./Link":94,"./Route":99,"prop-types":50,"react":undefined}],97:[function(require,module,exports){
"use strict";

exports.__esModule = true;

var _Prompt = require("react-router/Prompt");

var _Prompt2 = _interopRequireDefault(_Prompt);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = _Prompt2.default; // Written in this round about way for babel-transform-imports
},{"react-router/Prompt":109}],98:[function(require,module,exports){
"use strict";

exports.__esModule = true;

var _Redirect = require("react-router/Redirect");

var _Redirect2 = _interopRequireDefault(_Redirect);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = _Redirect2.default; // Written in this round about way for babel-transform-imports
},{"react-router/Redirect":110}],99:[function(require,module,exports){
"use strict";

exports.__esModule = true;

var _Route = require("react-router/Route");

var _Route2 = _interopRequireDefault(_Route);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = _Route2.default; // Written in this round about way for babel-transform-imports
},{"react-router/Route":111}],100:[function(require,module,exports){
"use strict";

exports.__esModule = true;

var _Router = require("react-router/Router");

var _Router2 = _interopRequireDefault(_Router);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = _Router2.default; // Written in this round about way for babel-transform-imports
},{"react-router/Router":112}],101:[function(require,module,exports){
"use strict";

exports.__esModule = true;

var _StaticRouter = require("react-router/StaticRouter");

var _StaticRouter2 = _interopRequireDefault(_StaticRouter);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = _StaticRouter2.default; // Written in this round about way for babel-transform-imports
},{"react-router/StaticRouter":113}],102:[function(require,module,exports){
"use strict";

exports.__esModule = true;

var _Switch = require("react-router/Switch");

var _Switch2 = _interopRequireDefault(_Switch);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = _Switch2.default; // Written in this round about way for babel-transform-imports
},{"react-router/Switch":114}],103:[function(require,module,exports){
"use strict";

exports.__esModule = true;

var _generatePath = require("react-router/generatePath");

var _generatePath2 = _interopRequireDefault(_generatePath);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = _generatePath2.default; // Written in this round about way for babel-transform-imports
},{"react-router/generatePath":115}],104:[function(require,module,exports){
"use strict";

exports.__esModule = true;
exports.withRouter = exports.matchPath = exports.generatePath = exports.Switch = exports.StaticRouter = exports.Router = exports.Route = exports.Redirect = exports.Prompt = exports.NavLink = exports.MemoryRouter = exports.Link = exports.HashRouter = exports.BrowserRouter = undefined;

var _BrowserRouter2 = require("./BrowserRouter");

var _BrowserRouter3 = _interopRequireDefault(_BrowserRouter2);

var _HashRouter2 = require("./HashRouter");

var _HashRouter3 = _interopRequireDefault(_HashRouter2);

var _Link2 = require("./Link");

var _Link3 = _interopRequireDefault(_Link2);

var _MemoryRouter2 = require("./MemoryRouter");

var _MemoryRouter3 = _interopRequireDefault(_MemoryRouter2);

var _NavLink2 = require("./NavLink");

var _NavLink3 = _interopRequireDefault(_NavLink2);

var _Prompt2 = require("./Prompt");

var _Prompt3 = _interopRequireDefault(_Prompt2);

var _Redirect2 = require("./Redirect");

var _Redirect3 = _interopRequireDefault(_Redirect2);

var _Route2 = require("./Route");

var _Route3 = _interopRequireDefault(_Route2);

var _Router2 = require("./Router");

var _Router3 = _interopRequireDefault(_Router2);

var _StaticRouter2 = require("./StaticRouter");

var _StaticRouter3 = _interopRequireDefault(_StaticRouter2);

var _Switch2 = require("./Switch");

var _Switch3 = _interopRequireDefault(_Switch2);

var _generatePath2 = require("./generatePath");

var _generatePath3 = _interopRequireDefault(_generatePath2);

var _matchPath2 = require("./matchPath");

var _matchPath3 = _interopRequireDefault(_matchPath2);

var _withRouter2 = require("./withRouter");

var _withRouter3 = _interopRequireDefault(_withRouter2);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.BrowserRouter = _BrowserRouter3.default;
exports.HashRouter = _HashRouter3.default;
exports.Link = _Link3.default;
exports.MemoryRouter = _MemoryRouter3.default;
exports.NavLink = _NavLink3.default;
exports.Prompt = _Prompt3.default;
exports.Redirect = _Redirect3.default;
exports.Route = _Route3.default;
exports.Router = _Router3.default;
exports.StaticRouter = _StaticRouter3.default;
exports.Switch = _Switch3.default;
exports.generatePath = _generatePath3.default;
exports.matchPath = _matchPath3.default;
exports.withRouter = _withRouter3.default;
},{"./BrowserRouter":92,"./HashRouter":93,"./Link":94,"./MemoryRouter":95,"./NavLink":96,"./Prompt":97,"./Redirect":98,"./Route":99,"./Router":100,"./StaticRouter":101,"./Switch":102,"./generatePath":103,"./matchPath":105,"./withRouter":107}],105:[function(require,module,exports){
"use strict";

exports.__esModule = true;

var _matchPath = require("react-router/matchPath");

var _matchPath2 = _interopRequireDefault(_matchPath);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = _matchPath2.default; // Written in this round about way for babel-transform-imports
},{"react-router/matchPath":116}],106:[function(require,module,exports){
(function (process){
/**
 * Copyright (c) 2014-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

'use strict';

/**
 * Similar to invariant but only logs a warning if the condition is not met.
 * This can be used to log issues in development environments in critical
 * paths. Removing the logging code for production environments will keep the
 * same logic and follow the same code paths.
 */

var __DEV__ = process.env.NODE_ENV !== 'production';

var warning = function() {};

if (__DEV__) {
  var printWarning = function printWarning(format, args) {
    var len = arguments.length;
    args = new Array(len > 1 ? len - 1 : 0);
    for (var key = 1; key < len; key++) {
      args[key - 1] = arguments[key];
    }
    var argIndex = 0;
    var message = 'Warning: ' +
      format.replace(/%s/g, function() {
        return args[argIndex++];
      });
    if (typeof console !== 'undefined') {
      console.error(message);
    }
    try {
      // --- Welcome to debugging React ---
      // This error was thrown as a convenience so that you can use this stack
      // to find the callsite that caused this warning to fire.
      throw new Error(message);
    } catch (x) {}
  }

  warning = function(condition, format, args) {
    var len = arguments.length;
    args = new Array(len > 2 ? len - 2 : 0);
    for (var key = 2; key < len; key++) {
      args[key - 2] = arguments[key];
    }
    if (format === undefined) {
      throw new Error(
          '`warning(condition, format, ...args)` requires a warning ' +
          'message argument'
      );
    }
    if (!condition) {
      printWarning.apply(null, [format].concat(args));
    }
  };
}

module.exports = warning;

}).call(this,require('_process'))

},{"_process":46}],107:[function(require,module,exports){
"use strict";

exports.__esModule = true;

var _withRouter = require("react-router/withRouter");

var _withRouter2 = _interopRequireDefault(_withRouter);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = _withRouter2.default; // Written in this round about way for babel-transform-imports
},{"react-router/withRouter":118}],108:[function(require,module,exports){
"use strict";

exports.__esModule = true;

var _warning = require("warning");

var _warning2 = _interopRequireDefault(_warning);

var _react = require("react");

var _react2 = _interopRequireDefault(_react);

var _propTypes = require("prop-types");

var _propTypes2 = _interopRequireDefault(_propTypes);

var _history = require("history");

var _Router = require("./Router");

var _Router2 = _interopRequireDefault(_Router);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

/**
 * The public API for a <Router> that stores location in memory.
 */
var MemoryRouter = function (_React$Component) {
  _inherits(MemoryRouter, _React$Component);

  function MemoryRouter() {
    var _temp, _this, _ret;

    _classCallCheck(this, MemoryRouter);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = _possibleConstructorReturn(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this.history = (0, _history.createMemoryHistory)(_this.props), _temp), _possibleConstructorReturn(_this, _ret);
  }

  MemoryRouter.prototype.componentWillMount = function componentWillMount() {
    (0, _warning2.default)(!this.props.history, "<MemoryRouter> ignores the history prop. To use a custom history, " + "use `import { Router }` instead of `import { MemoryRouter as Router }`.");
  };

  MemoryRouter.prototype.render = function render() {
    return _react2.default.createElement(_Router2.default, { history: this.history, children: this.props.children });
  };

  return MemoryRouter;
}(_react2.default.Component);

MemoryRouter.propTypes = {
  initialEntries: _propTypes2.default.array,
  initialIndex: _propTypes2.default.number,
  getUserConfirmation: _propTypes2.default.func,
  keyLength: _propTypes2.default.number,
  children: _propTypes2.default.node
};
exports.default = MemoryRouter;
},{"./Router":112,"history":39,"prop-types":50,"react":undefined,"warning":117}],109:[function(require,module,exports){
"use strict";

exports.__esModule = true;

var _react = require("react");

var _react2 = _interopRequireDefault(_react);

var _propTypes = require("prop-types");

var _propTypes2 = _interopRequireDefault(_propTypes);

var _invariant = require("invariant");

var _invariant2 = _interopRequireDefault(_invariant);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

/**
 * The public API for prompting the user before navigating away
 * from a screen with a component.
 */
var Prompt = function (_React$Component) {
  _inherits(Prompt, _React$Component);

  function Prompt() {
    _classCallCheck(this, Prompt);

    return _possibleConstructorReturn(this, _React$Component.apply(this, arguments));
  }

  Prompt.prototype.enable = function enable(message) {
    if (this.unblock) this.unblock();

    this.unblock = this.context.router.history.block(message);
  };

  Prompt.prototype.disable = function disable() {
    if (this.unblock) {
      this.unblock();
      this.unblock = null;
    }
  };

  Prompt.prototype.componentWillMount = function componentWillMount() {
    (0, _invariant2.default)(this.context.router, "You should not use <Prompt> outside a <Router>");

    if (this.props.when) this.enable(this.props.message);
  };

  Prompt.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {
    if (nextProps.when) {
      if (!this.props.when || this.props.message !== nextProps.message) this.enable(nextProps.message);
    } else {
      this.disable();
    }
  };

  Prompt.prototype.componentWillUnmount = function componentWillUnmount() {
    this.disable();
  };

  Prompt.prototype.render = function render() {
    return null;
  };

  return Prompt;
}(_react2.default.Component);

Prompt.propTypes = {
  when: _propTypes2.default.bool,
  message: _propTypes2.default.oneOfType([_propTypes2.default.func, _propTypes2.default.string]).isRequired
};
Prompt.defaultProps = {
  when: true
};
Prompt.contextTypes = {
  router: _propTypes2.default.shape({
    history: _propTypes2.default.shape({
      block: _propTypes2.default.func.isRequired
    }).isRequired
  }).isRequired
};
exports.default = Prompt;
},{"invariant":41,"prop-types":50,"react":undefined}],110:[function(require,module,exports){
"use strict";

exports.__esModule = true;

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _react = require("react");

var _react2 = _interopRequireDefault(_react);

var _propTypes = require("prop-types");

var _propTypes2 = _interopRequireDefault(_propTypes);

var _warning = require("warning");

var _warning2 = _interopRequireDefault(_warning);

var _invariant = require("invariant");

var _invariant2 = _interopRequireDefault(_invariant);

var _history = require("history");

var _generatePath = require("./generatePath");

var _generatePath2 = _interopRequireDefault(_generatePath);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

/**
 * The public API for updating the location programmatically
 * with a component.
 */
var Redirect = function (_React$Component) {
  _inherits(Redirect, _React$Component);

  function Redirect() {
    _classCallCheck(this, Redirect);

    return _possibleConstructorReturn(this, _React$Component.apply(this, arguments));
  }

  Redirect.prototype.isStatic = function isStatic() {
    return this.context.router && this.context.router.staticContext;
  };

  Redirect.prototype.componentWillMount = function componentWillMount() {
    (0, _invariant2.default)(this.context.router, "You should not use <Redirect> outside a <Router>");

    if (this.isStatic()) this.perform();
  };

  Redirect.prototype.componentDidMount = function componentDidMount() {
    if (!this.isStatic()) this.perform();
  };

  Redirect.prototype.componentDidUpdate = function componentDidUpdate(prevProps) {
    var prevTo = (0, _history.createLocation)(prevProps.to);
    var nextTo = (0, _history.createLocation)(this.props.to);

    if ((0, _history.locationsAreEqual)(prevTo, nextTo)) {
      (0, _warning2.default)(false, "You tried to redirect to the same route you're currently on: " + ("\"" + nextTo.pathname + nextTo.search + "\""));
      return;
    }

    this.perform();
  };

  Redirect.prototype.computeTo = function computeTo(_ref) {
    var computedMatch = _ref.computedMatch,
        to = _ref.to;

    if (computedMatch) {
      if (typeof to === "string") {
        return (0, _generatePath2.default)(to, computedMatch.params);
      } else {
        return _extends({}, to, {
          pathname: (0, _generatePath2.default)(to.pathname, computedMatch.params)
        });
      }
    }

    return to;
  };

  Redirect.prototype.perform = function perform() {
    var history = this.context.router.history;
    var push = this.props.push;

    var to = this.computeTo(this.props);

    if (push) {
      history.push(to);
    } else {
      history.replace(to);
    }
  };

  Redirect.prototype.render = function render() {
    return null;
  };

  return Redirect;
}(_react2.default.Component);

Redirect.propTypes = {
  computedMatch: _propTypes2.default.object, // private, from <Switch>
  push: _propTypes2.default.bool,
  from: _propTypes2.default.string,
  to: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.object]).isRequired
};
Redirect.defaultProps = {
  push: false
};
Redirect.contextTypes = {
  router: _propTypes2.default.shape({
    history: _propTypes2.default.shape({
      push: _propTypes2.default.func.isRequired,
      replace: _propTypes2.default.func.isRequired
    }).isRequired,
    staticContext: _propTypes2.default.object
  }).isRequired
};
exports.default = Redirect;
},{"./generatePath":115,"history":39,"invariant":41,"prop-types":50,"react":undefined,"warning":117}],111:[function(require,module,exports){
"use strict";

exports.__esModule = true;

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _warning = require("warning");

var _warning2 = _interopRequireDefault(_warning);

var _invariant = require("invariant");

var _invariant2 = _interopRequireDefault(_invariant);

var _react = require("react");

var _react2 = _interopRequireDefault(_react);

var _propTypes = require("prop-types");

var _propTypes2 = _interopRequireDefault(_propTypes);

var _matchPath = require("./matchPath");

var _matchPath2 = _interopRequireDefault(_matchPath);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var isEmptyChildren = function isEmptyChildren(children) {
  return _react2.default.Children.count(children) === 0;
};

/**
 * The public API for matching a single path and rendering.
 */

var Route = function (_React$Component) {
  _inherits(Route, _React$Component);

  function Route() {
    var _temp, _this, _ret;

    _classCallCheck(this, Route);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = _possibleConstructorReturn(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this.state = {
      match: _this.computeMatch(_this.props, _this.context.router)
    }, _temp), _possibleConstructorReturn(_this, _ret);
  }

  Route.prototype.getChildContext = function getChildContext() {
    return {
      router: _extends({}, this.context.router, {
        route: {
          location: this.props.location || this.context.router.route.location,
          match: this.state.match
        }
      })
    };
  };

  Route.prototype.computeMatch = function computeMatch(_ref, router) {
    var computedMatch = _ref.computedMatch,
        location = _ref.location,
        path = _ref.path,
        strict = _ref.strict,
        exact = _ref.exact,
        sensitive = _ref.sensitive;

    if (computedMatch) return computedMatch; // <Switch> already computed the match for us

    (0, _invariant2.default)(router, "You should not use <Route> or withRouter() outside a <Router>");

    var route = router.route;

    var pathname = (location || route.location).pathname;

    return (0, _matchPath2.default)(pathname, { path: path, strict: strict, exact: exact, sensitive: sensitive }, route.match);
  };

  Route.prototype.componentWillMount = function componentWillMount() {
    (0, _warning2.default)(!(this.props.component && this.props.render), "You should not use <Route component> and <Route render> in the same route; <Route render> will be ignored");

    (0, _warning2.default)(!(this.props.component && this.props.children && !isEmptyChildren(this.props.children)), "You should not use <Route component> and <Route children> in the same route; <Route children> will be ignored");

    (0, _warning2.default)(!(this.props.render && this.props.children && !isEmptyChildren(this.props.children)), "You should not use <Route render> and <Route children> in the same route; <Route children> will be ignored");
  };

  Route.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps, nextContext) {
    (0, _warning2.default)(!(nextProps.location && !this.props.location), '<Route> elements should not change from uncontrolled to controlled (or vice versa). You initially used no "location" prop and then provided one on a subsequent render.');

    (0, _warning2.default)(!(!nextProps.location && this.props.location), '<Route> elements should not change from controlled to uncontrolled (or vice versa). You provided a "location" prop initially but omitted it on a subsequent render.');

    this.setState({
      match: this.computeMatch(nextProps, nextContext.router)
    });
  };

  Route.prototype.render = function render() {
    var match = this.state.match;
    var _props = this.props,
        children = _props.children,
        component = _props.component,
        render = _props.render;
    var _context$router = this.context.router,
        history = _context$router.history,
        route = _context$router.route,
        staticContext = _context$router.staticContext;

    var location = this.props.location || route.location;
    var props = { match: match, location: location, history: history, staticContext: staticContext };

    if (component) return match ? _react2.default.createElement(component, props) : null;

    if (render) return match ? render(props) : null;

    if (typeof children === "function") return children(props);

    if (children && !isEmptyChildren(children)) return _react2.default.Children.only(children);

    return null;
  };

  return Route;
}(_react2.default.Component);

Route.propTypes = {
  computedMatch: _propTypes2.default.object, // private, from <Switch>
  path: _propTypes2.default.string,
  exact: _propTypes2.default.bool,
  strict: _propTypes2.default.bool,
  sensitive: _propTypes2.default.bool,
  component: _propTypes2.default.func,
  render: _propTypes2.default.func,
  children: _propTypes2.default.oneOfType([_propTypes2.default.func, _propTypes2.default.node]),
  location: _propTypes2.default.object
};
Route.contextTypes = {
  router: _propTypes2.default.shape({
    history: _propTypes2.default.object.isRequired,
    route: _propTypes2.default.object.isRequired,
    staticContext: _propTypes2.default.object
  })
};
Route.childContextTypes = {
  router: _propTypes2.default.object.isRequired
};
exports.default = Route;
},{"./matchPath":116,"invariant":41,"prop-types":50,"react":undefined,"warning":117}],112:[function(require,module,exports){
"use strict";

exports.__esModule = true;

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _warning = require("warning");

var _warning2 = _interopRequireDefault(_warning);

var _invariant = require("invariant");

var _invariant2 = _interopRequireDefault(_invariant);

var _react = require("react");

var _react2 = _interopRequireDefault(_react);

var _propTypes = require("prop-types");

var _propTypes2 = _interopRequireDefault(_propTypes);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

/**
 * The public API for putting history on context.
 */
var Router = function (_React$Component) {
  _inherits(Router, _React$Component);

  function Router() {
    var _temp, _this, _ret;

    _classCallCheck(this, Router);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = _possibleConstructorReturn(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this.state = {
      match: _this.computeMatch(_this.props.history.location.pathname)
    }, _temp), _possibleConstructorReturn(_this, _ret);
  }

  Router.prototype.getChildContext = function getChildContext() {
    return {
      router: _extends({}, this.context.router, {
        history: this.props.history,
        route: {
          location: this.props.history.location,
          match: this.state.match
        }
      })
    };
  };

  Router.prototype.computeMatch = function computeMatch(pathname) {
    return {
      path: "/",
      url: "/",
      params: {},
      isExact: pathname === "/"
    };
  };

  Router.prototype.componentWillMount = function componentWillMount() {
    var _this2 = this;

    var _props = this.props,
        children = _props.children,
        history = _props.history;


    (0, _invariant2.default)(children == null || _react2.default.Children.count(children) === 1, "A <Router> may have only one child element");

    // Do this here so we can setState when a <Redirect> changes the
    // location in componentWillMount. This happens e.g. when doing
    // server rendering using a <StaticRouter>.
    this.unlisten = history.listen(function () {
      _this2.setState({
        match: _this2.computeMatch(history.location.pathname)
      });
    });
  };

  Router.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {
    (0, _warning2.default)(this.props.history === nextProps.history, "You cannot change <Router history>");
  };

  Router.prototype.componentWillUnmount = function componentWillUnmount() {
    this.unlisten();
  };

  Router.prototype.render = function render() {
    var children = this.props.children;

    return children ? _react2.default.Children.only(children) : null;
  };

  return Router;
}(_react2.default.Component);

Router.propTypes = {
  history: _propTypes2.default.object.isRequired,
  children: _propTypes2.default.node
};
Router.contextTypes = {
  router: _propTypes2.default.object
};
Router.childContextTypes = {
  router: _propTypes2.default.object.isRequired
};
exports.default = Router;
},{"invariant":41,"prop-types":50,"react":undefined,"warning":117}],113:[function(require,module,exports){
"use strict";

exports.__esModule = true;

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _warning = require("warning");

var _warning2 = _interopRequireDefault(_warning);

var _invariant = require("invariant");

var _invariant2 = _interopRequireDefault(_invariant);

var _react = require("react");

var _react2 = _interopRequireDefault(_react);

var _propTypes = require("prop-types");

var _propTypes2 = _interopRequireDefault(_propTypes);

var _history = require("history");

var _Router = require("./Router");

var _Router2 = _interopRequireDefault(_Router);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var addLeadingSlash = function addLeadingSlash(path) {
  return path.charAt(0) === "/" ? path : "/" + path;
};

var addBasename = function addBasename(basename, location) {
  if (!basename) return location;

  return _extends({}, location, {
    pathname: addLeadingSlash(basename) + location.pathname
  });
};

var stripBasename = function stripBasename(basename, location) {
  if (!basename) return location;

  var base = addLeadingSlash(basename);

  if (location.pathname.indexOf(base) !== 0) return location;

  return _extends({}, location, {
    pathname: location.pathname.substr(base.length)
  });
};

var createURL = function createURL(location) {
  return typeof location === "string" ? location : (0, _history.createPath)(location);
};

var staticHandler = function staticHandler(methodName) {
  return function () {
    (0, _invariant2.default)(false, "You cannot %s with <StaticRouter>", methodName);
  };
};

var noop = function noop() {};

/**
 * The public top-level API for a "static" <Router>, so-called because it
 * can't actually change the current location. Instead, it just records
 * location changes in a context object. Useful mainly in testing and
 * server-rendering scenarios.
 */

var StaticRouter = function (_React$Component) {
  _inherits(StaticRouter, _React$Component);

  function StaticRouter() {
    var _temp, _this, _ret;

    _classCallCheck(this, StaticRouter);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = _possibleConstructorReturn(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this.createHref = function (path) {
      return addLeadingSlash(_this.props.basename + createURL(path));
    }, _this.handlePush = function (location) {
      var _this$props = _this.props,
          basename = _this$props.basename,
          context = _this$props.context;

      context.action = "PUSH";
      context.location = addBasename(basename, (0, _history.createLocation)(location));
      context.url = createURL(context.location);
    }, _this.handleReplace = function (location) {
      var _this$props2 = _this.props,
          basename = _this$props2.basename,
          context = _this$props2.context;

      context.action = "REPLACE";
      context.location = addBasename(basename, (0, _history.createLocation)(location));
      context.url = createURL(context.location);
    }, _this.handleListen = function () {
      return noop;
    }, _this.handleBlock = function () {
      return noop;
    }, _temp), _possibleConstructorReturn(_this, _ret);
  }

  StaticRouter.prototype.getChildContext = function getChildContext() {
    return {
      router: {
        staticContext: this.props.context
      }
    };
  };

  StaticRouter.prototype.componentWillMount = function componentWillMount() {
    (0, _warning2.default)(!this.props.history, "<StaticRouter> ignores the history prop. To use a custom history, " + "use `import { Router }` instead of `import { StaticRouter as Router }`.");
  };

  StaticRouter.prototype.render = function render() {
    var _props = this.props,
        basename = _props.basename,
        context = _props.context,
        location = _props.location,
        props = _objectWithoutProperties(_props, ["basename", "context", "location"]);

    var history = {
      createHref: this.createHref,
      action: "POP",
      location: stripBasename(basename, (0, _history.createLocation)(location)),
      push: this.handlePush,
      replace: this.handleReplace,
      go: staticHandler("go"),
      goBack: staticHandler("goBack"),
      goForward: staticHandler("goForward"),
      listen: this.handleListen,
      block: this.handleBlock
    };

    return _react2.default.createElement(_Router2.default, _extends({}, props, { history: history }));
  };

  return StaticRouter;
}(_react2.default.Component);

StaticRouter.propTypes = {
  basename: _propTypes2.default.string,
  context: _propTypes2.default.object.isRequired,
  location: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.object])
};
StaticRouter.defaultProps = {
  basename: "",
  location: "/"
};
StaticRouter.childContextTypes = {
  router: _propTypes2.default.object.isRequired
};
exports.default = StaticRouter;
},{"./Router":112,"history":39,"invariant":41,"prop-types":50,"react":undefined,"warning":117}],114:[function(require,module,exports){
"use strict";

exports.__esModule = true;

var _react = require("react");

var _react2 = _interopRequireDefault(_react);

var _propTypes = require("prop-types");

var _propTypes2 = _interopRequireDefault(_propTypes);

var _warning = require("warning");

var _warning2 = _interopRequireDefault(_warning);

var _invariant = require("invariant");

var _invariant2 = _interopRequireDefault(_invariant);

var _matchPath = require("./matchPath");

var _matchPath2 = _interopRequireDefault(_matchPath);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

/**
 * The public API for rendering the first <Route> that matches.
 */
var Switch = function (_React$Component) {
  _inherits(Switch, _React$Component);

  function Switch() {
    _classCallCheck(this, Switch);

    return _possibleConstructorReturn(this, _React$Component.apply(this, arguments));
  }

  Switch.prototype.componentWillMount = function componentWillMount() {
    (0, _invariant2.default)(this.context.router, "You should not use <Switch> outside a <Router>");
  };

  Switch.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {
    (0, _warning2.default)(!(nextProps.location && !this.props.location), '<Switch> elements should not change from uncontrolled to controlled (or vice versa). You initially used no "location" prop and then provided one on a subsequent render.');

    (0, _warning2.default)(!(!nextProps.location && this.props.location), '<Switch> elements should not change from controlled to uncontrolled (or vice versa). You provided a "location" prop initially but omitted it on a subsequent render.');
  };

  Switch.prototype.render = function render() {
    var route = this.context.router.route;
    var children = this.props.children;

    var location = this.props.location || route.location;

    var match = void 0,
        child = void 0;
    _react2.default.Children.forEach(children, function (element) {
      if (match == null && _react2.default.isValidElement(element)) {
        var _element$props = element.props,
            pathProp = _element$props.path,
            exact = _element$props.exact,
            strict = _element$props.strict,
            sensitive = _element$props.sensitive,
            from = _element$props.from;

        var path = pathProp || from;

        child = element;
        match = (0, _matchPath2.default)(location.pathname, { path: path, exact: exact, strict: strict, sensitive: sensitive }, route.match);
      }
    });

    return match ? _react2.default.cloneElement(child, { location: location, computedMatch: match }) : null;
  };

  return Switch;
}(_react2.default.Component);

Switch.contextTypes = {
  router: _propTypes2.default.shape({
    route: _propTypes2.default.object.isRequired
  }).isRequired
};
Switch.propTypes = {
  children: _propTypes2.default.node,
  location: _propTypes2.default.object
};
exports.default = Switch;
},{"./matchPath":116,"invariant":41,"prop-types":50,"react":undefined,"warning":117}],115:[function(require,module,exports){
"use strict";

exports.__esModule = true;

var _pathToRegexp = require("path-to-regexp");

var _pathToRegexp2 = _interopRequireDefault(_pathToRegexp);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var patternCache = {};
var cacheLimit = 10000;
var cacheCount = 0;

var compileGenerator = function compileGenerator(pattern) {
  var cacheKey = pattern;
  var cache = patternCache[cacheKey] || (patternCache[cacheKey] = {});

  if (cache[pattern]) return cache[pattern];

  var compiledGenerator = _pathToRegexp2.default.compile(pattern);

  if (cacheCount < cacheLimit) {
    cache[pattern] = compiledGenerator;
    cacheCount++;
  }

  return compiledGenerator;
};

/**
 * Public API for generating a URL pathname from a pattern and parameters.
 */
var generatePath = function generatePath() {
  var pattern = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : "/";
  var params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

  if (pattern === "/") {
    return pattern;
  }
  var generator = compileGenerator(pattern);
  return generator(params, { pretty: true });
};

exports.default = generatePath;
},{"path-to-regexp":45}],116:[function(require,module,exports){
"use strict";

exports.__esModule = true;

var _pathToRegexp = require("path-to-regexp");

var _pathToRegexp2 = _interopRequireDefault(_pathToRegexp);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var patternCache = {};
var cacheLimit = 10000;
var cacheCount = 0;

var compilePath = function compilePath(pattern, options) {
  var cacheKey = "" + options.end + options.strict + options.sensitive;
  var cache = patternCache[cacheKey] || (patternCache[cacheKey] = {});

  if (cache[pattern]) return cache[pattern];

  var keys = [];
  var re = (0, _pathToRegexp2.default)(pattern, keys, options);
  var compiledPattern = { re: re, keys: keys };

  if (cacheCount < cacheLimit) {
    cache[pattern] = compiledPattern;
    cacheCount++;
  }

  return compiledPattern;
};

/**
 * Public API for matching a URL pathname to a path pattern.
 */
var matchPath = function matchPath(pathname) {
  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
  var parent = arguments[2];

  if (typeof options === "string") options = { path: options };

  var _options = options,
      path = _options.path,
      _options$exact = _options.exact,
      exact = _options$exact === undefined ? false : _options$exact,
      _options$strict = _options.strict,
      strict = _options$strict === undefined ? false : _options$strict,
      _options$sensitive = _options.sensitive,
      sensitive = _options$sensitive === undefined ? false : _options$sensitive;


  if (path == null) return parent;

  var _compilePath = compilePath(path, { end: exact, strict: strict, sensitive: sensitive }),
      re = _compilePath.re,
      keys = _compilePath.keys;

  var match = re.exec(pathname);

  if (!match) return null;

  var url = match[0],
      values = match.slice(1);

  var isExact = pathname === url;

  if (exact && !isExact) return null;

  return {
    path: path, // the path pattern used to match
    url: path === "/" && url === "" ? "/" : url, // the matched portion of the URL
    isExact: isExact, // whether or not we matched exactly
    params: keys.reduce(function (memo, key, index) {
      memo[key.name] = values[index];
      return memo;
    }, {})
  };
};

exports.default = matchPath;
},{"path-to-regexp":45}],117:[function(require,module,exports){
(function (process){
/**
 * Copyright (c) 2014-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

'use strict';

/**
 * Similar to invariant but only logs a warning if the condition is not met.
 * This can be used to log issues in development environments in critical
 * paths. Removing the logging code for production environments will keep the
 * same logic and follow the same code paths.
 */

var __DEV__ = process.env.NODE_ENV !== 'production';

var warning = function() {};

if (__DEV__) {
  var printWarning = function printWarning(format, args) {
    var len = arguments.length;
    args = new Array(len > 1 ? len - 1 : 0);
    for (var key = 1; key < len; key++) {
      args[key - 1] = arguments[key];
    }
    var argIndex = 0;
    var message = 'Warning: ' +
      format.replace(/%s/g, function() {
        return args[argIndex++];
      });
    if (typeof console !== 'undefined') {
      console.error(message);
    }
    try {
      // --- Welcome to debugging React ---
      // This error was thrown as a convenience so that you can use this stack
      // to find the callsite that caused this warning to fire.
      throw new Error(message);
    } catch (x) {}
  }

  warning = function(condition, format, args) {
    var len = arguments.length;
    args = new Array(len > 2 ? len - 2 : 0);
    for (var key = 2; key < len; key++) {
      args[key - 2] = arguments[key];
    }
    if (format === undefined) {
      throw new Error(
          '`warning(condition, format, ...args)` requires a warning ' +
          'message argument'
      );
    }
    if (!condition) {
      printWarning.apply(null, [format].concat(args));
    }
  };
}

module.exports = warning;

}).call(this,require('_process'))

},{"_process":46}],118:[function(require,module,exports){
"use strict";

exports.__esModule = true;

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _react = require("react");

var _react2 = _interopRequireDefault(_react);

var _propTypes = require("prop-types");

var _propTypes2 = _interopRequireDefault(_propTypes);

var _hoistNonReactStatics = require("hoist-non-react-statics");

var _hoistNonReactStatics2 = _interopRequireDefault(_hoistNonReactStatics);

var _Route = require("./Route");

var _Route2 = _interopRequireDefault(_Route);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

/**
 * A public higher-order component to access the imperative API
 */
var withRouter = function withRouter(Component) {
  var C = function C(props) {
    var wrappedComponentRef = props.wrappedComponentRef,
        remainingProps = _objectWithoutProperties(props, ["wrappedComponentRef"]);

    return _react2.default.createElement(_Route2.default, {
      children: function children(routeComponentProps) {
        return _react2.default.createElement(Component, _extends({}, remainingProps, routeComponentProps, {
          ref: wrappedComponentRef
        }));
      }
    });
  };

  C.displayName = "withRouter(" + (Component.displayName || Component.name) + ")";
  C.WrappedComponent = Component;
  C.propTypes = {
    wrappedComponentRef: _propTypes2.default.func
  };

  return (0, _hoistNonReactStatics2.default)(C, Component);
};

exports.default = withRouter;
},{"./Route":111,"hoist-non-react-statics":40,"prop-types":50,"react":undefined}],119:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Step = function (_Component) {
  _inherits(Step, _Component);

  function Step() {
    _classCallCheck(this, Step);

    var _this = _possibleConstructorReturn(this, (Step.__proto__ || Object.getPrototypeOf(Step)).call(this));

    _this.getStyles = _this.getStyles.bind(_this);
    return _this;
  }

  _createClass(Step, [{
    key: 'getStyles',
    value: function getStyles() {
      var _props = this.props,
          activeColor = _props.activeColor,
          completeColor = _props.completeColor,
          defaultColor = _props.defaultColor,
          circleFontColor = _props.circleFontColor,
          activeTitleColor = _props.activeTitleColor,
          completeTitleColor = _props.completeTitleColor,
          defaultTitleColor = _props.defaultTitleColor,
          size = _props.size,
          circleFontSize = _props.circleFontSize,
          titleFontSize = _props.titleFontSize,
          circleTop = _props.circleTop,
          titleTop = _props.titleTop,
          width = _props.width,
          completeOpacity = _props.completeOpacity,
          activeOpacity = _props.activeOpacity,
          defaultOpacity = _props.defaultOpacity,
          completeTitleOpacity = _props.completeTitleOpacity,
          activeTitleOpacity = _props.activeTitleOpacity,
          defaultTitleOpacity = _props.defaultTitleOpacity,
          barStyle = _props.barStyle,
          defaultBarColor = _props.defaultBarColor,
          completeBarColor = _props.completeBarColor,
          defaultBorderColor = _props.defaultBorderColor,
          completeBorderColor = _props.completeBorderColor,
          activeBorderColor = _props.activeBorderColor,
          defaultBorderStyle = _props.defaultBorderStyle,
          completeBorderStyle = _props.completeBorderStyle,
          activeBorderStyle = _props.activeBorderStyle,
          lineMarginOffset = _props.lineMarginOffset,
          defaultBorderWidth = _props.defaultBorderWidth;


      return {
        step: {
          width: width + '%',
          display: 'table-cell',
          position: 'relative',
          paddingTop: circleTop
        },
        circle: {
          width: size,
          height: size,
          margin: '0 auto',
          backgroundColor: defaultColor,
          borderRadius: '50%',
          textAlign: 'center',
          padding: 1,
          fontSize: circleFontSize,
          color: circleFontColor,
          display: 'block',
          opacity: defaultOpacity,
          borderWidth: defaultBorderColor ? defaultBorderWidth : 0,
          borderColor: defaultBorderColor,
          borderStyle: defaultBorderStyle
        },
        activeCircle: {
          backgroundColor: activeColor,
          opacity: activeOpacity,
          borderWidth: activeBorderColor ? defaultBorderWidth : 0,
          borderColor: activeBorderColor,
          borderStyle: activeBorderStyle
        },
        completedCircle: {
          backgroundColor: completeColor,
          opacity: completeOpacity,
          borderWidth: completeBorderColor ? defaultBorderWidth : 0,
          borderColor: completeBorderColor,
          borderStyle: completeBorderStyle
        },
        index: {
          lineHeight: size + circleFontSize / 4 + 'px',
          color: circleFontColor
        },
        title: {
          marginTop: titleTop,
          fontSize: titleFontSize,
          fontWeight: '300',
          textAlign: 'center',
          display: 'block',
          color: defaultTitleColor,
          opacity: defaultTitleOpacity
        },
        activeTitle: {
          color: activeTitleColor,
          opacity: activeTitleOpacity
        },
        completedTitle: {
          color: completeTitleColor,
          opacity: completeTitleOpacity
        },
        leftBar: {
          position: 'absolute',
          top: circleTop + size / 2,
          height: 1,
          borderTopStyle: barStyle,
          borderTopWidth: 1,
          borderTopColor: defaultBarColor,
          left: 0,
          right: '50%',
          marginRight: size / 2 + lineMarginOffset,
          opacity: defaultOpacity
        },
        rightBar: {
          position: 'absolute',
          top: circleTop + size / 2,
          height: 1,
          borderTopStyle: barStyle,
          borderTopWidth: 1,
          borderTopColor: defaultBarColor,
          right: 0,
          left: '50%',
          marginLeft: size / 2 + lineMarginOffset,
          opacity: defaultOpacity
        },
        completedBar: {
          borderTopStyle: barStyle,
          borderTopWidth: 1,
          borderTopColor: completeBarColor,
          opacity: completeOpacity
        }
      };
    }
  }, {
    key: 'render',
    value: function render() {
      var _props2 = this.props,
          title = _props2.title,
          icon = _props2.icon,
          index = _props2.index,
          active = _props2.active,
          completed = _props2.completed,
          first = _props2.first,
          isLast = _props2.isLast,
          href = _props2.href,
          onClick = _props2.onClick;


      var styles = this.getStyles();
      var circleStyle = Object.assign(styles.circle, completed ? styles.completedCircle : {}, active ? styles.activeCircle : {});
      var titleStyle = Object.assign(styles.title, completed ? styles.completedTitle : {}, active ? styles.activeTitle : {});
      var leftStyle = Object.assign(styles.leftBar, active || completed ? styles.completedBar : {});
      var rightStyle = Object.assign(styles.rightBar, completed ? styles.completedBar : {});

      var stepContent = icon ? _react2.default.createElement('img', { src: icon, alt: index + 1 }) : index + 1;

      return _react2.default.createElement(
        'div',
        { style: styles.step },
        _react2.default.createElement(
          'div',
          { style: circleStyle },
          active || completed ? _react2.default.createElement(
            'a',
            { href: href, onClick: onClick, style: styles.index },
            stepContent
          ) : _react2.default.createElement(
            'span',
            { style: styles.index },
            stepContent
          )
        ),
        active || completed ? _react2.default.createElement(
          'a',
          { href: href, onClick: onClick, style: titleStyle },
          title
        ) : _react2.default.createElement(
          'div',
          { style: titleStyle },
          title
        ),
        !first && _react2.default.createElement('div', { style: leftStyle }),
        !isLast && _react2.default.createElement('div', { style: rightStyle })
      );
    }
  }]);

  return Step;
}(_react.Component);

exports.default = Step;


Step.defaultProps = {
  activeColor: '#5096FF',
  completeColor: '#5096FF',
  defaultColor: '#E0E0E0',
  activeTitleColor: '#000',
  completeTitleColor: '#000',
  defaultTitleColor: '#757575',
  circleFontColor: '#FFF',
  size: 32,
  circleFontSize: 16,
  titleFontSize: 16,
  circleTop: 24,
  titleTop: 8,
  defaultBarColor: '#E0E0E0',
  barStyle: 'solid',
  borderStyle: 'solid',
  lineMarginOffset: 4,
  defaultBorderWidth: 3
};

Step.propTypes = {
  width: _propTypes.PropTypes.number.isRequired,
  activeColor: _propTypes.PropTypes.string,
  completeColor: _propTypes.PropTypes.string,
  defaultColor: _propTypes.PropTypes.string,
  activeTitleColor: _propTypes.PropTypes.string,
  completeTitleColor: _propTypes.PropTypes.string,
  defaultTitleColor: _propTypes.PropTypes.string,
  circleFontColor: _propTypes.PropTypes.string,
  size: _propTypes.PropTypes.number,
  circleFontSize: _propTypes.PropTypes.number,
  titleFontSize: _propTypes.PropTypes.number,
  circleTop: _propTypes.PropTypes.number,
  titleTop: _propTypes.PropTypes.number,
  title: _propTypes.PropTypes.string,
  index: _propTypes.PropTypes.number,
  active: _propTypes.PropTypes.bool,
  completed: _propTypes.PropTypes.bool,
  first: _propTypes.PropTypes.bool,
  isLast: _propTypes.PropTypes.bool,
  completeOpacity: _propTypes.PropTypes.string,
  activeOpacity: _propTypes.PropTypes.string,
  defaultOpacity: _propTypes.PropTypes.string,
  completeTitleOpacity: _propTypes.PropTypes.string,
  activeTitleOpacity: _propTypes.PropTypes.string,
  defaultTitleOpacity: _propTypes.PropTypes.string,
  barStyle: _propTypes.PropTypes.string,
  defaultBarColor: _propTypes.PropTypes.string,
  completeBarColor: _propTypes.PropTypes.string,
  defaultBorderColor: _propTypes.PropTypes.string,
  completeBorderColor: _propTypes.PropTypes.string,
  activeBorderColor: _propTypes.PropTypes.string,
  defaultBorderStyle: _propTypes.PropTypes.string,
  completeBorderStyle: _propTypes.PropTypes.string,
  activeBorderStyle: _propTypes.PropTypes.string,
  lineMarginOffset: _propTypes.PropTypes.number,
  defaultBorderWidth: _propTypes.PropTypes.number
};
},{"prop-types":50,"react":undefined}],120:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _Step = require('./Step');

var _Step2 = _interopRequireDefault(_Step);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var styles = {
  root: {
    width: '100%',
    minHeight: 0,
    padding: 0
  },
  stepper: {
    display: 'table',
    width: '100%',
    margin: '0 auto'
  }
};

function Stepper(_ref) {
  var activeStep = _ref.activeStep,
      steps = _ref.steps,
      disabledSteps = _ref.disabledSteps,
      activeColor = _ref.activeColor,
      completeColor = _ref.completeColor,
      defaultColor = _ref.defaultColor,
      circleFontColor = _ref.circleFontColor,
      activeTitleColor = _ref.activeTitleColor,
      completeTitleColor = _ref.completeTitleColor,
      defaultTitleColor = _ref.defaultTitleColor,
      size = _ref.size,
      circleFontSize = _ref.circleFontSize,
      titleFontSize = _ref.titleFontSize,
      circleTop = _ref.circleTop,
      titleTop = _ref.titleTop,
      completeOpacity = _ref.completeOpacity,
      activeOpacity = _ref.activeOpacity,
      defaultOpacity = _ref.defaultOpacity,
      completeTitleOpacity = _ref.completeTitleOpacity,
      activeTitleOpacity = _ref.activeTitleOpacity,
      defaultTitleOpacity = _ref.defaultTitleOpacity,
      barStyle = _ref.barStyle,
      defaultBorderColor = _ref.defaultBorderColor,
      completeBorderColor = _ref.completeBorderColor,
      activeBorderColor = _ref.activeBorderColor,
      defaultBorderStyle = _ref.defaultBorderStyle,
      completeBorderStyle = _ref.completeBorderStyle,
      activeBorderStyle = _ref.activeBorderStyle,
      defaultBarColor = _ref.defaultBarColor,
      completeBarColor = _ref.completeBarColor,
      lineMarginOffset = _ref.lineMarginOffset,
      defaultBorderWidth = _ref.defaultBorderWidth;

  return _react2.default.createElement(
    'div',
    { style: styles.root },
    _react2.default.createElement(
      'div',
      { style: styles.stepper },
      steps.map(function (step, index) {
        return _react2.default.createElement(_Step2.default, {
          key: index,
          width: 100 / steps.length,
          title: step.title,
          icon: step.icon,
          href: step.href,
          onClick: step.onClick,
          active: !(disabledSteps || []).includes(index) && index === activeStep,
          completed: !(disabledSteps || []).includes(index) && index < activeStep,
          first: index === 0,
          isLast: index === steps.length - 1,
          index: index,
          activeColor: activeColor,
          completeColor: completeColor,
          defaultColor: defaultColor,
          circleFontColor: circleFontColor,
          activeTitleColor: activeTitleColor,
          completeTitleColor: completeTitleColor,
          defaultTitleColor: defaultTitleColor,
          size: size,
          circleFontSize: circleFontSize,
          titleFontSize: titleFontSize,
          circleTop: circleTop,
          titleTop: titleTop,
          defaultOpacity: defaultOpacity,
          completeOpacity: completeOpacity,
          activeOpacity: activeOpacity,
          defaultTitleOpacity: defaultTitleOpacity,
          completeTitleOpacity: completeTitleOpacity,
          activeTitleOpacity: activeTitleOpacity,
          barStyle: barStyle,
          defaultBorderColor: defaultBorderColor,
          completeBorderColor: completeBorderColor,
          activeBorderColor: activeBorderColor,
          defaultBorderStyle: defaultBorderStyle,
          defaultBorderWidth: defaultBorderWidth,
          completeBorderStyle: completeBorderStyle,
          activeBorderStyle: activeBorderStyle,
          defaultBarColor: defaultBarColor,
          completeBarColor: completeBarColor,
          lineMarginOffset: lineMarginOffset
        });
      })
    )
  );
}

Stepper.defaultProps = {
  activeStep: 0
};

Stepper.propTypes = {
  activeStep: _propTypes.PropTypes.number,
  steps: _propTypes.PropTypes.array,
  activeColor: _propTypes.PropTypes.string,
  completeColor: _propTypes.PropTypes.string,
  defaultColor: _propTypes.PropTypes.string,
  activeTitleColor: _propTypes.PropTypes.string,
  completeTitleColor: _propTypes.PropTypes.string,
  defaultTitleColor: _propTypes.PropTypes.string,
  circleFontColor: _propTypes.PropTypes.string,
  size: _propTypes.PropTypes.number,
  circleFontSize: _propTypes.PropTypes.number,
  titleFontSize: _propTypes.PropTypes.number,
  circleTop: _propTypes.PropTypes.number,
  titleTop: _propTypes.PropTypes.number,
  defaultOpacity: _propTypes.PropTypes.string,
  completeOpacity: _propTypes.PropTypes.string,
  activeOpacity: _propTypes.PropTypes.string,
  defaultTitleOpacity: _propTypes.PropTypes.string,
  completeTitleOpacity: _propTypes.PropTypes.string,
  activeTitleOpacity: _propTypes.PropTypes.string,
  barStyle: _propTypes.PropTypes.string,
  defaultBarColor: _propTypes.PropTypes.string,
  completeBarColor: _propTypes.PropTypes.string,
  defaultBorderColor: _propTypes.PropTypes.string,
  completeBorderColor: _propTypes.PropTypes.string,
  activeBorderColor: _propTypes.PropTypes.string,
  defaultBorderStyle: _propTypes.PropTypes.string,
  completeBorderStyle: _propTypes.PropTypes.string,
  activeBorderStyle: _propTypes.PropTypes.string,
  lineMarginOffset: _propTypes.PropTypes.number,
  defaultBorderWidth: _propTypes.PropTypes.number
};

exports.default = Stepper;
},{"./Step":119,"prop-types":50,"react":undefined}],121:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _Stepper = require('./Stepper');

var _Stepper2 = _interopRequireDefault(_Stepper);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = _Stepper2.default;
},{"./Stepper":120}],122:[function(require,module,exports){
(function (global){
(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :
    typeof define === 'function' && define.amd ? define(factory) :
    (global.ResizeObserver = factory());
}(this, (function () { 'use strict';

    /**
     * A collection of shims that provide minimal functionality of the ES6 collections.
     *
     * These implementations are not meant to be used outside of the ResizeObserver
     * modules as they cover only a limited range of use cases.
     */
    /* eslint-disable require-jsdoc, valid-jsdoc */
    var MapShim = (function () {
        if (typeof Map !== 'undefined') {
            return Map;
        }
        /**
         * Returns index in provided array that matches the specified key.
         *
         * @param {Array<Array>} arr
         * @param {*} key
         * @returns {number}
         */
        function getIndex(arr, key) {
            var result = -1;
            arr.some(function (entry, index) {
                if (entry[0] === key) {
                    result = index;
                    return true;
                }
                return false;
            });
            return result;
        }
        return /** @class */ (function () {
            function class_1() {
                this.__entries__ = [];
            }
            Object.defineProperty(class_1.prototype, "size", {
                /**
                 * @returns {boolean}
                 */
                get: function () {
                    return this.__entries__.length;
                },
                enumerable: true,
                configurable: true
            });
            /**
             * @param {*} key
             * @returns {*}
             */
            class_1.prototype.get = function (key) {
                var index = getIndex(this.__entries__, key);
                var entry = this.__entries__[index];
                return entry && entry[1];
            };
            /**
             * @param {*} key
             * @param {*} value
             * @returns {void}
             */
            class_1.prototype.set = function (key, value) {
                var index = getIndex(this.__entries__, key);
                if (~index) {
                    this.__entries__[index][1] = value;
                }
                else {
                    this.__entries__.push([key, value]);
                }
            };
            /**
             * @param {*} key
             * @returns {void}
             */
            class_1.prototype.delete = function (key) {
                var entries = this.__entries__;
                var index = getIndex(entries, key);
                if (~index) {
                    entries.splice(index, 1);
                }
            };
            /**
             * @param {*} key
             * @returns {void}
             */
            class_1.prototype.has = function (key) {
                return !!~getIndex(this.__entries__, key);
            };
            /**
             * @returns {void}
             */
            class_1.prototype.clear = function () {
                this.__entries__.splice(0);
            };
            /**
             * @param {Function} callback
             * @param {*} [ctx=null]
             * @returns {void}
             */
            class_1.prototype.forEach = function (callback, ctx) {
                if (ctx === void 0) { ctx = null; }
                for (var _i = 0, _a = this.__entries__; _i < _a.length; _i++) {
                    var entry = _a[_i];
                    callback.call(ctx, entry[1], entry[0]);
                }
            };
            return class_1;
        }());
    })();

    /**
     * Detects whether window and document objects are available in current environment.
     */
    var isBrowser = typeof window !== 'undefined' && typeof document !== 'undefined' && window.document === document;

    // Returns global object of a current environment.
    var global$1 = (function () {
        if (typeof global !== 'undefined' && global.Math === Math) {
            return global;
        }
        if (typeof self !== 'undefined' && self.Math === Math) {
            return self;
        }
        if (typeof window !== 'undefined' && window.Math === Math) {
            return window;
        }
        // eslint-disable-next-line no-new-func
        return Function('return this')();
    })();

    /**
     * A shim for the requestAnimationFrame which falls back to the setTimeout if
     * first one is not supported.
     *
     * @returns {number} Requests' identifier.
     */
    var requestAnimationFrame$1 = (function () {
        if (typeof requestAnimationFrame === 'function') {
            // It's required to use a bounded function because IE sometimes throws
            // an "Invalid calling object" error if rAF is invoked without the global
            // object on the left hand side.
            return requestAnimationFrame.bind(global$1);
        }
        return function (callback) { return setTimeout(function () { return callback(Date.now()); }, 1000 / 60); };
    })();

    // Defines minimum timeout before adding a trailing call.
    var trailingTimeout = 2;
    /**
     * Creates a wrapper function which ensures that provided callback will be
     * invoked only once during the specified delay period.
     *
     * @param {Function} callback - Function to be invoked after the delay period.
     * @param {number} delay - Delay after which to invoke callback.
     * @returns {Function}
     */
    function throttle (callback, delay) {
        var leadingCall = false, trailingCall = false, lastCallTime = 0;
        /**
         * Invokes the original callback function and schedules new invocation if
         * the "proxy" was called during current request.
         *
         * @returns {void}
         */
        function resolvePending() {
            if (leadingCall) {
                leadingCall = false;
                callback();
            }
            if (trailingCall) {
                proxy();
            }
        }
        /**
         * Callback invoked after the specified delay. It will further postpone
         * invocation of the original function delegating it to the
         * requestAnimationFrame.
         *
         * @returns {void}
         */
        function timeoutCallback() {
            requestAnimationFrame$1(resolvePending);
        }
        /**
         * Schedules invocation of the original function.
         *
         * @returns {void}
         */
        function proxy() {
            var timeStamp = Date.now();
            if (leadingCall) {
                // Reject immediately following calls.
                if (timeStamp - lastCallTime < trailingTimeout) {
                    return;
                }
                // Schedule new call to be in invoked when the pending one is resolved.
                // This is important for "transitions" which never actually start
                // immediately so there is a chance that we might miss one if change
                // happens amids the pending invocation.
                trailingCall = true;
            }
            else {
                leadingCall = true;
                trailingCall = false;
                setTimeout(timeoutCallback, delay);
            }
            lastCallTime = timeStamp;
        }
        return proxy;
    }

    // Minimum delay before invoking the update of observers.
    var REFRESH_DELAY = 20;
    // A list of substrings of CSS properties used to find transition events that
    // might affect dimensions of observed elements.
    var transitionKeys = ['top', 'right', 'bottom', 'left', 'width', 'height', 'size', 'weight'];
    // Check if MutationObserver is available.
    var mutationObserverSupported = typeof MutationObserver !== 'undefined';
    /**
     * Singleton controller class which handles updates of ResizeObserver instances.
     */
    var ResizeObserverController = /** @class */ (function () {
        /**
         * Creates a new instance of ResizeObserverController.
         *
         * @private
         */
        function ResizeObserverController() {
            /**
             * Indicates whether DOM listeners have been added.
             *
             * @private {boolean}
             */
            this.connected_ = false;
            /**
             * Tells that controller has subscribed for Mutation Events.
             *
             * @private {boolean}
             */
            this.mutationEventsAdded_ = false;
            /**
             * Keeps reference to the instance of MutationObserver.
             *
             * @private {MutationObserver}
             */
            this.mutationsObserver_ = null;
            /**
             * A list of connected observers.
             *
             * @private {Array<ResizeObserverSPI>}
             */
            this.observers_ = [];
            this.onTransitionEnd_ = this.onTransitionEnd_.bind(this);
            this.refresh = throttle(this.refresh.bind(this), REFRESH_DELAY);
        }
        /**
         * Adds observer to observers list.
         *
         * @param {ResizeObserverSPI} observer - Observer to be added.
         * @returns {void}
         */
        ResizeObserverController.prototype.addObserver = function (observer) {
            if (!~this.observers_.indexOf(observer)) {
                this.observers_.push(observer);
            }
            // Add listeners if they haven't been added yet.
            if (!this.connected_) {
                this.connect_();
            }
        };
        /**
         * Removes observer from observers list.
         *
         * @param {ResizeObserverSPI} observer - Observer to be removed.
         * @returns {void}
         */
        ResizeObserverController.prototype.removeObserver = function (observer) {
            var observers = this.observers_;
            var index = observers.indexOf(observer);
            // Remove observer if it's present in registry.
            if (~index) {
                observers.splice(index, 1);
            }
            // Remove listeners if controller has no connected observers.
            if (!observers.length && this.connected_) {
                this.disconnect_();
            }
        };
        /**
         * Invokes the update of observers. It will continue running updates insofar
         * it detects changes.
         *
         * @returns {void}
         */
        ResizeObserverController.prototype.refresh = function () {
            var changesDetected = this.updateObservers_();
            // Continue running updates if changes have been detected as there might
            // be future ones caused by CSS transitions.
            if (changesDetected) {
                this.refresh();
            }
        };
        /**
         * Updates every observer from observers list and notifies them of queued
         * entries.
         *
         * @private
         * @returns {boolean} Returns "true" if any observer has detected changes in
         *      dimensions of it's elements.
         */
        ResizeObserverController.prototype.updateObservers_ = function () {
            // Collect observers that have active observations.
            var activeObservers = this.observers_.filter(function (observer) {
                return observer.gatherActive(), observer.hasActive();
            });
            // Deliver notifications in a separate cycle in order to avoid any
            // collisions between observers, e.g. when multiple instances of
            // ResizeObserver are tracking the same element and the callback of one
            // of them changes content dimensions of the observed target. Sometimes
            // this may result in notifications being blocked for the rest of observers.
            activeObservers.forEach(function (observer) { return observer.broadcastActive(); });
            return activeObservers.length > 0;
        };
        /**
         * Initializes DOM listeners.
         *
         * @private
         * @returns {void}
         */
        ResizeObserverController.prototype.connect_ = function () {
            // Do nothing if running in a non-browser environment or if listeners
            // have been already added.
            if (!isBrowser || this.connected_) {
                return;
            }
            // Subscription to the "Transitionend" event is used as a workaround for
            // delayed transitions. This way it's possible to capture at least the
            // final state of an element.
            document.addEventListener('transitionend', this.onTransitionEnd_);
            window.addEventListener('resize', this.refresh);
            if (mutationObserverSupported) {
                this.mutationsObserver_ = new MutationObserver(this.refresh);
                this.mutationsObserver_.observe(document, {
                    attributes: true,
                    childList: true,
                    characterData: true,
                    subtree: true
                });
            }
            else {
                document.addEventListener('DOMSubtreeModified', this.refresh);
                this.mutationEventsAdded_ = true;
            }
            this.connected_ = true;
        };
        /**
         * Removes DOM listeners.
         *
         * @private
         * @returns {void}
         */
        ResizeObserverController.prototype.disconnect_ = function () {
            // Do nothing if running in a non-browser environment or if listeners
            // have been already removed.
            if (!isBrowser || !this.connected_) {
                return;
            }
            document.removeEventListener('transitionend', this.onTransitionEnd_);
            window.removeEventListener('resize', this.refresh);
            if (this.mutationsObserver_) {
                this.mutationsObserver_.disconnect();
            }
            if (this.mutationEventsAdded_) {
                document.removeEventListener('DOMSubtreeModified', this.refresh);
            }
            this.mutationsObserver_ = null;
            this.mutationEventsAdded_ = false;
            this.connected_ = false;
        };
        /**
         * "Transitionend" event handler.
         *
         * @private
         * @param {TransitionEvent} event
         * @returns {void}
         */
        ResizeObserverController.prototype.onTransitionEnd_ = function (_a) {
            var _b = _a.propertyName, propertyName = _b === void 0 ? '' : _b;
            // Detect whether transition may affect dimensions of an element.
            var isReflowProperty = transitionKeys.some(function (key) {
                return !!~propertyName.indexOf(key);
            });
            if (isReflowProperty) {
                this.refresh();
            }
        };
        /**
         * Returns instance of the ResizeObserverController.
         *
         * @returns {ResizeObserverController}
         */
        ResizeObserverController.getInstance = function () {
            if (!this.instance_) {
                this.instance_ = new ResizeObserverController();
            }
            return this.instance_;
        };
        /**
         * Holds reference to the controller's instance.
         *
         * @private {ResizeObserverController}
         */
        ResizeObserverController.instance_ = null;
        return ResizeObserverController;
    }());

    /**
     * Defines non-writable/enumerable properties of the provided target object.
     *
     * @param {Object} target - Object for which to define properties.
     * @param {Object} props - Properties to be defined.
     * @returns {Object} Target object.
     */
    var defineConfigurable = (function (target, props) {
        for (var _i = 0, _a = Object.keys(props); _i < _a.length; _i++) {
            var key = _a[_i];
            Object.defineProperty(target, key, {
                value: props[key],
                enumerable: false,
                writable: false,
                configurable: true
            });
        }
        return target;
    });

    /**
     * Returns the global object associated with provided element.
     *
     * @param {Object} target
     * @returns {Object}
     */
    var getWindowOf = (function (target) {
        // Assume that the element is an instance of Node, which means that it
        // has the "ownerDocument" property from which we can retrieve a
        // corresponding global object.
        var ownerGlobal = target && target.ownerDocument && target.ownerDocument.defaultView;
        // Return the local global object if it's not possible extract one from
        // provided element.
        return ownerGlobal || global$1;
    });

    // Placeholder of an empty content rectangle.
    var emptyRect = createRectInit(0, 0, 0, 0);
    /**
     * Converts provided string to a number.
     *
     * @param {number|string} value
     * @returns {number}
     */
    function toFloat(value) {
        return parseFloat(value) || 0;
    }
    /**
     * Extracts borders size from provided styles.
     *
     * @param {CSSStyleDeclaration} styles
     * @param {...string} positions - Borders positions (top, right, ...)
     * @returns {number}
     */
    function getBordersSize(styles) {
        var positions = [];
        for (var _i = 1; _i < arguments.length; _i++) {
            positions[_i - 1] = arguments[_i];
        }
        return positions.reduce(function (size, position) {
            var value = styles['border-' + position + '-width'];
            return size + toFloat(value);
        }, 0);
    }
    /**
     * Extracts paddings sizes from provided styles.
     *
     * @param {CSSStyleDeclaration} styles
     * @returns {Object} Paddings box.
     */
    function getPaddings(styles) {
        var positions = ['top', 'right', 'bottom', 'left'];
        var paddings = {};
        for (var _i = 0, positions_1 = positions; _i < positions_1.length; _i++) {
            var position = positions_1[_i];
            var value = styles['padding-' + position];
            paddings[position] = toFloat(value);
        }
        return paddings;
    }
    /**
     * Calculates content rectangle of provided SVG element.
     *
     * @param {SVGGraphicsElement} target - Element content rectangle of which needs
     *      to be calculated.
     * @returns {DOMRectInit}
     */
    function getSVGContentRect(target) {
        var bbox = target.getBBox();
        return createRectInit(0, 0, bbox.width, bbox.height);
    }
    /**
     * Calculates content rectangle of provided HTMLElement.
     *
     * @param {HTMLElement} target - Element for which to calculate the content rectangle.
     * @returns {DOMRectInit}
     */
    function getHTMLElementContentRect(target) {
        // Client width & height properties can't be
        // used exclusively as they provide rounded values.
        var clientWidth = target.clientWidth, clientHeight = target.clientHeight;
        // By this condition we can catch all non-replaced inline, hidden and
        // detached elements. Though elements with width & height properties less
        // than 0.5 will be discarded as well.
        //
        // Without it we would need to implement separate methods for each of
        // those cases and it's not possible to perform a precise and performance
        // effective test for hidden elements. E.g. even jQuery's ':visible' filter
        // gives wrong results for elements with width & height less than 0.5.
        if (!clientWidth && !clientHeight) {
            return emptyRect;
        }
        var styles = getWindowOf(target).getComputedStyle(target);
        var paddings = getPaddings(styles);
        var horizPad = paddings.left + paddings.right;
        var vertPad = paddings.top + paddings.bottom;
        // Computed styles of width & height are being used because they are the
        // only dimensions available to JS that contain non-rounded values. It could
        // be possible to utilize the getBoundingClientRect if only it's data wasn't
        // affected by CSS transformations let alone paddings, borders and scroll bars.
        var width = toFloat(styles.width), height = toFloat(styles.height);
        // Width & height include paddings and borders when the 'border-box' box
        // model is applied (except for IE).
        if (styles.boxSizing === 'border-box') {
            // Following conditions are required to handle Internet Explorer which
            // doesn't include paddings and borders to computed CSS dimensions.
            //
            // We can say that if CSS dimensions + paddings are equal to the "client"
            // properties then it's either IE, and thus we don't need to subtract
            // anything, or an element merely doesn't have paddings/borders styles.
            if (Math.round(width + horizPad) !== clientWidth) {
                width -= getBordersSize(styles, 'left', 'right') + horizPad;
            }
            if (Math.round(height + vertPad) !== clientHeight) {
                height -= getBordersSize(styles, 'top', 'bottom') + vertPad;
            }
        }
        // Following steps can't be applied to the document's root element as its
        // client[Width/Height] properties represent viewport area of the window.
        // Besides, it's as well not necessary as the <html> itself neither has
        // rendered scroll bars nor it can be clipped.
        if (!isDocumentElement(target)) {
            // In some browsers (only in Firefox, actually) CSS width & height
            // include scroll bars size which can be removed at this step as scroll
            // bars are the only difference between rounded dimensions + paddings
            // and "client" properties, though that is not always true in Chrome.
            var vertScrollbar = Math.round(width + horizPad) - clientWidth;
            var horizScrollbar = Math.round(height + vertPad) - clientHeight;
            // Chrome has a rather weird rounding of "client" properties.
            // E.g. for an element with content width of 314.2px it sometimes gives
            // the client width of 315px and for the width of 314.7px it may give
            // 314px. And it doesn't happen all the time. So just ignore this delta
            // as a non-relevant.
            if (Math.abs(vertScrollbar) !== 1) {
                width -= vertScrollbar;
            }
            if (Math.abs(horizScrollbar) !== 1) {
                height -= horizScrollbar;
            }
        }
        return createRectInit(paddings.left, paddings.top, width, height);
    }
    /**
     * Checks whether provided element is an instance of the SVGGraphicsElement.
     *
     * @param {Element} target - Element to be checked.
     * @returns {boolean}
     */
    var isSVGGraphicsElement = (function () {
        // Some browsers, namely IE and Edge, don't have the SVGGraphicsElement
        // interface.
        if (typeof SVGGraphicsElement !== 'undefined') {
            return function (target) { return target instanceof getWindowOf(target).SVGGraphicsElement; };
        }
        // If it's so, then check that element is at least an instance of the
        // SVGElement and that it has the "getBBox" method.
        // eslint-disable-next-line no-extra-parens
        return function (target) { return (target instanceof getWindowOf(target).SVGElement &&
            typeof target.getBBox === 'function'); };
    })();
    /**
     * Checks whether provided element is a document element (<html>).
     *
     * @param {Element} target - Element to be checked.
     * @returns {boolean}
     */
    function isDocumentElement(target) {
        return target === getWindowOf(target).document.documentElement;
    }
    /**
     * Calculates an appropriate content rectangle for provided html or svg element.
     *
     * @param {Element} target - Element content rectangle of which needs to be calculated.
     * @returns {DOMRectInit}
     */
    function getContentRect(target) {
        if (!isBrowser) {
            return emptyRect;
        }
        if (isSVGGraphicsElement(target)) {
            return getSVGContentRect(target);
        }
        return getHTMLElementContentRect(target);
    }
    /**
     * Creates rectangle with an interface of the DOMRectReadOnly.
     * Spec: https://drafts.fxtf.org/geometry/#domrectreadonly
     *
     * @param {DOMRectInit} rectInit - Object with rectangle's x/y coordinates and dimensions.
     * @returns {DOMRectReadOnly}
     */
    function createReadOnlyRect(_a) {
        var x = _a.x, y = _a.y, width = _a.width, height = _a.height;
        // If DOMRectReadOnly is available use it as a prototype for the rectangle.
        var Constr = typeof DOMRectReadOnly !== 'undefined' ? DOMRectReadOnly : Object;
        var rect = Object.create(Constr.prototype);
        // Rectangle's properties are not writable and non-enumerable.
        defineConfigurable(rect, {
            x: x, y: y, width: width, height: height,
            top: y,
            right: x + width,
            bottom: height + y,
            left: x
        });
        return rect;
    }
    /**
     * Creates DOMRectInit object based on the provided dimensions and the x/y coordinates.
     * Spec: https://drafts.fxtf.org/geometry/#dictdef-domrectinit
     *
     * @param {number} x - X coordinate.
     * @param {number} y - Y coordinate.
     * @param {number} width - Rectangle's width.
     * @param {number} height - Rectangle's height.
     * @returns {DOMRectInit}
     */
    function createRectInit(x, y, width, height) {
        return { x: x, y: y, width: width, height: height };
    }

    /**
     * Class that is responsible for computations of the content rectangle of
     * provided DOM element and for keeping track of it's changes.
     */
    var ResizeObservation = /** @class */ (function () {
        /**
         * Creates an instance of ResizeObservation.
         *
         * @param {Element} target - Element to be observed.
         */
        function ResizeObservation(target) {
            /**
             * Broadcasted width of content rectangle.
             *
             * @type {number}
             */
            this.broadcastWidth = 0;
            /**
             * Broadcasted height of content rectangle.
             *
             * @type {number}
             */
            this.broadcastHeight = 0;
            /**
             * Reference to the last observed content rectangle.
             *
             * @private {DOMRectInit}
             */
            this.contentRect_ = createRectInit(0, 0, 0, 0);
            this.target = target;
        }
        /**
         * Updates content rectangle and tells whether it's width or height properties
         * have changed since the last broadcast.
         *
         * @returns {boolean}
         */
        ResizeObservation.prototype.isActive = function () {
            var rect = getContentRect(this.target);
            this.contentRect_ = rect;
            return (rect.width !== this.broadcastWidth ||
                rect.height !== this.broadcastHeight);
        };
        /**
         * Updates 'broadcastWidth' and 'broadcastHeight' properties with a data
         * from the corresponding properties of the last observed content rectangle.
         *
         * @returns {DOMRectInit} Last observed content rectangle.
         */
        ResizeObservation.prototype.broadcastRect = function () {
            var rect = this.contentRect_;
            this.broadcastWidth = rect.width;
            this.broadcastHeight = rect.height;
            return rect;
        };
        return ResizeObservation;
    }());

    var ResizeObserverEntry = /** @class */ (function () {
        /**
         * Creates an instance of ResizeObserverEntry.
         *
         * @param {Element} target - Element that is being observed.
         * @param {DOMRectInit} rectInit - Data of the element's content rectangle.
         */
        function ResizeObserverEntry(target, rectInit) {
            var contentRect = createReadOnlyRect(rectInit);
            // According to the specification following properties are not writable
            // and are also not enumerable in the native implementation.
            //
            // Property accessors are not being used as they'd require to define a
            // private WeakMap storage which may cause memory leaks in browsers that
            // don't support this type of collections.
            defineConfigurable(this, { target: target, contentRect: contentRect });
        }
        return ResizeObserverEntry;
    }());

    var ResizeObserverSPI = /** @class */ (function () {
        /**
         * Creates a new instance of ResizeObserver.
         *
         * @param {ResizeObserverCallback} callback - Callback function that is invoked
         *      when one of the observed elements changes it's content dimensions.
         * @param {ResizeObserverController} controller - Controller instance which
         *      is responsible for the updates of observer.
         * @param {ResizeObserver} callbackCtx - Reference to the public
         *      ResizeObserver instance which will be passed to callback function.
         */
        function ResizeObserverSPI(callback, controller, callbackCtx) {
            /**
             * Collection of resize observations that have detected changes in dimensions
             * of elements.
             *
             * @private {Array<ResizeObservation>}
             */
            this.activeObservations_ = [];
            /**
             * Registry of the ResizeObservation instances.
             *
             * @private {Map<Element, ResizeObservation>}
             */
            this.observations_ = new MapShim();
            if (typeof callback !== 'function') {
                throw new TypeError('The callback provided as parameter 1 is not a function.');
            }
            this.callback_ = callback;
            this.controller_ = controller;
            this.callbackCtx_ = callbackCtx;
        }
        /**
         * Starts observing provided element.
         *
         * @param {Element} target - Element to be observed.
         * @returns {void}
         */
        ResizeObserverSPI.prototype.observe = function (target) {
            if (!arguments.length) {
                throw new TypeError('1 argument required, but only 0 present.');
            }
            // Do nothing if current environment doesn't have the Element interface.
            if (typeof Element === 'undefined' || !(Element instanceof Object)) {
                return;
            }
            if (!(target instanceof getWindowOf(target).Element)) {
                throw new TypeError('parameter 1 is not of type "Element".');
            }
            var observations = this.observations_;
            // Do nothing if element is already being observed.
            if (observations.has(target)) {
                return;
            }
            observations.set(target, new ResizeObservation(target));
            this.controller_.addObserver(this);
            // Force the update of observations.
            this.controller_.refresh();
        };
        /**
         * Stops observing provided element.
         *
         * @param {Element} target - Element to stop observing.
         * @returns {void}
         */
        ResizeObserverSPI.prototype.unobserve = function (target) {
            if (!arguments.length) {
                throw new TypeError('1 argument required, but only 0 present.');
            }
            // Do nothing if current environment doesn't have the Element interface.
            if (typeof Element === 'undefined' || !(Element instanceof Object)) {
                return;
            }
            if (!(target instanceof getWindowOf(target).Element)) {
                throw new TypeError('parameter 1 is not of type "Element".');
            }
            var observations = this.observations_;
            // Do nothing if element is not being observed.
            if (!observations.has(target)) {
                return;
            }
            observations.delete(target);
            if (!observations.size) {
                this.controller_.removeObserver(this);
            }
        };
        /**
         * Stops observing all elements.
         *
         * @returns {void}
         */
        ResizeObserverSPI.prototype.disconnect = function () {
            this.clearActive();
            this.observations_.clear();
            this.controller_.removeObserver(this);
        };
        /**
         * Collects observation instances the associated element of which has changed
         * it's content rectangle.
         *
         * @returns {void}
         */
        ResizeObserverSPI.prototype.gatherActive = function () {
            var _this = this;
            this.clearActive();
            this.observations_.forEach(function (observation) {
                if (observation.isActive()) {
                    _this.activeObservations_.push(observation);
                }
            });
        };
        /**
         * Invokes initial callback function with a list of ResizeObserverEntry
         * instances collected from active resize observations.
         *
         * @returns {void}
         */
        ResizeObserverSPI.prototype.broadcastActive = function () {
            // Do nothing if observer doesn't have active observations.
            if (!this.hasActive()) {
                return;
            }
            var ctx = this.callbackCtx_;
            // Create ResizeObserverEntry instance for every active observation.
            var entries = this.activeObservations_.map(function (observation) {
                return new ResizeObserverEntry(observation.target, observation.broadcastRect());
            });
            this.callback_.call(ctx, entries, ctx);
            this.clearActive();
        };
        /**
         * Clears the collection of active observations.
         *
         * @returns {void}
         */
        ResizeObserverSPI.prototype.clearActive = function () {
            this.activeObservations_.splice(0);
        };
        /**
         * Tells whether observer has active observations.
         *
         * @returns {boolean}
         */
        ResizeObserverSPI.prototype.hasActive = function () {
            return this.activeObservations_.length > 0;
        };
        return ResizeObserverSPI;
    }());

    // Registry of internal observers. If WeakMap is not available use current shim
    // for the Map collection as it has all required methods and because WeakMap
    // can't be fully polyfilled anyway.
    var observers = typeof WeakMap !== 'undefined' ? new WeakMap() : new MapShim();
    /**
     * ResizeObserver API. Encapsulates the ResizeObserver SPI implementation
     * exposing only those methods and properties that are defined in the spec.
     */
    var ResizeObserver = /** @class */ (function () {
        /**
         * Creates a new instance of ResizeObserver.
         *
         * @param {ResizeObserverCallback} callback - Callback that is invoked when
         *      dimensions of the observed elements change.
         */
        function ResizeObserver(callback) {
            if (!(this instanceof ResizeObserver)) {
                throw new TypeError('Cannot call a class as a function.');
            }
            if (!arguments.length) {
                throw new TypeError('1 argument required, but only 0 present.');
            }
            var controller = ResizeObserverController.getInstance();
            var observer = new ResizeObserverSPI(callback, controller, this);
            observers.set(this, observer);
        }
        return ResizeObserver;
    }());
    // Expose public methods of ResizeObserver.
    [
        'observe',
        'unobserve',
        'disconnect'
    ].forEach(function (method) {
        ResizeObserver.prototype[method] = function () {
            var _a;
            return (_a = observers.get(this))[method].apply(_a, arguments);
        };
    });

    var index = (function () {
        // Export existing implementation if available.
        if (typeof global$1.ResizeObserver !== 'undefined') {
            return global$1.ResizeObserver;
        }
        return ResizeObserver;
    })();

    return index;

})));

}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})

},{}],123:[function(require,module,exports){
'use strict';

exports.__esModule = true;
function isAbsolute(pathname) {
  return pathname.charAt(0) === '/';
}

// About 1.5x faster than the two-arg version of Array#splice()
function spliceOne(list, index) {
  for (var i = index, k = i + 1, n = list.length; k < n; i += 1, k += 1) {
    list[i] = list[k];
  }

  list.pop();
}

// This implementation is based heavily on node's url.parse
function resolvePathname(to) {
  var from = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';

  var toParts = to && to.split('/') || [];
  var fromParts = from && from.split('/') || [];

  var isToAbs = to && isAbsolute(to);
  var isFromAbs = from && isAbsolute(from);
  var mustEndAbs = isToAbs || isFromAbs;

  if (to && isAbsolute(to)) {
    // to is absolute
    fromParts = toParts;
  } else if (toParts.length) {
    // to is relative, drop the filename
    fromParts.pop();
    fromParts = fromParts.concat(toParts);
  }

  if (!fromParts.length) return '/';

  var hasTrailingSlash = void 0;
  if (fromParts.length) {
    var last = fromParts[fromParts.length - 1];
    hasTrailingSlash = last === '.' || last === '..' || last === '';
  } else {
    hasTrailingSlash = false;
  }

  var up = 0;
  for (var i = fromParts.length; i >= 0; i--) {
    var part = fromParts[i];

    if (part === '.') {
      spliceOne(fromParts, i);
    } else if (part === '..') {
      spliceOne(fromParts, i);
      up++;
    } else if (up) {
      spliceOne(fromParts, i);
      up--;
    }
  }

  if (!mustEndAbs) for (; up--; up) {
    fromParts.unshift('..');
  }if (mustEndAbs && fromParts[0] !== '' && (!fromParts[0] || !isAbsolute(fromParts[0]))) fromParts.unshift('');

  var result = fromParts.join('/');

  if (hasTrailingSlash && result.substr(-1) !== '/') result += '/';

  return result;
}

exports.default = resolvePathname;
module.exports = exports['default'];
},{}],124:[function(require,module,exports){
(function (process){
'use strict';

var isProduction = process.env.NODE_ENV === 'production';
var prefix = 'Invariant failed';
function invariant(condition, message) {
  if (condition) {
    return;
  }

  if (isProduction) {
    throw new Error(prefix);
  } else {
    throw new Error(prefix + ": " + (message || ''));
  }
}

module.exports = invariant;

}).call(this,require('_process'))

},{"_process":46}],125:[function(require,module,exports){
(function (process){
'use strict';

var isProduction = process.env.NODE_ENV === 'production';
function warning(condition, message) {
  if (!isProduction) {
    if (condition) {
      return;
    }

    var text = "Warning: " + message;

    if (typeof console !== 'undefined') {
      console.warn(text);
    }

    try {
      throw Error(text);
    } catch (x) {}
  }
}

module.exports = warning;

}).call(this,require('_process'))

},{"_process":46}],126:[function(require,module,exports){
'use strict';

exports.__esModule = true;

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

function valueEqual(a, b) {
  if (a === b) return true;

  if (a == null || b == null) return false;

  if (Array.isArray(a)) {
    return Array.isArray(b) && a.length === b.length && a.every(function (item, index) {
      return valueEqual(item, b[index]);
    });
  }

  var aType = typeof a === 'undefined' ? 'undefined' : _typeof(a);
  var bType = typeof b === 'undefined' ? 'undefined' : _typeof(b);

  if (aType !== bType) return false;

  if (aType === 'object') {
    var aValue = a.valueOf();
    var bValue = b.valueOf();

    if (aValue !== a || bValue !== b) return valueEqual(aValue, bValue);

    var aKeys = Object.keys(a);
    var bKeys = Object.keys(b);

    if (aKeys.length !== bKeys.length) return false;

    return aKeys.every(function (key) {
      return valueEqual(a[key], b[key]);
    });
  }

  return false;
}

exports.default = valueEqual;
module.exports = exports['default'];
},{}],127:[function(require,module,exports){
(function (process){
/**
 * Copyright 2014-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 */

'use strict';

/**
 * Similar to invariant but only logs a warning if the condition is not met.
 * This can be used to log issues in development environments in critical
 * paths. Removing the logging code for production environments will keep the
 * same logic and follow the same code paths.
 */

var warning = function() {};

if (process.env.NODE_ENV !== 'production') {
  warning = function(condition, format, args) {
    var len = arguments.length;
    args = new Array(len > 2 ? len - 2 : 0);
    for (var key = 2; key < len; key++) {
      args[key - 2] = arguments[key];
    }
    if (format === undefined) {
      throw new Error(
        '`warning(condition, format, ...args)` requires a warning ' +
        'message argument'
      );
    }

    if (format.length < 10 || (/^[s\W]*$/).test(format)) {
      throw new Error(
        'The warning format should be able to uniquely identify this ' +
        'warning. Please, use a more descriptive format than: ' + format
      );
    }

    if (!condition) {
      var argIndex = 0;
      var message = 'Warning: ' +
        format.replace(/%s/g, function() {
          return args[argIndex++];
        });
      if (typeof console !== 'undefined') {
        console.error(message);
      }
      try {
        // This error was thrown as a convenience so that you can use this stack
        // to find the callsite that caused this warning to fire.
        throw new Error(message);
      } catch(x) {}
    }
  };
}

module.exports = warning;

}).call(this,require('_process'))

},{"_process":46}]},{},[19])
//# sourceMappingURL=data:application/json;charset:utf-8;base64,
